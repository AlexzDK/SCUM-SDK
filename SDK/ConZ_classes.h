#pragma once

// Name: S, Version: N


/*!!DEFINE!!*/

/*!!HELPER_DEF!!*/

/*!!HELPER_INC!!*/

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
//---------------------------------------------------------------------------
// Classes
//---------------------------------------------------------------------------

// Class ConZ.AchievementsManagerClient
// 0x0098 (FullSize[0x02B8] - InheritedSize[0x0220])
class AAchievementsManagerClient : public AActor
{
public:
	unsigned char                                      UnknownData_ZWGT[0x98];                                    // 0x0220(0x0098) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AchievementsManagerClient"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AchievementsManagerServer
// 0x0078 (FullSize[0x0298] - InheritedSize[0x0220])
class AAchievementsManagerServer : public AActor
{
public:
	unsigned char                                      UnknownData_N69D[0x78];                                    // 0x0220(0x0078) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AchievementsManagerServer"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DesignableUserWidget
// 0x0018 (FullSize[0x0278] - InheritedSize[0x0260])
class UDesignableUserWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData_UTIA[0x18];                                    // 0x0260(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DesignableUserWidget"));
		return ptr;
	}



	void SetDisplayLabelName(const struct FString& displayLabelName);
	void SetDefaultPosition(const struct FVector2D& Value);
	void OnSynchronizeProperties();
	struct FString GetDisplayLabelName();
	struct FVector2D GetDefaultPosition();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ActionProgressWidget
// 0x0050 (FullSize[0x02C8] - InheritedSize[0x0278])
class UActionProgressWidget : public UDesignableUserWidget
{
public:
	struct FScriptMulticastDelegate                    ActionProgressFinishedEvent;                               // 0x0278(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    ActionProgressCancelledEvent;                              // 0x0288(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               CanCancel;                                                 // 0x0298(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0Z1X[0xB];                                     // 0x0299(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _currentTime;                                              // 0x02A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _duration;                                                 // 0x02A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _manualMode;                                               // 0x02AC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RT2F[0x1B];                                    // 0x02AD(0x001B) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ActionProgressWidget"));
		return ptr;
	}



	void UnPauseProgress();
	void SetProgress(float progress);
	void PauseProgress();
	void OnActionProgressFinishedEvent__DelegateSignature();
	void OnActionProgressCancelledEvent__DelegateSignature();
	void ExecuteAction();
	void CancelAction();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ActorStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UActorStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ActorStatics"));
		return ptr;
	}



	class UActorComponent* GetActorComponentByName(class AActor* Actor, const struct FName& Name);
	struct FVector GetActorBoundsCenter(class AActor* Actor, bool onlyCollidingComponents);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Sickness
// 0x0188 (FullSize[0x01B0] - InheritedSize[0x0028])
class USickness : public UObject
{
public:
	unsigned char                                      UnknownData_52QU[0x188];                                   // 0x0028(0x0188) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Sickness"));
		return ptr;
	}



	void SetShouldDisplayState(bool Value);
	ConZ_ESicknessState GetState();
	bool GetShouldDisplayState();
	int GetPhase();
	struct FText GetCaption();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Addiction
// 0x0000 (FullSize[0x01B0] - InheritedSize[0x01B0])
class UAddiction : public USickness
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Addiction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand
// 0x0058 (FullSize[0x0080] - InheritedSize[0x0028])
class UAdminCommand : public UObject
{
public:
	struct FString                                     _verb;                                                     // 0x0028(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FAdminCommandArgumentDescription>    _argumentDescriptions;                                     // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	int                                                _numberOfRequiredArguments;                                // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isEnabled;                                                // 0x004C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isEnabledInShippingBuild;                                 // 0x004D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isAdminStatusRequired;                                    // 0x004E(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isDeveloperStatusRequired;                                // 0x004F(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldExecuteOnServer;                                    // 0x0050(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldExecuteOnClient;                                    // 0x0051(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldDisableSingleplayerAchievementsIfExecuted;          // 0x0052(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GVJW[0x5];                                     // 0x0053(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     _description;                                              // 0x0058(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_88YO[0x18];                                    // 0x0068(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand"));
		return ptr;
	}



	bool Execute(TArray<struct FString> arguments);
	bool CanEverBeExecuted(class APlayerController* Controller, struct FString* reasonIfNot);
	bool CanBeExecuted(class APlayerController* Controller, struct FString* reasonIfNot);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_AddOrRemoveWidget
// 0x0050 (FullSize[0x00D0] - InheritedSize[0x0080])
class UAdminCommand_AddOrRemoveWidget : public UAdminCommand
{
public:
	TMap<struct FName, class UClass*>                  _widgetClassesByName;                                      // 0x0080(0x0050) (Edit, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_AddOrRemoveWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_AddPrisonerBodyEffect
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_AddPrisonerBodyEffect : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_AddPrisonerBodyEffect"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_AdminLight
// 0x0010 (FullSize[0x0090] - InheritedSize[0x0080])
class UAdminCommand_AdminLight : public UAdminCommand
{
public:
	class UClass*                                      _adminLightComponent;                                      // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxIntensityMultiplier;                                   // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RBVL[0x4];                                     // 0x008C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_AdminLight"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_Announce
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_Announce : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_Announce"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_BanPlayer
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_BanPlayer : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_BanPlayer"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_CancelVote
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_CancelVote : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_CancelVote"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_CharacterSpawner
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_CharacterSpawner : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_CharacterSpawner"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_ClearFakeName
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_ClearFakeName : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_ClearFakeName"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_CompleteMission
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_CompleteMission : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_CompleteMission"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_ComputeBodyComposition
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_ComputeBodyComposition : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_ComputeBodyComposition"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_CrashMajestically
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_CrashMajestically : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_CrashMajestically"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_DemolitionSkillDebug
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_DemolitionSkillDebug : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_DemolitionSkillDebug"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_DestroyAllVehicles
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_DestroyAllVehicles : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_DestroyAllVehicles"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_DestroyVehicle
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_DestroyVehicle : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_DestroyVehicle"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_DistanceDebug
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_DistanceDebug : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_DistanceDebug"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_DoorDebug
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_DoorDebug : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_DoorDebug"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_DumpAllSquadsInfoList
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_DumpAllSquadsInfoList : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_DumpAllSquadsInfoList"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_EndTournamentMode
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_EndTournamentMode : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_EndTournamentMode"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_ExecuteConsoleCommand
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_ExecuteConsoleCommand : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_ExecuteConsoleCommand"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_FindSquadMember
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_FindSquadMember : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_FindSquadMember"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_Immortality
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_Immortality : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_Immortality"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_KickPlayer
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_KickPlayer : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_KickPlayer"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_Knockout
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_Knockout : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_Knockout"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_LeaveCorpse
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_LeaveCorpse : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_LeaveCorpse"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_ListMutedPlayers
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_ListMutedPlayers : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_ListMutedPlayers"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_ListPlayers
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_ListPlayers : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_ListPlayers"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_ListPrimaryAssets
// 0x0058 (FullSize[0x00D8] - InheritedSize[0x0080])
class UAdminCommand_ListPrimaryAssets : public UAdminCommand
{
public:
	struct FPrimaryAssetType                           _primaryAssetType;                                         // 0x0080(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _primaryAssetsToExclude[0x50];                             // 0x0088(0x0050) UNKNOWN PROPERTY: SetProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_ListPrimaryAssets"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_ListSilencedPlayers
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_ListSilencedPlayers : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_ListSilencedPlayers"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_ListSpawnedAnimals
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_ListSpawnedAnimals : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_ListSpawnedAnimals"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_ListSpawnedVehicles
// 0x00E0 (FullSize[0x0160] - InheritedSize[0x0080])
class UAdminCommand_ListSpawnedVehicles : public UAdminCommand
{
public:
	struct FGameplayTagContainer                       _vehicleSpawnGroupsByCategory[0x7];                        // 0x0080(0x00E0) (Edit, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_ListSpawnedVehicles"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_ListSquadMembers
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_ListSquadMembers : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_ListSquadMembers"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_ListSquads
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_ListSquads : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_ListSquads"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_Location
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_Location : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_Location"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_LogCharacterSpawner
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_LogCharacterSpawner : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_LogCharacterSpawner"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_Loot
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_Loot : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_Loot"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_MutePlayer
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_MutePlayer : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_MutePlayer"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_PlaceableActorDebug
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_PlaceableActorDebug : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_PlaceableActorDebug"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_PrisonerTakeDamage
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_PrisonerTakeDamage : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_PrisonerTakeDamage"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_ReloadCustomMapConfig
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_ReloadCustomMapConfig : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_ReloadCustomMapConfig"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_ReloadVoteConfig
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_ReloadVoteConfig : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_ReloadVoteConfig"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_RenameVehicle
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_RenameVehicle : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_RenameVehicle"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_ResetAchievements
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_ResetAchievements : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_ResetAchievements"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_ResetMissionEnabled
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_ResetMissionEnabled : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_ResetMissionEnabled"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_ResetSquadInfo
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_ResetSquadInfo : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_ResetSquadInfo"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_ScheduleWorldEvent
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_ScheduleWorldEvent : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_ScheduleWorldEvent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SendNotification
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_SendNotification : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SendNotification"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SetDecayTimeDilation
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_SetDecayTimeDilation : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SetDecayTimeDilation"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SetFacialHairLength
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_SetFacialHairLength : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SetFacialHairLength"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SetFakeName
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_SetFakeName : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SetFakeName"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SetFamePoints
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_SetFamePoints : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SetFamePoints"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SetFamePointsToAll
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_SetFamePointsToAll : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SetFamePointsToAll"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SetFamePointsToAllOnline
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_SetFamePointsToAllOnline : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SetFamePointsToAllOnline"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SetGodMode
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_SetGodMode : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SetGodMode"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SetHairLength
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_SetHairLength : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SetHairLength"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SetHealthToItemInHands
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_SetHealthToItemInHands : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SetHealthToItemInHands"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SetInfiniteAmmo
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_SetInfiniteAmmo : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SetInfiniteAmmo"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SetInfiniteStamina
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_SetInfiniteStamina : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SetInfiniteStamina"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SetMalfunctionProbability
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_SetMalfunctionProbability : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SetMalfunctionProbability"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SetMountedVehicleProperty
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_SetMountedVehicleProperty : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SetMountedVehicleProperty"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SetPrisonerProperty
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_SetPrisonerProperty : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SetPrisonerProperty"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SetSkillLevel
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_SetSkillLevel : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SetSkillLevel"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SetStamina
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_SetStamina : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SetStamina"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SetTime
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_SetTime : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SetTime"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SetWeather
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_SetWeather : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SetWeather"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_ShouldChainTeleportToVehicles
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_ShouldChainTeleportToVehicles : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_ShouldChainTeleportToVehicles"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_ShouldShowOtherPlayerInfo
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_ShouldShowOtherPlayerInfo : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_ShouldShowOtherPlayerInfo"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_ShouldShowOtherPlayerLocations
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_ShouldShowOtherPlayerLocations : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_ShouldShowOtherPlayerLocations"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_ShowBaseBuildingDebug
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_ShowBaseBuildingDebug : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_ShowBaseBuildingDebug"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_ShowWeaponInfo
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_ShowWeaponInfo : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_ShowWeaponInfo"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SilencePlayer
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_SilencePlayer : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SilencePlayer"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_Sleep
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_Sleep : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_Sleep"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SpawnPrimaryActorAsset
// 0x0070 (FullSize[0x00F0] - InheritedSize[0x0080])
class UAdminCommand_SpawnPrimaryActorAsset : public UAdminCommand
{
public:
	struct FPrimaryAssetType                           _primaryAssetType;                                         // 0x0080(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _primaryAssetsToExclude[0x50];                             // 0x0088(0x0050) UNKNOWN PROPERTY: SetProperty
	int                                                _countArgumentMinValue;                                    // 0x00D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _countArgumentMaxValue;                                    // 0x00DC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _spawnOffset;                                              // 0x00E0(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_757P[0x4];                                     // 0x00EC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SpawnPrimaryActorAsset"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SpawnItem
// 0x0010 (FullSize[0x0100] - InheritedSize[0x00F0])
class UAdminCommand_SpawnItem : public UAdminCommand_SpawnPrimaryActorAsset
{
public:
	unsigned char                                      UnknownData_IHDB[0x10];                                    // 0x00F0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SpawnItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SpawnRandomPrimaryActorAsset
// 0x0000 (FullSize[0x00F0] - InheritedSize[0x00F0])
class UAdminCommand_SpawnRandomPrimaryActorAsset : public UAdminCommand_SpawnPrimaryActorAsset
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SpawnRandomPrimaryActorAsset"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_SpawnVehicle
// 0x0000 (FullSize[0x00F0] - InheritedSize[0x00F0])
class UAdminCommand_SpawnVehicle : public UAdminCommand_SpawnPrimaryActorAsset
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_SpawnVehicle"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_StartTournamentMode
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_StartTournamentMode : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_StartTournamentMode"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_Teleport
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_Teleport : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_Teleport"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_TeleportTo
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_TeleportTo : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_TeleportTo"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_TeleportTo3pm
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_TeleportTo3pm : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_TeleportTo3pm"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_TeleportToMe
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_TeleportToMe : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_TeleportToMe"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_TeleportToVehicle
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_TeleportToVehicle : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_TeleportToVehicle"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_TrackShotsFired
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_TrackShotsFired : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_TrackShotsFired"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_TrapsDebug
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_TrapsDebug : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_TrapsDebug"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_UnbanPlayer
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_UnbanPlayer : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_UnbanPlayer"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_UnmutePlayer
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_UnmutePlayer : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_UnmutePlayer"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_UnsilencePlayer
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_UnsilencePlayer : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_UnsilencePlayer"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_VisualizeBulletTrajectories
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_VisualizeBulletTrajectories : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_VisualizeBulletTrajectories"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_VisualizePlayerAiming
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_VisualizePlayerAiming : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_VisualizePlayerAiming"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_VisualizeZombieLocation
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_VisualizeZombieLocation : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_VisualizeZombieLocation"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommand_Vote
// 0x0000 (FullSize[0x0080] - InheritedSize[0x0080])
class UAdminCommand_Vote : public UAdminCommand
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommand_Vote"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommandArgumentCompletion
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UAdminCommandArgumentCompletion : public UObject
{
public:
	bool                                               _canCompletionValuesBeCached;                              // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EOBJ[0x7];                                     // 0x0029(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommandArgumentCompletion"));
		return ptr;
	}



	void GetCompletionValues(TArray<struct FString>* Result);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommandArgumentCompletion_Constant
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UAdminCommandArgumentCompletion_Constant : public UAdminCommandArgumentCompletion
{
public:
	TArray<struct FString>                             _completionValues;                                         // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommandArgumentCompletion_Constant"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommandArgumentCompletion_Enum
// 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
class UAdminCommandArgumentCompletion_Enum : public UAdminCommandArgumentCompletion
{
public:
	struct FName                                       _enum;                                                     // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _excludeNoneEnumerator;                                    // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _excludeCountEnumerator;                                   // 0x0039(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _excludeAutoGeneratedEnumerator;                           // 0x003A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V3C4[0x5];                                     // 0x003B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _additionalEnumeratorsToExclude[0x50];                     // 0x003B(0x0050) UNKNOWN PROPERTY: SetProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommandArgumentCompletion_Enum"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommandArgumentCompletion_Player
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAdminCommandArgumentCompletion_Player : public UAdminCommandArgumentCompletion
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommandArgumentCompletion_Player"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommandArgumentCompletion_PrimaryAsset
// 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
class UAdminCommandArgumentCompletion_PrimaryAsset : public UAdminCommandArgumentCompletion
{
public:
	struct FPrimaryAssetType                           _primaryAssetType;                                         // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _primaryAssetsToExclude[0x50];                             // 0x0038(0x0050) UNKNOWN PROPERTY: SetProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommandArgumentCompletion_PrimaryAsset"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommandArgumentCompletion_Skill
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAdminCommandArgumentCompletion_Skill : public UAdminCommandArgumentCompletion
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommandArgumentCompletion_Skill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommandArgumentCompletion_Squad
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAdminCommandArgumentCompletion_Squad : public UAdminCommandArgumentCompletion
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommandArgumentCompletion_Squad"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommandArgumentCompletion_Widget
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UAdminCommandArgumentCompletion_Widget : public UAdminCommandArgumentCompletion
{
public:
	class UClass*                                      _commandClass;                                             // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommandArgumentCompletion_Widget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommandCompletionManager
// 0x00B0 (FullSize[0x00D8] - InheritedSize[0x0028])
class UAdminCommandCompletionManager : public UObject
{
public:
	TMap<struct FString, class UClass*>                _commands;                                                 // 0x0028(0x0050) (UObjectWrapper, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9INI[0x60];                                    // 0x0078(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommandCompletionManager"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommandRegistry
// 0x0060 (FullSize[0x0088] - InheritedSize[0x0028])
class UAdminCommandRegistry : public UObject
{
public:
	TArray<class UClass*>                              _commands;                                                 // 0x0028(0x0010) (ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ORGD[0x50];                                    // 0x0038(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommandRegistry"));
		return ptr;
	}



	bool UnregisterCommand(class UClass* Command);
	void UnregisterAllCommands();
	bool RegisterCommand(class UClass* Command);
	bool IsCommandRegistered(class UClass* Command);
	TArray<class UClass*> GetCommands();
	class UClass* GetCommandByVerb(const struct FString& verb);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminCommandsStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UAdminCommandsStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminCommandsStatics"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AdminLight
// 0x0014 (FullSize[0x0370] - InheritedSize[0x035C])
class UAdminLight : public UPointLightComponent
{
public:
	unsigned char                                      UnknownData_UT99[0x4];                                     // 0x035C(0x0004) Fix Super Size
	class UCurveFloat*                                 _intensityVersusTimeOfDay;                                 // 0x0360(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OA3D[0x8];                                     // 0x0368(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AdminLight"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AIDetectionTimerHandler
// 0x0050 (FullSize[0x0270] - InheritedSize[0x0220])
class AAIDetectionTimerHandler : public AActor
{
public:
	unsigned char                                      UnknownData_0AP4[0x50];                                    // 0x0220(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AIDetectionTimerHandler"));
		return ptr;
	}



	void OnDestroyedEvent(class AActor* DestroyedActor);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AIStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UAIStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AIStatics"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AlcoholismAddiction
// 0x0010 (FullSize[0x01C0] - InheritedSize[0x01B0])
class UAlcoholismAddiction : public UAddiction
{
public:
	unsigned char                                      UnknownData_XIYS[0x10];                                    // 0x01B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AlcoholismAddiction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Disease
// 0x0000 (FullSize[0x01B0] - InheritedSize[0x01B0])
class UDisease : public USickness
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Disease"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Poisoning
// 0x0000 (FullSize[0x01B0] - InheritedSize[0x01B0])
class UPoisoning : public UDisease
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Poisoning"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AmanitaMuscariaPoisoning
// 0x0010 (FullSize[0x01C0] - InheritedSize[0x01B0])
class UAmanitaMuscariaPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData_C98C[0x10];                                    // 0x01B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AmanitaMuscariaPoisoning"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AmanitaPantheriaPoisoning
// 0x0008 (FullSize[0x01B8] - InheritedSize[0x01B0])
class UAmanitaPantheriaPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData_XFOB[0x8];                                     // 0x01B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AmanitaPantheriaPoisoning"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AmanitaPhalloidesPoisoning
// 0x0008 (FullSize[0x01B8] - InheritedSize[0x01B0])
class UAmanitaPhalloidesPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData_FLY1[0x8];                                     // 0x01B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AmanitaPhalloidesPoisoning"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AmanitaVirosaPoisoning
// 0x0010 (FullSize[0x01C0] - InheritedSize[0x01B0])
class UAmanitaVirosaPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData_QDSD[0x10];                                    // 0x01B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AmanitaVirosaPoisoning"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AmbientSounds
// 0x0100 (FullSize[0x0320] - InheritedSize[0x0220])
class AAmbientSounds : public AActor
{
public:
	float                                              MinCameraLocationDeltaForUpdate;                           // 0x0220(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                ForestMask;                                                // 0x0224(0x0008) (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ForestMaskSearchRadius;                                    // 0x022C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ForestMaskTopLeftWorld;                                    // 0x0230(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ForestMaskBottomRightWorld;                                // 0x023C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               CoastalForestAudioEvent;                                   // 0x0248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ContinentalForest1AudioEvent;                              // 0x0250(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ContinentalForest2AudioEvent;                              // 0x0258(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ContinentalForest3AudioEvent;                              // 0x0260(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               UndergroundAudioEvent;                                     // 0x0268(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                CityMask;                                                  // 0x0270(0x0008) (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CityMaskSearchRadius;                                      // 0x0278(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     CityMaskTopLeftWorld;                                      // 0x027C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     CityMaskBottomRightWorld;                                  // 0x0288(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SI50[0x4];                                     // 0x0294(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               CityAudioEvent;                                            // 0x0298(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               LargeVillageAudioEvent;                                    // 0x02A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               SmallVillageAudioEvent;                                    // 0x02A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               IndustrialAreaAudioEvent;                                  // 0x02B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BFGY[0x68];                                    // 0x02B8(0x0068) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AmbientSounds"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Item
// 0x0538 (FullSize[0x0758] - InheritedSize[0x0220])
class AItem : public AActor
{
public:
	unsigned char                                      UnknownData_FNTO[0xA0];                                    // 0x0220(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    DebugTextChanged;                                          // 0x02C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    PickedUpState;                                             // 0x02D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnStaticMeshChanged;                                       // 0x02E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSkeletalMeshChanged;                                     // 0x02F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OBG0[0x10];                                    // 0x0300(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      AttachmentSocketMountType;                                 // 0x0310(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAttachmentSocket>                   AttachmentSockets;                                         // 0x0318(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UClass*                                      HolsterAttachmentSocketMountType;                          // 0x0328(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UClass*, struct FAttachmentSocketOffset> AttachmentSocketsOffset;                                   // 0x0330(0x0050) (Edit, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        Mesh;                                                      // 0x0380(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  InventoryIcon;                                             // 0x0388(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  InventoryIconInHands;                                      // 0x0390(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  OutsideInventoryIcon;                                      // 0x0398(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       Caption;                                                   // 0x03A0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint32_t                                           SizeX;                                                     // 0x03B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           SizeY;                                                     // 0x03BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UCraftingItemTag*>                    InventoryWhiteList;                                        // 0x03C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, DuplicateTransient, NativeAccessSpecifierPublic)
	TArray<class UCraftingItemTag*>                    InventoryBlackList;                                        // 0x03D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, DuplicateTransient, NativeAccessSpecifierPublic)
	bool                                               IgnoreMaxContainedWeight;                                  // 0x03E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JL31[0x3];                                     // 0x03E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxContainedWeight;                                        // 0x03E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxWaterWeightAsRatioOfWeight;                             // 0x03E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsIgnoredBySpawners;                                       // 0x03EC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7JKX[0x3];                                     // 0x03ED(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFloatInterval                              SpawnTimeoutPerPlayer;                                     // 0x03F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FItemLocation                               ItemLocation;                                              // 0x03F8(0x000E) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	ConZ_EItemRarity                                   Rarity;                                                    // 0x0406(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8OZW[0x1];                                     // 0x0407(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       ItemSpawnTypes;                                            // 0x0408(0x0020) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTag                                ItemSpawnGroup;                                            // 0x0428(0x0008) (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SpawnLocationOffset;                                       // 0x0430(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    SpawnRotationOffset;                                       // 0x043C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              SpawnRotationRandomization;                                // 0x0448(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldOverrideUsageWhenSpawnedBySpawners;                  // 0x044C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DLM8[0x3];                                     // 0x044D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              InitialUsageWhenSpawnedBySpawners;                         // 0x0450(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RandomizeUsageWhenSpawnedBySpawners;                       // 0x0454(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Uses;                                                      // 0x0458(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_75A0[0x4];                                     // 0x045C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       Description;                                               // 0x0460(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                              DamageOnUse;                                               // 0x0478(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageOverTime;                                            // 0x047C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutoDestructTime;                                          // 0x0480(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EItemExhausted                                IfExhausted;                                               // 0x0484(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EInteractionType                              CraftingInteraction;                                       // 0x0485(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JUH0[0x2];                                     // 0x0486(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UChoppingRecipeDataAsset*                    ChoppingRecipeDataAsset;                                   // 0x0488(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       PickupCaption;                                             // 0x0490(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                               EnableGlowOnBeginPlay;                                     // 0x04A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               EnableAwarenessGlow;                                       // 0x04A9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               EnableHoverGlow;                                           // 0x04AA(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X9R5[0x5];                                     // 0x04AB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UBaseItemTag*>                        ItemTags;                                                  // 0x04B0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UBaseItemTag*>                        OwnedItemTags;                                             // 0x04C0(0x0010) (Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UBaseItemTag*>                        BurriedItemTags;                                           // 0x04D0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	ConZ_ENoiseLevel                                   NoiseLevel;                                                // 0x04E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9IL7[0x7];                                     // 0x04E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FItemMotionNoise                            MotionNoise;                                               // 0x04E8(0x0008) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FItemInventoryHandlingSounds                InventoryHandlingSounds;                                   // 0x04F0(0x0008) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               DestroyedSound;                                            // 0x04F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5FCK[0x18];                                    // 0x0500(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UThrowingComponent*                          ThrowingComponent;                                         // 0x0518(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldDestroyContainedItemsOnDestroyEvent;                 // 0x0520(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XTKY[0x3];                                     // 0x0521(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGuid                                       _itemUniqueIdOverride;                                     // 0x0524(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                       _itemUniqueId;                                             // 0x0534(0x0010) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ADR7[0x34];                                    // 0x0544(0x0034) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UItemComponent*>                      _itemComponents;                                           // 0x0578(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UStaticMesh*                                 _placementMeshOverride;                                    // 0x0588(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                      _attachParentObject;                                       // 0x0590(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVisibilityReplication                      _visibilityReplication;                                    // 0x0598(0x0008) (Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BMT1[0x34];                                    // 0x05A0(0x0034) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _waterWeightReplicated;                                    // 0x05D4(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NQX6[0x3];                                     // 0x05D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Fuel;                                                      // 0x05D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              Weight;                                                    // 0x05DC(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _health;                                                   // 0x05E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxHealth;                                                // 0x05E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _defaultMaxHealth;                                         // 0x05E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint16_t                                           _healthReplicated;                                         // 0x05EC(0x0002) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6T6F[0x2];                                     // 0x05EE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _weightUsed;                                               // 0x05F0(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isCrafted;                                                // 0x05F4(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XEP4[0x3];                                     // 0x05F5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _uncraftTime;                                              // 0x05F8(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isBusy;                                                   // 0x05FC(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _examined;                                                 // 0x05FD(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ASCJ[0x22];                                    // 0x05FE(0x0022) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneComponent*                             _tempSceneComponent;                                       // 0x0620(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _useHandCorrections;                                       // 0x0628(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldBeMaintained;                                       // 0x0629(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0UJ0[0xE];                                     // 0x062A(0x000E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int64_t                                            _expirationTime;                                           // 0x0638(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canBeDropped;                                             // 0x0640(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canContainNonEmptyItems;                                  // 0x0641(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _blinkOnSpawn;                                             // 0x0642(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isPartOfEvent;                                            // 0x0643(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _vicinityCheckDistance;                                    // 0x0644(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FInventoryStackData>                 _stacks;                                                   // 0x0648(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TArray<class UClass*>                              _stackableClasses;                                         // 0x0658(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	int                                                _maxNumOfStacks;                                           // 0x0668(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5BG0[0x4];                                     // 0x066C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AItem*                                       _stackExhaustedSuccessorItem;                              // 0x0670(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TScriptInterface<class UInventoryContainer>        _parentContainer;                                          // 0x0678(0x0010) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TScriptInterface<class UInventoryNode>             _parentInventoryNode;                                      // 0x0688(0x0010) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	bool                                               _canEverBeVirtualized;                                     // 0x0698(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _hasHighLoadPriorityInVirtualization;                      // 0x0699(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZZ9N[0x2];                                     // 0x069A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _virtualizationDistance;                                   // 0x069C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canPlaceItemsOn;                                          // 0x06A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldShowStatusWidget;                                   // 0x06A1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canBeNamed;                                               // 0x06A2(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SISU[0x1];                                     // 0x06A3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _shouldEverBeVisibleInVicinity;                            // 0x06A4(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NKWI[0x3];                                     // 0x06A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UItemStatusWidget>            _itemStatusWidget;                                         // 0x06A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UChangeTextWidget>            _editTextWidget;                                           // 0x06B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     _playerGivenName;                                          // 0x06B8(0x0010) (Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_I4FN[0x10];                                    // 0x06C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _preferredDamagePerUpdate;                                 // 0x06D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UK8Q[0x14];                                    // 0x06DC(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FCraftingPart>                       _craftingParts;                                            // 0x06F0(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_D36L[0x18];                                    // 0x0700(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _itemLoadingWeightOverride;                                // 0x0718(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _containedDamageStartPercentage;                           // 0x071C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _throwingOffsetLocation;                                   // 0x0720(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _quickAccessIndex;                                         // 0x072C(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _twoHanded;                                                // 0x0730(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TTXP[0x3];                                     // 0x0731(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _resultHealthMultiplierWhenCraftingIngredient;             // 0x0734(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V4Q0[0x11];                                    // 0x0738(0x0011) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isSubjectToAllowMinesConfig;                              // 0x0749(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5438[0x6];                                     // 0x074A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UInventoryContainer2D*                       _inventoryContainer2D;                                     // 0x0750(0x0008) (BlueprintVisible, ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Item"));
		return ptr;
	}



	bool Use(class APrisoner* Prisoner, int usage, float usageWeight, bool Eat, float damageMultiplier);
	void UpdateVisuals(bool shouldHandleAging);
	void StopBlinking();
	void StaticMeshChangedDelegate__DelegateSignature(class AItem* Item);
	void StateChangedDelegate__DelegateSignature(class AItem* Item);
	void SkeletalMeshChangedDelegate__DelegateSignature(class AItem* Item);
	void SetWeight(float Value);
	void SetMaxHealth(float maxHealth);
	void SetHealthAndUsage(float health, int usage);
	void SetHealth(float health);
	void SetFuel(float Value);
	void Server_Throw(const struct FVector& ZeroBasedStartPosition, const struct FRotator& StartRotation, const struct FVector& StartVelocity);
	void Repair(float healthToRepair);
	TScriptInterface<class UInventoryNode> RemoveStacks(int stacksToSplit);
	void PickedUpStateDelegate__DelegateSignature(class AItem* Item, bool pickedUp);
	void OnRightClicked();
	void OnRep_WeightUsed();
	void OnRep_WaterWeight();
	void OnRep_Visibility();
	void OnRep_Stacks();
	void OnRep_QuickAccessIndex();
	void OnRep_ItemUniqueId();
	void OnRep_InventoryContainer2D();
	void OnRep_Health();
	void OnRep_Examined();
	void OnProjectileStop(const struct FHitResult& ImpactResult);
	void OnLocalPrisonerPanelsClosed();
	void OnLocalPrisonerHoveredActorChanged(class AActor* hoveredActor);
	void OnEditTextWidgetTextAccepted(class APrisoner* User, const struct FText& Text);
	void OnDetachedFromItem(class AItem* Item);
	void OnDestroyedEvent(class AActor* Self);
	void OnContainedItemDestroyed(class AActor* containedItem);
	void OnAttachedToItem(class AItem* Item);
	void NetMulticast_SpawnDestroyedEffects();
	void NetMulticast_SetPlayerGivenName(const struct FString& Value);
	void NetMulticast_SetActorDropLocationAndRotation(const struct FVector& Location, const struct FRotator& Rotation);
	void Multicast_UpdateExpirationTime(int64_t Time);
	void Multicast_Throw(const struct FVector& ZeroBasedStartPosition, const struct FRotator& StartRotation, const struct FVector& StartVelocity);
	bool HasPriorityForContainerItem(class AItem* containerItem);
	struct FWidgetDisplayInfo GetWidgetDisplayInfo();
	float GetWetness();
	float GetWeightUsed();
	float GetWeightRemained();
	float GetWeightPerUse();
	float GetWeight();
	float GetWaterWeight();
	int GetUsedSlots();
	float GetUsedMass();
	float GetTotalWeight();
	int GetTotalUses();
	int GetStacksCount();
	int GetSizeY();
	int GetSizeX();
	int GetRemainingUses();
	int GetRemaining();
	struct FText GetPublicDescription();
	ConZ_EPrisonerAnimationSet GetPrisonerAnimationSet();
	void GetObstructionTestCapsules(TArray<struct FItemObstructionTestCapsule>* capsules);
	float GetNormalizedHealth();
	float GetNoiseLoudnessWhenPickedUp();
	float GetNoiseLoudnessWhenDropped();
	float GetNoiseLoudnessOnGroundImpact();
	class UMeshComponent* GetMeshComponentForAttachmentToItem(class AItem* Item);
	class UMeshComponent* GetMeshComponent();
	float GetMaxHealth();
	bool GetIgnoreSupportingHandIK();
	float GetHealth();
	float GetFuel();
	float GetDefaultMaxHealth();
	float GetContainerDamagePercentage();
	TArray<class AItem*> GetAllContainedItems(bool recursive);
	struct FCharacterAndItemAnimation FindCharacterAndItemAnimation(class UObject* Context, ConZ_EPrisonerMontage prisonerMontageType);
	class UAnimMontage* FindAnimationMontage(class UObject* Context, ConZ_EPrisonerMontage prisonerMontageType);
	bool DropAt(const struct FVector& dropLocation, const struct FRotator& dropRotation);
	bool DropAround(class AActor* Actor, float Radius);
	void Drop(bool wasThrowed);
	void DetachFromAll();
	void DebugTextChangedDelegate__DelegateSignature(class AItem* Item);
	bool CanStackWith(class UObject* Item);
	bool CanStack();
	bool CanBeMeleeWeapon();
	bool CanBeDroppedBy(class AConZCharacter* Character);
	bool CanBeCraftedByCharactrer(class ACharacter* Character);
	bool CanAutoAddItem(class AItem* Item, unsigned char* column, unsigned char* row);
	bool CanAddItem(class AItem* Item, unsigned char column, unsigned char row);
	void Blink(float Duration);
	bool AutoAddItemToInventoryNode(const TScriptInterface<class UInventoryNode>& Item);
	bool AttachToCharacterHands(class AConZCharacter* Character);
	void AddStack(const TScriptInterface<class UInventoryNode>& Item);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AmmunitionItem
// 0x0048 (FullSize[0x07A0] - InheritedSize[0x0758])
class AAmmunitionItem : public AItem
{
public:
	struct FGameplayTag                                AmmunitionTag;                                             // 0x0758(0x0008) (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     AmmunitionTypeString;                                      // 0x0760(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      projectileClass;                                           // 0x0770(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 CartridgeMesh;                                             // 0x0778(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 CasingMesh;                                                // 0x0780(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WeaponSpreadMultiplier;                                    // 0x0788(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxAmmoCount;                                              // 0x078C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                _ammoCount;                                                // 0x0790(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _ammoCountOwnerHelper;                                     // 0x0794(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CKPR[0x8];                                     // 0x0798(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AmmunitionItem"));
		return ptr;
	}



	void SetAmmoCount(int count, ConZ_ERPCType broadcastRPCType);
	void OnRep_AmmoCountOwnerHelper();
	void OnRep_AmmoCount();
	void NetMulticast_SetAmmoCount(int count);
	float GetSpreadMultiplierForWeapon(class AWeapon* Weapon);
	int GetAmmoCount();
	void Client_SetAmmoCount(int count);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AmmunitionArrow
// 0x0020 (FullSize[0x07C0] - InheritedSize[0x07A0])
class AAmmunitionArrow : public AAmmunitionItem
{
public:
	bool                                               DestroyOnHit;                                              // 0x07A0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PVWO[0x7];                                     // 0x07A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      BrokenArrowClass;                                          // 0x07A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              _muzzleVelocityMultiplier;                                 // 0x07B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _stiffnessFactor;                                          // 0x07B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _flightRotationCorrectionSpeed;                            // 0x07B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _elasticityFactorSpread;                                   // 0x07BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AmmunitionArrow"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AmmunitionBoneListAssetData
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UAmmunitionBoneListAssetData : public UAssetUserData
{
public:
	TArray<struct FName>                               CartridgeBoneNames;                                        // 0x0028(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AmmunitionBoneListAssetData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AmmunitionBoxItem
// 0x0018 (FullSize[0x0770] - InheritedSize[0x0758])
class AAmmunitionBoxItem : public AItem
{
public:
	class UClass*                                      AmmunitionItemClass;                                       // 0x0758(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ItemClassToSpawnWhenUnpacked;                              // 0x0760(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxAmmoCount;                                              // 0x0768(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                _ammoCount;                                                // 0x076C(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AmmunitionBoxItem"));
		return ptr;
	}



	void OnRep_AmmoCount();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZCharacter
// 0x0200 (FullSize[0x06C8] - InheritedSize[0x04C8])
class AConZCharacter : public ACharacter
{
public:
	unsigned char                                      UnknownData_D0WO[0x8];                                     // 0x04C8(0x0008) Fix Super Size
	unsigned char                                      UnknownData_8JU2[0x28];                                    // 0x04D0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      CorpseClass;                                               // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UChoppingRecipeDataAsset*                    ChoppingRecipeDataAsset;                                   // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IterativeChopping;                                         // 0x0508(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QSWM[0x7];                                     // 0x0509(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      ItemRepresentation;                                        // 0x0510(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       HeadBoneName;                                              // 0x0518(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FName, ConZ_EBodyPart>                 BodyPartByBoneName;                                        // 0x0520(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                              HeadHeight;                                                // 0x0570(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TorsoHeight;                                               // 0x0574(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldAutoUpdateEnvironmentDescription;                    // 0x0578(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DT2B[0x3];                                     // 0x0579(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EnvironmentDescriptionAutoUpdateInterval;                  // 0x057C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               EnteredIndoorEnvironmentAudioEvent;                        // 0x0580(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               EnteredOutdoorEnvironmentAudioEvent;                       // 0x0588(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               EnteredUndergroundAudioEvent;                              // 0x0590(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               LeftUndergroundAudioEvent;                                 // 0x0598(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D622[0x8];                                     // 0x05A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCharacterSoundComponent*                    SoundComponent;                                            // 0x05A8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1FUM[0x20];                                    // 0x05B0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ConZ_EGender                                       _gender;                                                   // 0x05D0(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_74FU[0x1F];                                    // 0x05D1(0x001F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ConZ_EConZPxDominanceGroup                         _physicsDominanceGroup;                                    // 0x05F0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_931W[0x3];                                     // 0x05F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _activeHitTimeToLive;                                      // 0x05F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 _hitDamageVsVehicleSpeedInKph;                             // 0x05F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 _knockoutChanceNormalizedVsVehicleSpeedInKph;              // 0x0600(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FHitEffects                                 _effectsOnVehicleHit[0x3];                                 // 0x0608(0x00A8) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SHQL[0x10];                                    // 0x06B0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ConZ_EAITeam                                       _aiTeam;                                                   // 0x06C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1TG2[0x7];                                     // 0x06C1(0x0007) Fix Super Size


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZCharacter"));
		return ptr;
	}



	void SetGender(ConZ_EGender Value);
	void SetEnvironmentDescription(const struct FEnvironmentDescription& Value);
	void Server_SetEnvironmentDescription(const struct FEnvironmentDescription& Value);
	void Server_HandleMeleeAttackCapsuleHit(class AConZCharacter* attacker, const struct FMeleeAttackCapsuleHitInfo& HitInfo);
	void ReceiveBeginHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool selfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnRep_Gender();
	void NetMulticast_HandleMeleeAttackCapsuleHit(class AConZCharacter* attacker, const struct FMeleeAttackCapsuleHitInfo& HitInfo);
	class ACorpse* LeaveCorpse();
	bool IsHeadBone(const struct FName& BoneName);
	bool IsConscious();
	bool IsAlive();
	class UCharacterSoundComponent* GetSoundComponent();
	ConZ_EDetectHitCollisionType GetHitReactBodyPartFromHitResult(const struct FHitResult& HitResult);
	ConZ_EDetectHitCollisionType GetHitReactBodyPartFromBodyPart(ConZ_EBodyPart Value);
	ConZ_EGender GetGender();
	struct FEnvironmentDescription GetEnvironmentDescription();
	ConZ_EBodyPart GetBodyPartFromBoneName(const struct FName& BoneName);
	void ActorHitCallback(class AActor* Actor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Animal2
// 0x0204 (FullSize[0x08CC] - InheritedSize[0x06C8])
class AAnimal2 : public AConZCharacter
{
public:
	struct FText                                       Species;                                                   // 0x06C8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	ConZ_EAnimalActivityCycle                          ActivityCycle;                                             // 0x06E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C5QA[0x3];                                     // 0x06E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              maxHealth;                                                 // 0x06E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHitReactComponent*                          HitReactComponent;                                         // 0x06E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                HitReactType;                                              // 0x06F0(0x0008) (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       EyesViewPointSocketName;                                   // 0x06F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      TrackingMarker;                                            // 0x0700(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      BloodTrailMarker;                                          // 0x0708(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrackingMarkerFrequency;                                   // 0x0710(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrackingMarkerDistance;                                    // 0x0714(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrackingMarkerRadius;                                      // 0x0718(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrackingMarkerDuration;                                    // 0x071C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BleedingSpeed;                                             // 0x0720(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LightWoundDamageAmount;                                    // 0x0724(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeleeBleedingThreshold;                                    // 0x0728(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StuckCheckDuration;                                        // 0x072C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StuckRadius;                                               // 0x0730(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnstuckMode;                                               // 0x0734(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AL23[0x3];                                     // 0x0735(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnDamageTaken;                                             // 0x0738(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              HeadBoneRotationSendToServerInterval;                      // 0x0748(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SightRange;                                                // 0x074C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               TiltMeshOnSlopes;                                          // 0x0750(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AdjustMeshHeightOnSlopes;                                  // 0x0751(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X3PZ[0x2];                                     // 0x0752(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MeshPositionLerpSpeed;                                     // 0x0754(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BleedInterval;                                             // 0x0758(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldGoToRagdolIfTakenDamage;                             // 0x075C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JBLC[0x3];                                     // 0x075D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RagdollDuration;                                           // 0x0760(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              _health;                                                   // 0x0764(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _woundDamage;                                              // 0x0768(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LWE3[0x10];                                    // 0x076C(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _packSizeMin;                                              // 0x077C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                _packSizeMax;                                              // 0x0780(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LB9Q[0x34];                                    // 0x0784(0x0034) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ConZ_EAnimalStance                                 _animalStance;                                             // 0x07B8(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8M4G[0x7];                                     // 0x07B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _shouldUpdateMovementSpeedRTPCValue;                       // 0x07C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OY1L[0x57];                                    // 0x07C1(0x0057) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _doNotCrumble;                                             // 0x0818(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WO4Q[0x3];                                     // 0x0819(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _meleeDamageMultiplier;                                    // 0x081C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _meleeDamageMultiplierPerBodyPart[0xC];                    // 0x0820(0x0030) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _throwingDamageMultiplier;                                 // 0x0850(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _throwingDamageMultiplierPerBodyPart[0xC];                 // 0x0854(0x0030) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _projectileDamageMultiplier;                               // 0x0884(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _projectileDamageMultiplierPerBodyPart[0xC];               // 0x0888(0x0030) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _radialDamageMultiplier;                                   // 0x08B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DF19[0x4];                                     // 0x08BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _delayBetweenTakeDamageSounds;                             // 0x08C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CU8F[0x8];                                     // 0x08C4(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Animal2"));
		return ptr;
	}



	void UnpackUint8(unsigned char pack, TArray<bool>* B);
	unsigned char PackBoolsIntoUint8(TArray<bool> B);
	void OnRep_WoundDamage();
	void OnRep_Health();
	void NetMulticast_PlaySoundOnClients(ConZ_EAnimal2Sound SoundToPlay);
	void GenerateBloodMarkerRPC();
	class APrisoner* ClosestPrisoner();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZCharacterMovementComponent
// 0x0008 (FullSize[0x0B08] - InheritedSize[0x0B00])
class UConZCharacterMovementComponent : public UCharacterMovementComponent
{
public:
	TEnumAsByte<Engine_ECollisionResponse>             _navWalkingCollisionResponseToWorldStatic;                 // 0x0B00(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TEnumAsByte<Engine_ECollisionResponse>             _navWalkingCollisionResponseToWorldDynamic;                // 0x0B01(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_68C0[0x6];                                     // 0x0B02(0x0006) Fix Super Size


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZCharacterMovementComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Animal2MovementComponent
// 0x0018 (FullSize[0x0B20] - InheritedSize[0x0B08])
class UAnimal2MovementComponent : public UConZCharacterMovementComponent
{
public:
	unsigned char                                      UnknownData_X75A[0x8];                                     // 0x0B08(0x0008) Fix Super Size
	unsigned char                                      UnknownData_7EUR[0x10];                                    // 0x0B10(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Animal2MovementComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CharacterSoundComponent
// 0x0028 (FullSize[0x00D8] - InheritedSize[0x00B0])
class UCharacterSoundComponent : public UActorComponent
{
public:
	struct FName                                       AttachedSoundsAttachPointName;                             // 0x00B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterImpactSoundsData*                  ImpactSounds;                                              // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterPainSoundsData*                    PainSounds;                                                // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinDurationBetweenPainSounds;                              // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDurationBetweenPainSounds;                              // 0x00CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SM0F[0x8];                                     // 0x00D0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CharacterSoundComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Animal2SoundComponent
// 0x0078 (FullSize[0x0150] - InheritedSize[0x00D8])
class UAnimal2SoundComponent : public UCharacterSoundComponent
{
public:
	class UAkAudioEvent*                               IdleAudioEvent;                                            // 0x00D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AngryAudioEvent;                                           // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AttackAudioEvent;                                          // 0x00E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ScaredAudioEvent;                                          // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AlertedAudioEvent;                                         // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               TakeDamageAudioEvent;                                      // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               KillAudioEvent;                                            // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AnimalFootstep;                                            // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FootstepSoundOverlap;                                      // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FixedFootstepVolume;                                       // 0x011C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpeedFootstepVolume;                                       // 0x0120(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinSilenceTimeout;                                         // 0x0124(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSilenceTimeout;                                         // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q24Q[0x24];                                    // 0x012C(0x0024) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Animal2SoundComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Animal2AnimInstance
// 0x0038 (FullSize[0x02F0] - InheritedSize[0x02B8])
class UAnimal2AnimInstance : public UAnimInstance
{
public:
	class UCurveFloat*                                 InverseLocomotionBias;                                     // 0x02B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumLeaningAngle;                                       // 0x02C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                IdleStanceIndex;                                           // 0x02C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EAnimalStance                                 Stance;                                                    // 0x02C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1TOQ[0x3];                                     // 0x02C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    SlopeRootTiltRotation;                                     // 0x02CC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              ABPSpeed;                                                  // 0x02D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ABPTurn;                                                   // 0x02DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MoveVelocity;                                              // 0x02E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LBRU[0xC];                                     // 0x02E4(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Animal2AnimInstance"));
		return ptr;
	}



	void AnimNotify_RFootDownRear();
	void AnimNotify_RFootDown();
	void AnimNotify_LFootDownRear();
	void AnimNotify_LFootDown();
	void AnimNotify_IntroEnd();
	void AnimNotify_IdleEnd();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ComplexAnimalAIController
// 0x01A8 (FullSize[0x04D0] - InheritedSize[0x0328])
class AComplexAnimalAIController : public AAIController
{
public:
	ConZ_EAnimalAgressivness                           Agressivness;                                              // 0x0328(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IRF7[0x3];                                     // 0x0329(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SightIntimidateRadius;                                     // 0x032C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SightAttackRadius;                                         // 0x0330(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FoeChargeVelocity;                                         // 0x0334(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldForceChargeRotation;                                 // 0x0338(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XZOA[0x3];                                     // 0x0339(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AnimalVelocityThatMakesThisAnimalFlee;                     // 0x033C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FleeDistance;                                              // 0x0340(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FleeTime;                                                  // 0x0344(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TrotTime;                                                  // 0x0348(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeToAttackWhenAggro;                                     // 0x034C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeToQuitObserve;                                         // 0x0350(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinReactionTime;                                           // 0x0354(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxReactionTime;                                           // 0x0358(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MovingUpdateInterval;                                      // 0x035C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AttackingUpdateInetrval;                                   // 0x0360(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PathSegmentLength_OBSOLETE;                                // 0x0364(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinPaceDuration_OBSOLETE;                                  // 0x0368(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxNumWalks_OBSOLETE;                                      // 0x036C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxNumTrots_OBSOLETE;                                      // 0x0370(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PathDirectionCounterResetTime_OBOLETE;                     // 0x0374(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MoveSegmentLength;                                         // 0x0378(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BackOffDistance;                                           // 0x037C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AttackTrackingDistance;                                    // 0x0380(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PredictionFactor;                                          // 0x0384(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               BackAndForthStuckCheck;                                    // 0x0388(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      AttackAttempts;                                            // 0x0389(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ID6B[0x2];                                     // 0x038A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ActionChangedDelay;                                        // 0x038C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CloseAttackRepeatDelay;                                    // 0x0390(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AttackChainDelay;                                          // 0x0394(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                BlockedPathRetryAttempts;                                  // 0x0398(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DirectionLockTime;                                         // 0x039C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinWalkTimeDuringRoaming;                                  // 0x03A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxWalkTimeDuringRoaming;                                  // 0x03A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinStandTimeDuringRoaming;                                 // 0x03A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxStandTimeDuringRoaming;                                 // 0x03AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IntimidateTime;                                            // 0x03B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IntimidateAnimationEndTime;                                // 0x03B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AlertActionTime;                                           // 0x03B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AlertStartupTime;                                          // 0x03BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AlertAllowedAgainTime;                                     // 0x03C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DoNotDespawnTime;                                          // 0x03C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAISenseConfig_Sight*                        NormalAISenseSight;                                        // 0x03C8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAISenseConfig_Hearing*                      NormalAISenseHearing;                                      // 0x03D0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAISenseConfig_Hearing*                      RelaxedAISenseHearing;                                     // 0x03D8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAISenseConfig_Hearing*                      AlertedAISenseHearing;                                     // 0x03E0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAISenseConfig_Sight*                        SleepAISenseSight;                                         // 0x03E8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AComplexAnimal2*                             _animal;                                                   // 0x03F0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FCTP[0x78];                                    // 0x03F8(0x0078) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _healthPercentageToFlee;                                   // 0x0470(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _damageMagnitudeHealthPercentageToFlee;                    // 0x0474(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H836[0x58];                                    // 0x0478(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ComplexAnimalAIController"));
		return ptr;
	}



	void UpdatePerception(TArray<class AActor*> actorsPercepted);
	void StartFullAlert();
	void QuitObserve();
	void OnTakeDamageHandler(class AActor* damageActor, float Damage, const struct FVector& HitLocation, class APawn* eventInstigator);
	void OnActionChangedHandler(ConZ_EAnimalAction CurrentAction, ConZ_EAnimalAction PrevAction);
	ConZ_EAnimalMode GetMode();
	void ChangeMode(ConZ_EAnimalMode NewMode);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimalContinuousChargeAttackAIController
// 0x0018 (FullSize[0x04E8] - InheritedSize[0x04D0])
class AAnimalContinuousChargeAttackAIController : public AComplexAnimalAIController
{
public:
	float                                              LockAttackDirectionDistance;                               // 0x04D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ContinueAttackDistance;                                    // 0x04D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6AVK[0x10];                                    // 0x04D8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimalContinuousChargeAttackAIController"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BaseItemTag
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UBaseItemTag : public UDataAsset
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BaseItemTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimalHandlingItemTag
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAnimalHandlingItemTag : public UBaseItemTag
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimalHandlingItemTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Skill
// 0x0070 (FullSize[0x00A0] - InheritedSize[0x0030])
class USkill : public UDataAsset
{
public:
	struct FText                                       Caption;                                                   // 0x0030(0x0018) (Edit, NativeAccessSpecifierPublic)
	ConZ_ESkillReplicationID                           ReplicationID;                                             // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XI5D[0x3];                                     // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ComboBonus;                                                // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NoSkillBonus;                                              // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BasicBonus;                                                // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MediumBonus;                                               // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AdvancedBonus;                                             // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DisplayActionMessages;                                     // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsAvailableInCharacterCreation;                            // 0x0064(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2I64[0x3];                                     // 0x0065(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  _skillIcon;                                                // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PH51[0x2C];                                    // 0x0070(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _skillFamePointsMultiplier;                                // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Skill"));
		return ptr;
	}



	void SetSkillAttribute(ConZ_ESkillAttribute skillAttribute);
	void SetLevel(ConZ_ESkillLevel Level);
	void SetExperiencePoints(float Points);
	bool IsWeakenedByAttribute();
	class UTexture2D* GetSkillIcon();
	ConZ_ESkillAttribute GetSkillAttribute();
	ConZ_ESkillLevel GetLevel();
	float GetExperiencePoints();
	struct FString GetCaption();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.IntelligenceSkill
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UIntelligenceSkill : public USkill
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.IntelligenceSkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimalHandlingSkill
// 0x0010 (FullSize[0x00B0] - InheritedSize[0x00A0])
class UAnimalHandlingSkill : public UIntelligenceSkill
{
public:
	unsigned char                                      UnknownData_W4LS[0x10];                                    // 0x00A0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimalHandlingSkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimNotify_CharacterActionEnd
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAnimNotify_CharacterActionEnd : public UAnimNotify
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimNotify_CharacterActionEnd"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimNotify_CharacterActionMarker
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAnimNotify_CharacterActionMarker : public UAnimNotify
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimNotify_CharacterActionMarker"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimNotify_CharacterActionNotify
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UAnimNotify_CharacterActionNotify : public UAnimNotify
{
public:
	ConZ_ECharacterActionNotifyType                    CharacterActionNotifyType;                                 // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TV6B[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimNotify_CharacterActionNotify"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimNotify_ClimbingFinished
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAnimNotify_ClimbingFinished : public UAnimNotify
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimNotify_ClimbingFinished"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimNotify_MakeNoise
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UAnimNotify_MakeNoise : public UAnimNotify
{
public:
	ConZ_ENoiseLevel                                   NoiseLevel;                                                // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W221[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimNotify_MakeNoise"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimNotify_PlaySoundBySurface
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UAnimNotify_PlaySoundBySurface : public UAnimNotify
{
public:
	class UAkAudioEvent*                               AudioEvent;                                                // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_ECollisionChannel>              TraceChannel;                                              // 0x0040(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8BUD[0x7];                                     // 0x0041(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimNotify_PlaySoundBySurface"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimNotify_PlaySoundOnOwner
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UAnimNotify_PlaySoundOnOwner : public UAnimNotify
{
public:
	class UAkAudioEvent*                               AudioEvent;                                                // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimNotify_PlaySoundOnOwner"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimNotify_WaterPaddle
// 0x0028 (FullSize[0x0060] - InheritedSize[0x0038])
class UAnimNotify_WaterPaddle : public UAnimNotify
{
public:
	class UParticleSystem*                             ParticleSystem;                                            // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AudioEvent;                                                // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VolumeMultiplier;                                          // 0x0048(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchMultiplier;                                           // 0x004C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AttachPointName;                                           // 0x0050(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DebugMode;                                                 // 0x0058(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UH93[0x7];                                     // 0x0059(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimNotify_WaterPaddle"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimNotify_WeaponActionNotify
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UAnimNotify_WeaponActionNotify : public UAnimNotify
{
public:
	ConZ_EWeaponActionNotifyType                       WeaponActionNotifyType;                                    // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CR77[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimNotify_WeaponActionNotify"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimNotify_WeaponChamberBullet
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAnimNotify_WeaponChamberBullet : public UAnimNotify
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimNotify_WeaponChamberBullet"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimNotify_WeaponChamberBulletInternal
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAnimNotify_WeaponChamberBulletInternal : public UAnimNotify
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimNotify_WeaponChamberBulletInternal"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimNotify_WeaponEjectCasing
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAnimNotify_WeaponEjectCasing : public UAnimNotify
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimNotify_WeaponEjectCasing"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimNotify_WeaponUpdateAmmunitionMeshes
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UAnimNotify_WeaponUpdateAmmunitionMeshes : public UAnimNotify
{
public:
	TArray<int>                                        ammoIndices;                                               // 0x0038(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimNotify_WeaponUpdateAmmunitionMeshes"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimNotifyState_ChamberWeapon
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAnimNotifyState_ChamberWeapon : public UAnimNotifyState
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimNotifyState_ChamberWeapon"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimNotifyState_DrainStamina
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UAnimNotifyState_DrainStamina : public UAnimNotifyState
{
public:
	ConZ_EAnimNotifyStaminDrainType                    DrainType;                                                 // 0x0030(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EPrisonerTempCategory                         DrainCategory;                                             // 0x0031(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9GSK[0x2];                                     // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AmountToDrain;                                             // 0x0034(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Duration;                                                  // 0x0038(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoveryDelay;                                             // 0x003C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoveryTime;                                              // 0x0040(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_28XA[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimNotifyState_DrainStamina"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimNotifyState_Fade
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UAnimNotifyState_Fade : public UAnimNotifyState
{
public:
	float                                              _fadeOutRatio;                                             // 0x0030(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _fadeInRatio;                                              // 0x0034(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EAnimNotifyState_FadeForAction                _forAction;                                                // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_C7X2[0x17];                                    // 0x0039(0x0017) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimNotifyState_Fade"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimNotifyState_Melee
// 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
class UAnimNotifyState_Melee : public UAnimNotifyState
{
public:
	struct FGameplayTag                                _attackCapsuleAttachment;                                  // 0x0030(0x0008) (Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _damageMultiplier;                                         // 0x0038(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EDamageMagnitudeType                          _damageMagnitudeType;                                      // 0x003C(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1C6B[0x3];                                     // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _knockoutChance;                                           // 0x0040(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EKnockoutAttackType                           _knockoutAttackType;                                       // 0x0044(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _stopOnHit;                                                // 0x0045(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_O2FS[0x2];                                     // 0x0046(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       _hitDetectionMarkersRootBoneParentName;                    // 0x0048(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FMeleeHitDetectionMarker>            _hitDetectionMarkers;                                      // 0x0050(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPrivate)
	int                                                _hitDetectionSamplingRate;                                 // 0x0060(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4NYS[0x14];                                    // 0x0064(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimNotifyState_Melee"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimNotifyState_NoScopingAllowed
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UAnimNotifyState_NoScopingAllowed : public UAnimNotifyState
{
public:
	unsigned char                                      UnknownData_RYBW[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimNotifyState_NoScopingAllowed"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimNotifyState_PaniniOverride
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAnimNotifyState_PaniniOverride : public UAnimNotifyState
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimNotifyState_PaniniOverride"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimNotifyState_PhysicalAnimation
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UAnimNotifyState_PhysicalAnimation : public UAnimNotifyState
{
public:
	bool                                               GotoRagdollOnEnd;                                          // 0x0030(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FUQ5[0x3];                                     // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       BodyProfileName;                                           // 0x0034(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       ConstraintProfileName;                                     // 0x003C(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       BoneName;                                                  // 0x0044(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       StrengthBlendCurveName;                                    // 0x004C(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       PhysicsBlendCurveName;                                     // 0x0054(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YD4S[0x4];                                     // 0x005C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimNotifyState_PhysicalAnimation"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimNotifyState_PlaySoundOnOwnerRanged
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UAnimNotifyState_PlaySoundOnOwnerRanged : public UAnimNotifyState
{
public:
	class UAkAudioEvent*                               BeginAudioEvent;                                           // 0x0030(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               EndAudioEvent;                                             // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimNotifyState_PlaySoundOnOwnerRanged"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimNotifyState_WeaponHideMagazine
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UAnimNotifyState_WeaponHideMagazine : public UAnimNotifyState
{
public:
	unsigned char                                      UnknownData_A17M[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimNotifyState_WeaponHideMagazine"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimNotifyState_WeaponShowAmmunitionMeshes
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UAnimNotifyState_WeaponShowAmmunitionMeshes : public UAnimNotifyState
{
public:
	TArray<int>                                        ammoIndices;                                               // 0x0030(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimNotifyState_WeaponShowAmmunitionMeshes"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UAnimStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimStatics"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.StrengthSkill
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UStrengthSkill : public USkill
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.StrengthSkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RangedWeaponsSkill
// 0x0040 (FullSize[0x00E0] - InheritedSize[0x00A0])
class URangedWeaponsSkill : public UStrengthSkill
{
public:
	unsigned char                                      UnknownData_AJP1[0x10];                                    // 0x00A0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _clearMalfunctionBadRound;                                 // 0x00B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _clearMalfunctionStovePipe;                                // 0x00B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _clearMalfunctionRoundNotLoaded;                           // 0x00B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _clearMalfunctionDoubleFeed;                               // 0x00BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _clearMalfunctionStuckBullet;                              // 0x00C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _clearMalfunctionClipPartiallyEjected;                     // 0x00C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRangedWeaponSkillParametersPerSkillLevel   NoSkillParameters;                                         // 0x00C8(0x0004) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FRangedWeaponSkillParametersPerSkillLevel   BasicSkillParameters;                                      // 0x00CC(0x0004) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FRangedWeaponSkillParametersPerSkillLevel   MediumSkillParameters;                                     // 0x00D0(0x0004) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FRangedWeaponSkillParametersPerSkillLevel   AdvancedSkillParameters;                                   // 0x00D4(0x0004) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FRangedWeaponSkillParametersPerSkillLevel   AboveAdvancedSkillParameters;                              // 0x00D8(0x0004) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ELCW[0x4];                                     // 0x00DC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RangedWeaponsSkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ArcherySkill
// 0x0068 (FullSize[0x0148] - InheritedSize[0x00E0])
class UArcherySkill : public URangedWeaponsSkill
{
public:
	float                                              _drawWeightNoSkillValue;                                   // 0x00E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _drawWeightBasicSkillValue;                                // 0x00E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _drawWeightMediumSkillValue;                               // 0x00E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _drawWeightAdvancedSkillValue;                             // 0x00EC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _drawWeightAboveAvancedSkillValue;                         // 0x00F0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _holdTimeInFullDrawNoSkillValue;                           // 0x00F4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _holdTimeInFullDrawBasicSkillValue;                        // 0x00F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _holdTimeInFullDrawMediumSkillValue;                       // 0x00FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _holdTimeInFullDrawAdvancedSkillValue;                     // 0x0100(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _holdTimeInFullDrawAboveAvancedSkillValue;                 // 0x0104(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _armsShakeMultiplierNoSkillValue;                          // 0x0108(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _armsShakeMultiplierBasicSkillValue;                       // 0x010C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _armsShakeMultiplierMediumSkillValue;                      // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _armsShakeMultiplierAdvancedSkillValue;                    // 0x0114(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _armsShakeMultiplierAboveAvancedSkillValue;                // 0x0118(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _tuneBowDurationNoSkillValue;                              // 0x011C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _tuneBowDurationBasicSkillValue;                           // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _tuneBowDurationMediumSkillValue;                          // 0x0124(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _tuneBowDurationAdvancedSkillValue;                        // 0x0128(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _tuneBowDurationAboveAvancedSkillValue;                    // 0x012C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _drawCenterDotExtraTimeLimitNoSkillValue;                  // 0x0130(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _drawCenterDotExtraTimeLimitBasicSkillValue;               // 0x0134(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _drawCenterDotExtraTimeLimitMediumSkillValue;              // 0x0138(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _drawCenterDotExtraTimeLimitAdvancedSkillValue;            // 0x013C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _drawCenterDotExtraTimeLimitAboveAvancedSkillValue;        // 0x0140(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OTX3[0x4];                                     // 0x0144(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ArcherySkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ArrayStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UArrayStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ArrayStatics"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SkillAction
// 0x0078 (FullSize[0x00A0] - InheritedSize[0x0028])
class USkillAction : public UObject
{
public:
	unsigned char                                      UnknownData_BBE4[0x78];                                    // 0x0028(0x0078) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SkillAction"));
		return ptr;
	}



	void OnActionFinished();
	void OnActionCanceled();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MedicalAction
// 0x0008 (FullSize[0x00A8] - InheritedSize[0x00A0])
class UMedicalAction : public USkillAction
{
public:
	unsigned char                                      UnknownData_BT1V[0x8];                                     // 0x00A0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MedicalAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ArtificalPerspirationAction
// 0x0000 (FullSize[0x00A8] - InheritedSize[0x00A8])
class UArtificalPerspirationAction : public UMedicalAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ArtificalPerspirationAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AttachmentSocketMountType
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UAttachmentSocketMountType : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AttachmentSocketMountType"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AttachmentSocketMountTypePrisonerHand
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UAttachmentSocketMountTypePrisonerHand : public UAttachmentSocketMountType
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AttachmentSocketMountTypePrisonerHand"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AttributeMapInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UAttributeMapInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AttributeMapInterface"));
		return ptr;
	}



	void SetStringAttribute(const struct FString& Name, const struct FString& Value);
	void SetIntAttribute(const struct FString& Name, int Value);
	void SetFloatAttribute(const struct FString& Name, float Value);
	void SetBoolAttribute(const struct FString& Name, bool Value);
	bool HasAttribute(const struct FString& Name);
	struct FString GetStringAttribute(const struct FString& Name);
	int GetIntAttribute(const struct FString& Name);
	float GetFloatAttribute(const struct FString& Name);
	bool GetBoolAttribute(const struct FString& Name);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AttributesGraph
// 0x0130 (FullSize[0x0238] - InheritedSize[0x0108])
class UAttributesGraph : public UWidget
{
public:
	ConZ_ESkillAttribute                               Attribute;                                                 // 0x0108(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4AP9[0x3];                                     // 0x0109(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FLinearColor                                ColorAndOpacity;                                           // 0x010C(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptDelegate                             ColorAndOpacityDelegate;                                   // 0x011C(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	float                                              Thickness;                                                 // 0x012C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                                 HoverBrush;                                                // 0x0130(0x0088) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FScriptDelegate                             HoverBrushDelegate;                                        // 0x01B8(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                              Font;                                                      // 0x01C8(0x0058) (Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_O41C[0x10];                                    // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrisonerLifeComponent*                      _prisonerLifeComponent;                                    // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AttributesGraph"));
		return ptr;
	}



	void UpdateNumOfPointsToTrack(int Num);
	void UpdateGraph();
	void SetPrisonerLifeComponent(class UPrisonerLifeComponent* Value);
	class UPrisonerLifeComponent* GetPrisonerLifeComponent();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AudioStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UAudioStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AudioStatics"));
		return ptr;
	}



	struct FName GetMovementPaceSwitchValue(ConZ_EPrisonerMovementPace Value);
	struct FName GetMovementPaceSwitchName();
	struct FName GetMotionIntensitySwitchValue(ConZ_EMotionIntensity Value);
	struct FName GetMotionIntensitySwitchName();
	struct FName GetMaterialSwitchValue(TEnumAsByte<PhysicsCore_EPhysicalSurface> Value);
	struct FName GetMaterialSwitchName();
	struct FName GetImpactSeveritySwitchValue(ConZ_EImpactSeverity Value);
	struct FName GetImpactSeveritySwitchName();
	struct FName GetGenderSwitchValue(ConZ_EGender Value);
	struct FName GetGenderSwitchName();
	struct FName GetEnvironmentSwitchValue(ConZ_EEnvironmentClass Value);
	struct FName GetEnvironmentSwitchName();
	struct FName GetCharacterPainSeveritySwitchValue(ConZ_ECharacterPainSoundSeverity Value);
	struct FName GetCharacterPainSeveritySwitchName();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AwarenessSkill
// 0x02A8 (FullSize[0x0348] - InheritedSize[0x00A0])
class UAwarenessSkill : public UIntelligenceSkill
{
public:
	unsigned char                                      UnknownData_1AMG[0x10];                                    // 0x00A0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StaminaConsumption;                                        // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EZP4[0x4];                                     // 0x00B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               EnterFocusModeAudioEvent;                                  // 0x00B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               LeaveFocusModeAudioEvent;                                  // 0x00C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              _updateTime;                                               // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _serverUpdateTime;                                         // 0x00CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _basicWatchingDetectionChance;                             // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumWatchingDetectionChance;                            // 0x00D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _advancedWatchingDetectionChance;                          // 0x00D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _aboveAdvancedWatchingDetectionChance;                     // 0x00DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _noSkillItemDetectionTime;                                 // 0x00E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _basicItemDetectionTime;                                   // 0x00E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumItemDetectionTime;                                  // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _advancedItemDetectionTime;                                // 0x00EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _aboveAdvancedItemDetectionTime;                           // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _noSkillItemDetectionRadius;                               // 0x00F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _basicItemDetectionRadius;                                 // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumItemDetectionRadius;                                // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _advancedItemDetectionRadius;                              // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _aboveAdvancedItemDetectionRadius;                         // 0x0104(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _noSkillItemDetectionChance;                               // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _basicItemDetectionChance;                                 // 0x010C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumItemDetectionChance;                                // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _advancedItemDetectionChance;                              // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _aboveAdvancedItemDetectionChance;                         // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _noSkillItemHighlightByDayRadius;                          // 0x011C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _basicItemHighlightByDayRadius;                            // 0x0120(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumItemHighlightByDayRadius;                           // 0x0124(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _advancedItemHighlightByDayRadius;                         // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _aboveAdvancedItemHighlightByDayRadius;                    // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _noSkillItemHighlightByNightRadius;                        // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _basicItemHighlightByNightRadius;                          // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumItemHighlightByNightRadius;                         // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _advancedItemHighlightByNightRadius;                       // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _aboveAdvancedItemHighlightByNightRadius;                  // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _noSkillWatchingDetectionRadius;                           // 0x0144(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _basicWatchingDetectionRadius;                             // 0x0148(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumWatchingDetectionRadius;                            // 0x014C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _advancedWatchingDetectionRadius;                          // 0x0150(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _aboveAdvancedWatchingDetectionRadius;                     // 0x0154(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _characterDetectionAngle;                                  // 0x0158(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _characterDetectionTime;                                   // 0x015C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _characterDetectionRange;                                  // 0x0160(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _characterDetectionPeriodicRangeIncrement;                 // 0x0164(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _noSkillHiddenCharacterDetectionRange;                     // 0x0168(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _basicHiddenCharacterDetectionRange;                       // 0x016C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumHiddenCharacterDetectionRange;                      // 0x0170(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _advancedHiddenCharacterDetectionRange;                    // 0x0174(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _aboveAdvancedHiddenCharacterDetectionRange;               // 0x0178(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _noSkillHotSpotHiddenCharacterDetectionRange;              // 0x017C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _basicHotSpotHiddenCharacterDetectionRange;                // 0x0180(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumHotSpotHiddenCharacterDetectionRange;               // 0x0184(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _advancedHotSpotHiddenCharacterDetectionRange;             // 0x0188(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _aboveAdvancedHotSpotHiddenCharacterDetectionRange;        // 0x018C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _noSkillSoundDetectionRange;                               // 0x0190(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _basicSoundDetectionRange;                                 // 0x0194(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumSoundDetectionRange;                                // 0x0198(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _advancedSoundDetectionRange;                              // 0x019C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _aboveAdvancedSoundDetectionRange;                         // 0x01A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _notMovingFocusRangeMultiplier;                            // 0x01A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _slowMovingFocusRangeMultiplier;                           // 0x01A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumMovingFocusRangeMultiplier;                         // 0x01AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _fastMovingFocusRangeMultiplier;                           // 0x01B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _noSkillFocusModeActivationTime;                           // 0x01B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _basicFocusModeActivationTime;                             // 0x01B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumFocusModeActivationTime;                            // 0x01BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _advancedFocusModeActivationTime;                          // 0x01C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _aboveAdvancedFocusModeActivationTime;                     // 0x01C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _noSkillTrackDetectionRange;                               // 0x01C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _basicTrackDetectionRange;                                 // 0x01CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumTrackDetectionRange;                                // 0x01D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _advancedTrackDetectionRange;                              // 0x01D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _aboveAdvancedTrackDetectionRange;                         // 0x01D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _trackDetectionNightTimeMultiplier;                        // 0x01DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _noSkillTrapDetectionRange;                                // 0x01E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _basicTrapDetectionRange;                                  // 0x01E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumTrapDetectionRange;                                 // 0x01E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _advancedTrapDetectionRange;                               // 0x01EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _aboveAdvancedTrapDetectionRange;                          // 0x01F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _noSkillFlashFadeOutDurationMultiplier;                    // 0x01F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _basicFlashFadeOutDurationMultiplier;                      // 0x01F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumFlashFadeOutDurationMultiplier;                     // 0x01FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _advancedFlashFadeOutDurationMultiplier;                   // 0x0200(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _aboveAdvancedFlashFadeOutDurationMultiplier;              // 0x0204(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _noSkillMoundDetectionDistanceStart;                       // 0x0208(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _basicMoundDetectionDistanceStart;                         // 0x020C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumMoundDetectionDistanceStart;                        // 0x0210(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _advandedMoundDetectionDistanceStart;                      // 0x0214(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _aboveAdvancedMoundDetectionDistanceStart;                 // 0x0218(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _noSkillMoundDetectionDistanceEnd;                         // 0x021C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _basicMoundDetectionDistanceEnd;                           // 0x0220(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumMoundDetectionDistanceEnd;                          // 0x0224(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _advandedMoundDetectionDistanceEnd;                        // 0x0228(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _aboveAdvancedMoundDetectionDistanceEnd;                   // 0x022C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _noSkillContainerItemSpawnProbabilityModifier;             // 0x0230(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _basicContainerItemSpawnProbabilityModifier;               // 0x0234(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumContainerItemSpawnProbabilityModifier;              // 0x0238(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _advancedContainerItemSpawnProbabilityModifier;            // 0x023C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _aboveAdvancedContainerItemSpawnProbabilityModifier;       // 0x0240(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_32JO[0x104];                                   // 0x0244(0x0104) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AwarenessSkill"));
		return ptr;
	}



	void EnterFocusMode();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BacillusCereusPoisoning
// 0x0008 (FullSize[0x01B8] - InheritedSize[0x01B0])
class UBacillusCereusPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData_CD57[0x8];                                     // 0x01B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BacillusCereusPoisoning"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BaneberryPoisoning
// 0x0010 (FullSize[0x01C0] - InheritedSize[0x01B0])
class UBaneberryPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData_E5KH[0x10];                                    // 0x01B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BaneberryPoisoning"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BaseBuildingComponent
// 0x0200 (FullSize[0x06D0] - InheritedSize[0x04D0])
class UBaseBuildingComponent : public UStaticMeshComponent
{
public:
	struct FString                                     _name;                                                     // 0x04D0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EBaseElementType                              _baseElementType;                                          // 0x04E0(0x0001) ELEMENT_SIZE_MISMATCH (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_98XN[0x1];                                     // 0x04E0(0x0001) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	bool                                               _isClimbable;                                              // 0x04E2(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isBlockingItemPlacement;                                  // 0x04E3(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PUYD[0x4];                                     // 0x04E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UStaticMesh*>                         _staticMeshVariations;                                     // 0x04E8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UChoppingRecipeDataAsset*                    _choppingRecipeAsset;                                      // 0x04F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _healthPoints;                                             // 0x0500(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canBeDamaged;                                             // 0x0504(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_52GJ[0x3];                                     // 0x0505(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _hoursToDecay;                                             // 0x0508(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isUsedForRespawn;                                         // 0x050C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0VRG[0x3];                                     // 0x050D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _radialDamageMultiplier;                                   // 0x0510(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1VYV[0x4];                                     // 0x0514(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMesh*                                 _weatherMaskMesh;                                          // 0x0518(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _maxInstancesPerFlagArea;                                  // 0x0520(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_C5XQ[0x4];                                     // 0x0524(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPlaceableCraftableItem*                     _upgradeRecipe;                                            // 0x0528(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _cascadeDestroySnappedElementsOnUpgrade;                   // 0x0530(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isTileable;                                               // 0x0531(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _mustBePlacedOnFoundation;                                 // 0x0532(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canEverBePlacedOnFoundation;                              // 0x0533(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canBePlacedOnOtherBaseElements;                           // 0x0534(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canBePlacedWithoutSnapping;                               // 0x0535(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldIgnoreSelfWhilePlacing;                             // 0x0536(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canBeGroundedOnOtherElements;                             // 0x0537(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _maxHeightLevel;                                           // 0x0538(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IMUJ[0x3];                                     // 0x0539(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _maxHeightDifference;                                      // 0x053C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _addRandomRotation;                                        // 0x0540(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _mustGroundAllPoints;                                      // 0x0541(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _traceComplexWhilePlacing;                                 // 0x0542(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _mustBePlacedUpright;                                      // 0x0543(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EConZPlacementHeightType                      _placementHeightType;                                      // 0x0544(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _useSimpleCollisionForOverlaps;                            // 0x0545(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GBIY[0x2];                                     // 0x0546(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    _maxRotationWhilePlacing;                                  // 0x0548(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6OV6[0x4];                                     // 0x0554(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FElementSnapMarker>                  _elementSnapMarkers;                                       // 0x0558(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                               _useEncapsulationTestWhenSnapping;                         // 0x0568(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YK8T[0x7];                                     // 0x0569(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FBaseBuildingSizeVariation>          _sizeVariations;                                           // 0x0570(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CLUO[0x4];                                     // 0x0580(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _sizeVariationsSpacing;                                    // 0x0584(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _repairTime;                                               // 0x0588(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KBLO[0x4];                                     // 0x058C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRepairableParams                           _repairableParams;                                         // 0x0590(0x0038) (Edit, NativeAccessSpecifierPrivate)
	float                                              _experienceAwardForBuilding;                               // 0x05C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LBO2[0x4];                                     // 0x05CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UParticleSystem*>                     _destructionParticles;                                     // 0x05D0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FTransform>                          _destructionParticlesSpawnTransforms;                      // 0x05E0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _destructionSound;                                         // 0x05F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isDoor;                                                   // 0x05F8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_M9ZY[0x7];                                     // 0x05F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _doorClass;                                                // 0x0600(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _hasLadder;                                                // 0x0608(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_K11W[0x7];                                     // 0x0609(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FLadderMarker>                       _ladderMarkers;                                            // 0x0610(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FBaseElementDamageZone>              _damageZones;                                              // 0x0620(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                               _shouldDestroyElementsOnTopWhenDestroyed;                  // 0x0630(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YAKE[0x3];                                     // 0x0631(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _destructionTime;                                          // 0x0634(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldRemoveIntersectingElementsOnDestroy;                // 0x0638(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_M3BG[0x7];                                     // 0x0639(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FBaseElementDestructionZone>         _destructionZones;                                         // 0x0640(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                               _useAsReplenishableResource;                               // 0x0650(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WPYU[0x7];                                     // 0x0651(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FReplenishableResourceDescription           _replenishableResourceDescription;                         // 0x0658(0x0070) (Edit, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0WL3[0x8];                                     // 0x06C8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BaseBuildingComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BaseBuildingStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UBaseBuildingStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BaseBuildingStatics"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BaseInteractionComponent
// 0x0018 (FullSize[0x0210] - InheritedSize[0x01F8])
class UBaseInteractionComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData_3EJ1[0x8];                                     // 0x01F8(0x0008) Fix Super Size
	unsigned char                                      UnknownData_L4BK[0x10];                                    // 0x0200(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BaseInteractionComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BaseItemContainerWidget
// 0x0038 (FullSize[0x02B0] - InheritedSize[0x0278])
class UBaseItemContainerWidget : public UDesignableUserWidget
{
public:
	struct FScriptMulticastDelegate                    ObjectAddedToContainer;                                    // 0x0278(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BSAN[0x4];                                     // 0x0288(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                Columns;                                                   // 0x028C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Rows;                                                      // 0x0290(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JYTQ[0x4];                                     // 0x0294(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UGridPanel*                                  GridPanel;                                                 // 0x0298(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                                 HighlightBorder;                                           // 0x02A0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PBRV[0x8];                                     // 0x02A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BaseItemContainerWidget"));
		return ptr;
	}



	void RefreshSize();
	void OnObjectAddedToContainerEvent__DelegateSignature(class UObject* Object);
	void OnDropEvent(class UInventorySlotUserWidget* inventorySlot, class UBaseItemWidget* Item);
	void OnDragStartEvent(class UBaseItemWidget* Widget, const struct FGeometry& Geometry);
	void OnDragLeaveEvent(class UInventorySlotUserWidget* inventorySlot, class UBaseItemWidget* Widget);
	void OnDragEnterEvent(class UInventorySlotUserWidget* inventorySlot, class UBaseItemWidget* Widget);
	void OnDragCancelledEvent(class UBaseItemWidget* Widget);
	void InitGrid(const struct FMargin& gridPadding);
	bool GetSlotsForPanel(class UGridSlot* GridSlot, int Width, int Height, TArray<class UInventorySlotUserWidget*>* Slots, class UGridPanel* panel, int numColumns, int numRows);
	bool GetSlots(class UGridSlot* GridSlot, int Width, int Height, TArray<class UInventorySlotUserWidget*>* Slots);
	TArray<class UItemUserWidget*> GetItemWidgets();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemComponent
// 0x0000 (FullSize[0x00B0] - InheritedSize[0x00B0])
class UItemComponent : public UActorComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BasicGameResourceContainerComponent
// 0x00F0 (FullSize[0x01A0] - InheritedSize[0x00B0])
class UBasicGameResourceContainerComponent : public UItemComponent
{
public:
	unsigned char                                      UnknownData_EWZB[0x20];                                    // 0x00B0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _resourceAmount;                                           // 0x00D0(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint16_t                                           _repResourceAmount;                                        // 0x00D4(0x0002) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_C8AT[0x2];                                     // 0x00D6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _acceptedResourceType;                                     // 0x00D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _currentResourceType;                                      // 0x00E0(0x0008) (Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                       _resourceFillingInSocketTypes;                             // 0x00E8(0x0020) (Edit, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                       _resourceFillingOutSocketTypes;                            // 0x0108(0x0020) (Edit, NativeAccessSpecifierPrivate)
	TArray<class UBaseItemTag*>                        _requiredItemTagsForFilling;                               // 0x0128(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	float                                              _initialResourceAmount;                                    // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxResourceAmount;                                        // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _resourceUsagePerHour;                                     // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldUpdateOwningItemUses;                               // 0x0144(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canSpill;                                                 // 0x0145(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canCheck;                                                 // 0x0146(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IFXF[0x1];                                     // 0x0147(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       _interactionText;                                          // 0x0148(0x0018) (Edit, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _resourceFillingMontage;                                   // 0x0160(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _resourceStartFillingAudioEvent;                           // 0x0168(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _resourceStopFillingAudioEvent;                            // 0x0170(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _resourceFillingDurationPerAmountFilled;                   // 0x0178(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _resourceFillingExperiencePerAmount;                       // 0x017C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EPrisonerStance                               _targetStanceWhenFilling;                                  // 0x0180(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldTakeInHandsWhenFilling;                             // 0x0181(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_87XH[0x6];                                     // 0x0182(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               _spillStartAudioEvent;                                     // 0x0188(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _spillStopAudioEvent;                                      // 0x0190(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_724H[0x8];                                     // 0x0198(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BasicGameResourceContainerComponent"));
		return ptr;
	}



	void OnRep_ResourceAmount();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BasicLadder
// 0x0028 (FullSize[0x0248] - InheritedSize[0x0220])
class ABasicLadder : public AActor
{
public:
	class UStaticMeshComponent*                        _mesh;                                                     // 0x0220(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FLadderMarker>                       _ladderMarkers;                                            // 0x0228(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2O32[0x10];                                    // 0x0238(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BasicLadder"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZNotification
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UConZNotification : public UObject
{
public:
	unsigned char                                      UnknownData_PHUC[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZNotification"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BasicNotification
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UBasicNotification : public UConZNotification
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BasicNotification"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.NotificationDescription
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UNotificationDescription : public UObject
{
public:
	ConZ_ENotificationTarget                           Target;                                                    // 0x0028(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JQFE[0x7];                                     // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDbIntegerId                                TargetUserProfileId;                                       // 0x0030(0x0008) (SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldSendIfClientOffline;                                 // 0x0038(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WI27[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.NotificationDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BasicNotificationDescription
// 0x0018 (FullSize[0x0058] - InheritedSize[0x0040])
class UBasicNotificationDescription : public UNotificationDescription
{
public:
	struct FString                                     Message;                                                   // 0x0040(0x0010) (ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Duration;                                                  // 0x0050(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ping;                                                      // 0x0054(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_H9JY[0x3];                                     // 0x0055(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BasicNotificationDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BasicTextWidget
// 0x0008 (FullSize[0x0268] - InheritedSize[0x0260])
class UBasicTextWidget : public UUserWidget
{
public:
	int                                                MaxTextRows;                                               // 0x0260(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxCharactersPerTextRow;                                   // 0x0264(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BasicTextWidget"));
		return ptr;
	}



	void SetCurrentText(const struct FText& Text);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BinocularsItem
// 0x0060 (FullSize[0x07B8] - InheritedSize[0x0758])
class ABinocularsItem : public AItem
{
public:
	unsigned char                                      UnknownData_PLL9[0x8];                                     // 0x0758(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FScopeZoomLevelSettings>             _zoomLevelSettings;                                        // 0x0760(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UTexture2D*                                  _scopingOverlayTexture;                                    // 0x0770(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _montageStandingFP;                                        // 0x0778(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _montageCrouchingFP;                                       // 0x0780(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _montageProneFP;                                           // 0x0788(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _montageStandingTP;                                        // 0x0790(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _montageCrouchingTP;                                       // 0x0798(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _montageProneTP;                                           // 0x07A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _scopingStartDelay;                                        // 0x07A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _scopingStopDelay;                                         // 0x07AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BZLO[0x8];                                     // 0x07B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BinocularsItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BioChemSkill
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UBioChemSkill : public UIntelligenceSkill
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BioChemSkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Bird2
// 0x0034 (FullSize[0x0900] - InheritedSize[0x08CC])
class ABird2 : public AAnimal2
{
public:
	float                                              MinFlightAltitude;                                         // 0x08CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxFlightAltitude;                                         // 0x08D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               _isLanding;                                                // 0x08D4(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isTakingOff;                                              // 0x08D5(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isPerched;                                                // 0x08D6(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isFlying;                                                 // 0x08D7(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<bool>                                       _states;                                                   // 0x08D8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      _repStates;                                                // 0x08E8(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GXB2[0x17];                                    // 0x08E9(0x0017) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Bird2"));
		return ptr;
	}



	void OnRep_States();
	bool GetIsTakingOff();
	bool GetIsStaringPerched();
	bool GetIsPerched();
	bool GetIsLanding();
	bool GetIsFlying();
	void CapsuleComponent_OnComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Bird2AIController
// 0x0060 (FullSize[0x0388] - InheritedSize[0x0328])
class ABird2AIController : public AAIController
{
public:
	float                                              FlyDurationMin;                                            // 0x0328(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlyDurationMax;                                            // 0x032C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RemainOnGroundDurationMin;                                 // 0x0330(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RemainOnGroundDurationMax;                                 // 0x0334(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              turnSpeed;                                                 // 0x0338(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlightSegmentDistance;                                     // 0x033C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LandingDistance;                                           // 0x0340(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_849V[0x44];                                    // 0x0344(0x0044) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Bird2AIController"));
		return ptr;
	}



	void UpdatePerception(TArray<class AActor*> actorsPercepted);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Bird2AnimInstance
// 0x0018 (FullSize[0x02D0] - InheritedSize[0x02B8])
class UBird2AnimInstance : public UAnimInstance
{
public:
	unsigned char                                      UnknownData_K3L8[0x7];                                     // 0x02B8(0x0007) Fix Super Size
	bool                                               IsFlying;                                                  // 0x02BF(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsStaringPerched;                                          // 0x02C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WUAD[0x3];                                     // 0x02C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    SlopeRootTiltRotation;                                     // 0x02C4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Bird2AnimInstance"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BirdTargetPoint
// 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
class ABirdTargetPoint : public AActor
{
public:
	bool                                               IsOccupied;                                                // 0x0220(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BJYD[0x7];                                     // 0x0221(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BirdTargetPoint"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BloodOxygenationWidget
// 0x00D8 (FullSize[0x01E0] - InheritedSize[0x0108])
class UBloodOxygenationWidget : public UWidget
{
public:
	struct FSlateBrush                                 Brush;                                                     // 0x0108(0x0088) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FScriptDelegate                             BrushDelegate;                                             // 0x0190(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	struct FLinearColor                                ColorAndOpacity;                                           // 0x01A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptDelegate                             ColorAndOpacityDelegate;                                   // 0x01B0(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	float                                              Thickness;                                                 // 0x01C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Periods;                                                   // 0x01C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MEVK[0x10];                                    // 0x01C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrisonerLifeComponent*                      _prisonerLifeComponent;                                    // 0x01D8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BloodOxygenationWidget"));
		return ptr;
	}



	void SetPrisonerLifeComponent(class UPrisonerLifeComponent* Value);
	class UPrisonerLifeComponent* GetPrisonerLifeComponent();
	float GetMinOxygenSaturation();
	float GetMaxOxygenSaturation();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BloodPressureWidget
// 0x00D8 (FullSize[0x01E0] - InheritedSize[0x0108])
class UBloodPressureWidget : public UWidget
{
public:
	struct FSlateBrush                                 Brush;                                                     // 0x0108(0x0088) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FScriptDelegate                             BrushDelegate;                                             // 0x0190(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	struct FLinearColor                                ColorAndOpacity;                                           // 0x01A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptDelegate                             ColorAndOpacityDelegate;                                   // 0x01B0(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	float                                              Thickness;                                                 // 0x01C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Periods;                                                   // 0x01C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BJNV[0x10];                                    // 0x01C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrisonerLifeComponent*                      _prisonerLifeComponent;                                    // 0x01D8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BloodPressureWidget"));
		return ptr;
	}



	void SetPrisonerLifeComponent(class UPrisonerLifeComponent* Value);
	class UPrisonerLifeComponent* GetPrisonerLifeComponent();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Objective
// 0x0100 (FullSize[0x0320] - InheritedSize[0x0220])
class AObjective : public AActor
{
public:
	unsigned char                                      UnknownData_GQ93[0x90];                                    // 0x0220(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FDialogueInfo>                       _objectivesIntroDialogues;                                 // 0x02B0(0x0010) (Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FDialogueInfo>                       _objectivesOutroSuccessDialogues;                          // 0x02C0(0x0010) (Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FDialogueInfo>                       _objectivesOutroFailDialogues;                             // 0x02D0(0x0010) (Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	ConZ_EObjectiveState                               _objectiveState;                                           // 0x02E0(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1GAP[0x3];                                     // 0x02E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AMission>                     _parentMission;                                            // 0x02E4(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WSY7[0x4];                                     // 0x02EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       _description;                                              // 0x02F0(0x0018) (Edit, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0X2M[0x11];                                    // 0x0308(0x0011) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _canInterruptDialogue;                                     // 0x0319(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _playUISounds;                                             // 0x031A(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_05QO[0x5];                                     // 0x031B(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Objective"));
		return ptr;
	}



	void SetObjectiveState(ConZ_EObjectiveState Value, bool silent);
	void Server_ActiveObjectiveInitialized();
	void OnRep_ObjectiveStateChanged();
	void OnObjectiveStarted();
	void OnObjectiveInitialized();
	void OnObjectiveFailed();
	void OnObjectiveCompleted();
	void OnObjectiveBelated();
	bool IsStarted();
	bool IsCompleted();
	struct FText GetDescription();
	void FailObjective(bool forceFail);
	void CompleteObjective();
	void Client_ShowWaypointWidget(class AActor* targetActor, class AActor* actorToTieLifetime);
	void Client_RemoveWaypointWidget();
	void Client_BroadcastTrackedItemAmount(int currentAmount);
	bool CanInterruptDialogue();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RequirementObjective
// 0x0010 (FullSize[0x0330] - InheritedSize[0x0320])
class ARequirementObjective : public AObjective
{
public:
	unsigned char                                      UnknownData_IZD1[0x10];                                    // 0x0320(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RequirementObjective"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BlueprintableItemObjective
// 0x0038 (FullSize[0x0368] - InheritedSize[0x0330])
class ABlueprintableItemObjective : public ARequirementObjective
{
public:
	ConZ_EBlueprintItemActionType                      _actionType;                                               // 0x0330(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KSFM[0x7];                                     // 0x0331(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _targetBlueprintActor;                                     // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UClass*>                              _itemsToFill;                                              // 0x0340(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HH15[0x18];                                    // 0x0350(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BlueprintableItemObjective"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BodyTemperatureWidget
// 0x00D8 (FullSize[0x01E0] - InheritedSize[0x0108])
class UBodyTemperatureWidget : public UWidget
{
public:
	struct FSlateBrush                                 Brush;                                                     // 0x0108(0x0088) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FScriptDelegate                             BrushDelegate;                                             // 0x0190(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	struct FLinearColor                                ColorAndOpacity;                                           // 0x01A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptDelegate                             ColorAndOpacityDelegate;                                   // 0x01B0(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	float                                              Thickness;                                                 // 0x01C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Periods;                                                   // 0x01C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LH2S[0x10];                                    // 0x01C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrisonerLifeComponent*                      _prisonerLifeComponent;                                    // 0x01D8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BodyTemperatureWidget"));
		return ptr;
	}



	void SetPrisonerLifeComponent(class UPrisonerLifeComponent* Value);
	class UPrisonerLifeComponent* GetPrisonerLifeComponent();
	float GetMinTemperature();
	float GetMaxTemperature();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Minigame
// 0x00C0 (FullSize[0x02E0] - InheritedSize[0x0220])
class AMinigame : public AActor
{
public:
	unsigned char                                      UnknownData_M3HU[0x30];                                    // 0x0220(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _testingMode;                                              // 0x0250(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WDQ9[0x4];                                     // 0x0254(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneComponent*                             _rootComponent;                                            // 0x0258(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneCaptureComponent2D*                    _captureCam;                                               // 0x0260(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneCaptureComponent2D*                    _captureMaskCam;                                           // 0x0268(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AEGU[0x8];                                     // 0x0270(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMinigameWidget*                             _minigameWidget;                                           // 0x0278(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _minigameWidgetClass;                                      // 0x0280(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8EPF[0x28];                                    // 0x0288(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _introDuration;                                            // 0x02B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _outroDurationOnFail;                                      // 0x02B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _outroDurationOnSuccess;                                   // 0x02B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canBeCanceled;                                            // 0x02BC(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EPrisonerMontage                              _simulatedMontage;                                         // 0x02BD(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_78EE[0x2];                                     // 0x02BE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               _simulatedAudioStart;                                      // 0x02C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _simulatedAudioStop;                                       // 0x02C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UClass*>                              _takeInHandsItemTagClasses;                                // 0x02D0(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Minigame"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BombDefusalMinigame
// 0x0200 (FullSize[0x04E0] - InheritedSize[0x02E0])
class ABombDefusalMinigame : public AMinigame
{
public:
	unsigned char                                      UnknownData_N8K1[0x8];                                     // 0x02E0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        _timeBomb;                                                 // 0x02E8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMesh*                                 _splineConnectorMesh;                                      // 0x02F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YMSV[0x10];                                    // 0x02F8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     _wireButtonsSize;                                          // 0x0308(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_S8RO[0xC];                                     // 0x0314(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               _bombDefusalTimerStartSound;                               // 0x0320(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _bombDefusalTimerStopSound;                                // 0x0328(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _cutWireSound;                                             // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _bombDefusedSound;                                         // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                      _defusalTool;                                              // 0x0340(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _toolMovementSensitivity;                                  // 0x0348(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _minDefusingToolOffsetFromCenter;                          // 0x034C(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _maxDefusingToolOffsetFromCenter;                          // 0x0358(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_02WA[0x4];                                     // 0x0364(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          _greenLedLight;                                            // 0x0368(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInterface*                          _redLedLight;                                              // 0x0370(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInterface*                          _yellowLedLight;                                           // 0x0378(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UStaticMeshComponent*>                _ledLights;                                                // 0x0380(0x0010) (Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UStaticMesh*                                 _ledLightMesh;                                             // 0x0390(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XO3K[0x8];                                     // 0x0398(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMesh*                                 _wireMesh;                                                 // 0x03A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<ConZ_EWireType>                             _wiresEndPositions;                                        // 0x03A8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FWireDescription>                    _wires;                                                    // 0x03B8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_20BB[0x10];                                    // 0x03C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FSplineDescription>                  _splines;                                                  // 0x03D8(0x0010) (ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_N801[0x10];                                    // 0x03E8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _numberOfWires;                                            // 0x03F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _numberOfWirePoints;                                       // 0x03FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _wiresShuffleIntensity;                                    // 0x0400(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _minWiresComplexity;                                       // 0x0404(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_ESplineAxis                                   _wiresForwardAxis;                                         // 0x0408(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DFHF[0x3];                                     // 0x0409(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _wiresStartSmoothness;                                     // 0x040C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _wiresEndSmoothness;                                       // 0x0410(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _wiresMiddleSmoothness;                                    // 0x0414(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _wiresSharpCornerSmoothness;                               // 0x0418(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxSegmentSize;                                           // 0x041C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _wirePointsSpreadPositive;                                 // 0x0420(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _wirePointsSpreadNegative;                                 // 0x0424(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _wireHeight;                                               // 0x0428(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _wireVerticalSpacing;                                      // 0x042C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _wirePointsOffset;                                         // 0x0430(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _wireEndOffset;                                            // 0x043C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _additionalWireEndPointOffset;                             // 0x0440(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FUTN[0x4];                                     // 0x044C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        _cutWireSegment0;                                          // 0x0450(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _cutWireSegment1;                                          // 0x0458(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _cutWireSegment2;                                          // 0x0460(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _cutWireSegment3;                                          // 0x0468(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _cutWireSegment4;                                          // 0x0470(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _cutWireSegment5;                                          // 0x0478(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _uncutWireSegment0;                                        // 0x0480(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _uncutWireSegment1;                                        // 0x0488(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _uncutWireSegment2;                                        // 0x0490(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _uncutWireSegment3;                                        // 0x0498(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _uncutWireSegment4;                                        // 0x04A0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _uncutWireSegment5;                                        // 0x04A8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                               _wireBox1;                                                 // 0x04B0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                               _wireBox2;                                                 // 0x04B8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                               _wireBox3;                                                 // 0x04C0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                               _wireBox4;                                                 // 0x04C8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                               _wireBox5;                                                 // 0x04D0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                               _wireBox6;                                                 // 0x04D8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BombDefusalMinigame"));
		return ptr;
	}



	void PlayCutWireMontage();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MinigameConfiguration
// 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
class UMinigameConfiguration : public UObject
{
public:
	class UClass*                                      MinigameClass;                                             // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5WPR[0x28];                                    // 0x0030(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MinigameConfiguration"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BombDefusalMinigameConfiguration
// 0x0010 (FullSize[0x0068] - InheritedSize[0x0058])
class UBombDefusalMinigameConfiguration : public UMinigameConfiguration
{
public:
	unsigned char                                      UnknownData_UD71[0x10];                                    // 0x0058(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BombDefusalMinigameConfiguration"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MinigameWidget
// 0x0018 (FullSize[0x0290] - InheritedSize[0x0278])
class UMinigameWidget : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData_H9T6[0x18];                                    // 0x0278(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MinigameWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BombDefusalWidget
// 0x0020 (FullSize[0x02B0] - InheritedSize[0x0290])
class UBombDefusalWidget : public UMinigameWidget
{
public:
	class UTextBlock*                                  _remainingTimeMinutes1;                                    // 0x0290(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _remainingTimeMinutes2;                                    // 0x0298(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _remainingTimeSeconds1;                                    // 0x02A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _remainingTimeSeconds2;                                    // 0x02A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BombDefusalWidget"));
		return ptr;
	}



	void ShowInfo();
	bool ShouldShowChangeDurationInfo();
	void OnSuccess();
	void HideInfo();
	int GetNumTries();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BondageComponent
// 0x0010 (FullSize[0x0EE0] - InheritedSize[0x0ED0])
class UBondageComponent : public USkeletalMeshComponent
{
public:
	class AItem*                                       _bondageItem;                                              // 0x0ED0(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EClothesType                                  _boundBodyPart;                                            // 0x0ED8(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4DS7[0x3];                                     // 0x0ED9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _tightness;                                                // 0x0EDC(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BondageComponent"));
		return ptr;
	}



	void UpdateVisuals();
	void OnRep_BoundBodyPart();
	void OnRep_BondageItem();
	class AItem* GetBondageItem();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BondageItemTag
// 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
class UBondageItemTag : public UBaseItemTag
{
public:
	class USkeletalMesh*                               BondageMesh;                                               // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BaseStruggleDuration;                                      // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StruggleStrengthModifier;                                  // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StruggleDexterityModifier;                                 // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GroundMovementSpeedMultiplier;                             // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WaterMovementSpeedMultiplier;                              // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1PEL[0x4];                                     // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequenceBase*                           HandsBoundIdleFPAnimation;                                 // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           HandsBoundIdleTPAnimation;                                 // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                HandsBoundMontage;                                         // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                HandsAdjustMontage;                                        // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                HandsBoundStruggleMontage;                                 // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                HandsFreedMontage;                                         // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                BindingHandsMontage;                                       // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                AdjustingHandsMontage;                                     // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                HandsBoundSuicideMontage;                                  // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BondageItemTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BotulismPoisoning
// 0x0010 (FullSize[0x01C0] - InheritedSize[0x01B0])
class UBotulismPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData_NIH6[0x10];                                    // 0x01B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BotulismPoisoning"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponAttachment
// 0x0020 (FullSize[0x0778] - InheritedSize[0x0758])
class AWeaponAttachment : public AItem
{
public:
	unsigned char                                      UnknownData_EKCM[0x8];                                     // 0x0758(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMesh*                                 _staticMeshWhenAttached;                                   // 0x0760(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JCYV[0x10];                                    // 0x0768(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponAttachment"));
		return ptr;
	}



	void Unequip();
	struct FWeaponMalfunctionProbability GetWeaponMalfunctionProbabilityForMalfunctionEvent(class AWeapon* Weapon, ConZ_EWeaponMalfunctionEvent malfunctionEvent);
	class UStaticMesh* GetStaticMeshWhenAttached();
	class USkeletalMesh* GetSkeletalMeshWhenAttached();
	float GetShakinessModifier();
	class AWeapon* GetOwningWeapon();
	void Equip(class AWeapon* Weapon);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BowAttachmentSilencer
// 0x0008 (FullSize[0x0780] - InheritedSize[0x0778])
class ABowAttachmentSilencer : public AWeaponAttachment
{
public:
	float                                              _noiseMultiplier;                                          // 0x0778(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LWIL[0x4];                                     // 0x077C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BowAttachmentSilencer"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BowAttachmentStabilizer
// 0x0008 (FullSize[0x0788] - InheritedSize[0x0780])
class ABowAttachmentStabilizer : public ABowAttachmentSilencer
{
public:
	float                                              _shakinessModifier;                                        // 0x0780(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZL7T[0x4];                                     // 0x0784(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BowAttachmentStabilizer"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MeleeSkill
// 0x0058 (FullSize[0x00F8] - InheritedSize[0x00A0])
class UMeleeSkill : public UStrengthSkill
{
public:
	class UMeleeSkillAnimationsPreset*                 AnimationsPreset;                                          // 0x00A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMeleeSkillExperienceAwards                 _noSkillExperienceAwards;                                  // 0x00A8(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMeleeSkillExperienceAwards                 _basicSkillExperienceAwards;                               // 0x00B8(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMeleeSkillExperienceAwards                 _mediumSkillExperienceAwards;                              // 0x00C8(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMeleeSkillExperienceAwards                 _advancedSkillExperienceAwards;                            // 0x00D8(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMeleeSkillExperienceAwards                 _aboveAdvancedSkillExperienceAwards;                       // 0x00E8(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MeleeSkill"));
		return ptr;
	}



	class UAnimSequenceBase* GetWalkingIdleAnimationTP();
	class UAnimSequenceBase* GetWalkingIdleAnimationFP();
	class UAnimSequenceBase* GetTiredIdleAnimationTP();
	class UAnimSequenceBase* GetTiredIdleAnimationFP();
	float GetStaminaMultiplier(float excessGearWeight);
	class UAnimSequenceBase* GetPrimaryIdleAnimationTP();
	class UAnimSequenceBase* GetPrimaryIdleAnimationFP();
	class UAnimMontage* GetLeaveCombatModeMontage();
	TArray<class UAnimSequenceBase*> GetInactivityIdleAnimations();
	float GetIdleToBlockBlendDuration();
	class UAnimMontage* GetEnterCombatModeMontage();
	float GetBlockToIdleBlendDuration();
	class UAnimSequenceBase* GetBlockIdleAnimationTP();
	class UAnimSequenceBase* GetBlockIdleAnimationFP();
	class UBlendSpace* GetAimOffsetBlendSpaceTP();
	class UBlendSpace* GetAimOffsetBlendSpaceFP();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BoxingSkill
// 0x0000 (FullSize[0x00F8] - InheritedSize[0x00F8])
class UBoxingSkill : public UMeleeSkill
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BoxingSkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TriggerComponent
// 0x0068 (FullSize[0x04A8] - InheritedSize[0x0440])
class UTriggerComponent : public UPrimitiveComponent
{
public:
	unsigned char                                      UnknownData_OZBU[0x68];                                    // 0x0440(0x0068) Fix Super Size


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TriggerComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ProximityTriggerComponent
// 0x0048 (FullSize[0x04F0] - InheritedSize[0x04A8])
class UProximityTriggerComponent : public UTriggerComponent
{
public:
	struct FVector                                     TriggerForwardVector;                                      // 0x04A8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TriggerAngle;                                              // 0x04B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MotionDetectionSensitivity;                                // 0x04B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MotionDetectionDepletionSpeed;                             // 0x04BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              _motionDetector;                                           // 0x04C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9PQK[0x4];                                     // 0x04C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               _motionDetectorStartSound;                                 // 0x04C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               _motionDetectorEndSound;                                   // 0x04D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VTGE[0x18];                                    // 0x04D8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ProximityTriggerComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BoxProximityTriggerComponent
// 0x0020 (FullSize[0x0510] - InheritedSize[0x04F0])
class UBoxProximityTriggerComponent : public UProximityTriggerComponent
{
public:
	class UBoxComponent*                               BoxCollisionComponent;                                     // 0x04F0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     _triggerSize;                                              // 0x04F8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1HEU[0xC];                                     // 0x0504(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BoxProximityTriggerComponent"));
		return ptr;
	}



	void BoxComponent_OnComponentEndOverlap(class UPrimitiveComponent* activatedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void BoxComponent_OnComponentBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BreathingBarLungsWidget
// 0x0018 (FullSize[0x0278] - InheritedSize[0x0260])
class UBreathingBarLungsWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData_CSIM[0x8];                                     // 0x0260(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UImage*                                      _lungs;                                                    // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _lungsCritical;                                            // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BreathingBarLungsWidget"));
		return ptr;
	}



	void StopCriticalLungsAnimation();
	void StartCriticalLungsAnimation();
	bool IsCriticalLungsAnimationPlaying();
	class UWidgetAnimation* GetCriticalLungsAnimation();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BrokenArrow
// 0x0000 (FullSize[0x0758] - InheritedSize[0x0758])
class ABrokenArrow : public AItem
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BrokenArrow"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Injury
// 0x0000 (FullSize[0x01B0] - InheritedSize[0x01B0])
class UInjury : public USickness
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Injury"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PhysicalInjury
// 0x0070 (FullSize[0x0220] - InheritedSize[0x01B0])
class UPhysicalInjury : public UInjury
{
public:
	unsigned char                                      UnknownData_83Z3[0x70];                                    // 0x01B0(0x0070) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PhysicalInjury"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BrokenLimbsInjury
// 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
class UBrokenLimbsInjury : public UPhysicalInjury
{
public:
	unsigned char                                      UnknownData_SYSW[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BrokenLimbsInjury"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BruisingComponent
// 0x0078 (FullSize[0x0128] - InheritedSize[0x00B0])
class UBruisingComponent : public UActorComponent
{
public:
	class UBruisingData*                               BruisingData;                                              // 0x00B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               FadeBruises;                                               // 0x00B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OU8H[0x3];                                     // 0x00B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BruisesLifeTime;                                           // 0x00BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BruisesFadeUpdateInterval;                                 // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LJX2[0x4];                                     // 0x00C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTextureRenderTarget2D*                      _renderTargetByLayer[0x3];                                 // 0x00C8(0x0018) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WVPP[0x48];                                    // 0x00E0(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BruisingComponent"));
		return ptr;
	}



	void MakeCompletelyBruised();
	class UTextureRenderTarget2D* GetBruiseLayerRenderTarget(ConZ_EBruiseLayer Layer);
	void ClearBruises();
	void AddBruise(ConZ_EBruiseZone zone);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BruisingData
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UBruisingData : public UDataAsset
{
public:
	TArray<struct FBruisePatch>                        Patches;                                                   // 0x0030(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BruisingData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BuildingHelperComponent
// 0x0000 (FullSize[0x00B0] - InheritedSize[0x00B0])
class UBuildingHelperComponent : public UActorComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BuildingHelperComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Building
// 0x0108 (FullSize[0x0328] - InheritedSize[0x0220])
class ABuilding : public AActor
{
public:
	unsigned char                                      UnknownData_ZTDC[0x10];                                    // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FLadderMarker>                       _ladderMarkers;                                            // 0x0230(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HKGN[0x10];                                    // 0x0240(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FWindowMarker>                       _windowMarkers;                                            // 0x0250(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FWindowMarker>                       _windowMarkersDynamic;                                     // 0x0260(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FWindowMarkerModifier>               _windowMarkerModifiers;                                    // 0x0270(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	bool                                               _isCleared;                                                // 0x0280(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isClaimable;                                              // 0x0281(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UPTO[0x6];                                     // 0x0282(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FString, class ADoor*>                 _doors;                                                    // 0x0288(0x0050) (NativeAccessSpecifierPrivate)
	TArray<class UFortificationComponent*>             _fortifications;                                           // 0x02D8(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FJ0A[0x40];                                    // 0x02E8(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Building"));
		return ptr;
	}



	void OnRep_WindowMarkerModifiers();
	void OnRep_Cleared();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BuildingManager
// 0x0248 (FullSize[0x0468] - InheritedSize[0x0220])
class ABuildingManager : public AActor
{
public:
	unsigned char                                      UnknownData_CY5Q[0x48];                                    // 0x0220(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class ABuilding*, struct FBox2D>              _buildings;                                                // 0x0268(0x0050) (NativeAccessSpecifierPrivate)
	TMap<struct FDbIntegerId, struct FBuildingsArray>  _buildingsOwned;                                           // 0x02B8(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UPOK[0x8];                                     // 0x0308(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FBuildingsReplicationHelper                 _buildingsDataRepHelper;                                   // 0x0310(0x00E0) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KOK2[0x78];                                    // 0x03F0(0x0078) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BuildingManager"));
		return ptr;
	}



	void NetMulticast_UpdateDoorData(int dataVersion, const struct FString& runtimeId, const struct FDoorRepData& doorData);
	void NetMulticast_UpdateBuildingFortificationsState(int dataVersion, const struct FString& buildingId, TArray<struct FFortificationData> FortificationData);
	void NetMulticast_UpdateBuildingData(int dataVersion, const struct FString& runtimeId, const struct FBuildingData& BuildingData);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Burnable
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UBurnable : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Burnable"));
		return ptr;
	}



	void SetFuel(float Value);
	float GetFuel();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BuryData
// 0x0070 (FullSize[0x00A0] - InheritedSize[0x0030])
class UBuryData : public UDataAsset
{
public:
	TMap<TEnumAsByte<PhysicsCore_EPhysicalSurface>, struct FBuryMaterialData> AllowedBuryMaterials;                                      // 0x0030(0x0050) (Edit, NativeAccessSpecifierPublic)
	class UClass*                                      MoundItemClass;                                            // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              staminaDrain;                                              // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoveredStaminaThreshold;                                 // 0x008C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      SkillToIncrease;                                           // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SkillIncreaseAmount;                                       // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SkillIncreaseModifier;                                     // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BuryData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BuryToolItemTag
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UBuryToolItemTag : public UBaseItemTag
{
public:
	bool                                               IsSmallSizedTool;                                          // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4SWT[0x3];                                     // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                BuryItemUsage;                                             // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BuryDurationModifier;                                      // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BladeTipSocket;                                            // 0x003C(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       BladeCenterSocket;                                         // 0x0044(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShortToolMinBuryTime;                                      // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShortToolMaxBuryTime;                                      // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LongToolMinBuryTime;                                       // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LongToolMaxBuryTime;                                       // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BP5B[0x4];                                     // 0x005C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BuryToolItemTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.C4PartTag
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UC4PartTag : public UBaseItemTag
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.C4PartTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Deficiency
// 0x0010 (FullSize[0x01C0] - InheritedSize[0x01B0])
class UDeficiency : public USickness
{
public:
	unsigned char                                      UnknownData_ACJ2[0x10];                                    // 0x01B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Deficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CalciumDeficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UCalciumDeficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CalciumDeficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CamouflageSkill
// 0x0108 (FullSize[0x01A8] - InheritedSize[0x00A0])
class UCamouflageSkill : public UIntelligenceSkill
{
public:
	float                                              _activationTime;                                           // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _standingPenalty;                                          // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _crouchingPenalty;                                         // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _pronePenalty;                                             // 0x00AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _slowMovingStandingPenalty;                                // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _slowMovingCrouchingPenalty;                               // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _slowMovingPronePenalty;                                   // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumMovingStandingPenalty;                              // 0x00BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumMovingCrouchingPenalty;                             // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _fastMovingStandingPenalty;                                // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _standingAIPerceptionMultiplier;                           // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _crouchingAIPerceptionMultiplier;                          // 0x00CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _proneAIPerceptionMultiplier;                              // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxRelevantAIPerceptionRadius;                            // 0x00D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7FKI[0x6C];                                    // 0x00D8(0x006C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCamouflageSkillExperienceAwards            NoSkillExperienceAwards;                                   // 0x0144(0x0004) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FCamouflageSkillExperienceAwards            BasicSkillExperienceAwards;                                // 0x0148(0x0004) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FCamouflageSkillExperienceAwards            MediumSkillExperienceAwards;                               // 0x014C(0x0004) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FCamouflageSkillExperienceAwards            AdvancedSkillExperienceAwards;                             // 0x0150(0x0004) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FCamouflageSkillExperienceAwards            AboveAdvancedSkillExperienceAwards;                        // 0x0154(0x0004) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FCamouflageSkillParametersPerSkillLevel     NoSkillParameters;                                         // 0x0158(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FCamouflageSkillParametersPerSkillLevel     BasicSkillParameters;                                      // 0x0168(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FCamouflageSkillParametersPerSkillLevel     MediumSkillParameters;                                     // 0x0178(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FCamouflageSkillParametersPerSkillLevel     AdvancedSkillParameters;                                   // 0x0188(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FCamouflageSkillParametersPerSkillLevel     AboveAdvancedSkillParameters;                              // 0x0198(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CamouflageSkill"));
		return ptr;
	}



	float GetHidePenaltyForCharacter(class AConZCharacter* Character);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CampylobacteriosisPoisoning
// 0x0008 (FullSize[0x01B8] - InheritedSize[0x01B0])
class UCampylobacteriosisPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData_S8F9[0x8];                                     // 0x01B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CampylobacteriosisPoisoning"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CarbonMonoxidePoisoning
// 0x0010 (FullSize[0x01C0] - InheritedSize[0x01B0])
class UCarbonMonoxidePoisoning : public UDisease
{
public:
	unsigned char                                      UnknownData_0966[0x10];                                    // 0x01B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CarbonMonoxidePoisoning"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CargoDropContainer
// 0x00E8 (FullSize[0x0308] - InheritedSize[0x0220])
class ACargoDropContainer : public AActor
{
public:
	float                                              DelayDuration;                                             // 0x0220(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FallDuration;                                              // 0x0224(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DetonationTime;                                            // 0x0228(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DetonationCountdown;                                       // 0x022C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               LandSound;                                                 // 0x0230(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               WarningSound;                                              // 0x0238(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               DetonationSound;                                           // 0x0240(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             DetonationParticles;                                       // 0x0248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CameraShakeClass;                                          // 0x0250(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              MajorSpawnerOptions;                                       // 0x0258(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FCargoDropSpawnerPreset>             MinorSpawnerOptions;                                       // 0x0268(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               UnlockLockersAudioEvent;                                   // 0x0278(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        _parachuteMesh;                                            // 0x0280(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*                    _flareParticles;                                           // 0x0288(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*                    _dustParticles;                                            // 0x0290(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKillBoxTimerWidget*                         _timerWidget;                                              // 0x0298(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextRenderComponent*                        _lockedText;                                               // 0x02A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextRenderComponent*                        _unlockedText;                                             // 0x02A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_S4Z3[0x10];                                    // 0x02B0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     _endLocation;                                              // 0x02C0(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                                    _rotation;                                                 // 0x02CC(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                               _landed;                                                   // 0x02D8(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SZCR[0x3];                                     // 0x02D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _fallingSpeed;                                             // 0x02DC(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _timeRemaining;                                            // 0x02E0(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _flareParticlesEnabled;                                    // 0x02E4(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VATO[0x3];                                     // 0x02E5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UStaticMeshComponent*>                _cargoLockers;                                             // 0x02E8(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SU0N[0x10];                                    // 0x02F8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CargoDropContainer"));
		return ptr;
	}



	void SetTimerWidget(class UKillBoxTimerWidget* timerWidget);
	void SetLockedTexts(class UTextRenderComponent* lockedText, class UTextRenderComponent* unlockedText);
	void OnWarning();
	void OnTouchdown();
	void OnRep_FlareParticlesEnabled();
	void OnDetonate();
	void Multicast_StartDetonation();
	void Multicast_Detonate();
	void DropToLocation(const struct FVector& EndLocation, float fallingTime);
	void AddCargoLocker(class UStaticMeshComponent* cargoLocker);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WorldEvent
// 0x0028 (FullSize[0x0248] - InheritedSize[0x0220])
class AWorldEvent : public AActor
{
public:
	struct FVector                                     Location;                                                  // 0x0220(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Radius;                                                    // 0x022C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture*                                    IconTexture;                                               // 0x0230(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QLO4[0x10];                                    // 0x0238(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WorldEvent"));
		return ptr;
	}



	void StartEvent();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CargoDropEvent
// 0x0068 (FullSize[0x02B0] - InheritedSize[0x0248])
class ACargoDropEvent : public AWorldEvent
{
public:
	TArray<class UClass*>                              CargoDropClasses;                                          // 0x0248(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	class APlayerStart*                                ForcePlayerStart;                                          // 0x0258(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSpawnCharacterAroundInfo                   _characterAroundInfo;                                      // 0x0260(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CargoDropEvent"));
		return ptr;
	}



	void Multicast_DisplayNotification(const struct FString& SectorName, float FallDuration);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CargoDropShip
// 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
class ACargoDropShip : public AActor
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CargoDropShip"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CCAttributeSpinnerWidget
// 0x0040 (FullSize[0x02A0] - InheritedSize[0x0260])
class UCCAttributeSpinnerWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData_ZYRY[0x18];                                    // 0x0260(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTextBlock*                                  _valueTextBlock;                                           // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UButton*                                     _increaseValueButton;                                      // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UButton*                                     _decreaseValueButton;                                      // 0x0288(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_44EC[0x10];                                    // 0x0290(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CCAttributeSpinnerWidget"));
		return ptr;
	}



	void IncreaseValueButton_OnClicked();
	void DecreaseValueButton_OnClicked();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CCBodyTypeTriangleWidget
// 0x0048 (FullSize[0x02A8] - InheritedSize[0x0260])
class UCCBodyTypeTriangleWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData_IJVI[0x18];                                    // 0x0260(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCanvasPanel*                                _markerBackgroundCanvasPanel;                              // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _markerBackgroundImage;                                    // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCanvasPanel*                                _markerCanvasPanel;                                        // 0x0288(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _markerImage;                                              // 0x0290(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UMAQ[0x10];                                    // 0x0298(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CCBodyTypeTriangleWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CCMainWidget
// 0x0010 (FullSize[0x0270] - InheritedSize[0x0260])
class UCCMainWidget : public UUserWidget
{
public:
	class UCCBodyTypeTriangleWidget*                   _bodyTypeTriangleWidget;                                   // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E0WX[0x8];                                     // 0x0268(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CCMainWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponItem
// 0x0048 (FullSize[0x07A0] - InheritedSize[0x0758])
class AWeaponItem : public AItem
{
public:
	uint32_t                                           SizeXInHands;                                              // 0x0758(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           SizeYInHands;                                              // 0x075C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           MinRange;                                                  // 0x0760(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           MaxRange;                                                  // 0x0764(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           MinDamage;                                                 // 0x0768(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           MaxDamage;                                                 // 0x076C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           AP;                                                        // 0x0770(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           MagazineSize;                                              // 0x0774(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           FireModes;                                                 // 0x0778(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           ROF;                                                       // 0x077C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           ReloadTime;                                                // 0x0780(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ESDX[0x4];                                     // 0x0784(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWeaponAccuracyGroup*                        AccuracyGroup;                                             // 0x0788(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponDamageGroup*                          DamageGroup;                                               // 0x0790(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponRecoilGroup*                          RecoilGroup;                                               // 0x0798(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Chainsaw
// 0x1460 (FullSize[0x1C00] - InheritedSize[0x07A0])
class AChainsaw : public AWeaponItem
{
public:
	unsigned char                                      UnknownData_3XRM[0x8];                                     // 0x07A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMeshComponent*                      SkeletalMesh;                                              // 0x07A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharacterAndItemAnimation                  AnimationsStartEngine;                                     // 0x07B0(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCharacterAndItemAnimation                  AnimationsCheckFuelStatus;                                 // 0x07C0(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UBaseItemTag*                                ChoppingToolItemTag;                                       // 0x07D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               TurnOnAudioEvent;                                          // 0x07D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               TurnOffAudioEvent;                                         // 0x07E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      _fuelType;                                                 // 0x07E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                       _inFuelingSocketTypes;                                     // 0x07F0(0x0020) (Edit, NativeAccessSpecifierPrivate)
	float                                              _maxFuelAmount;                                            // 0x0810(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _initialFuelAmount;                                        // 0x0814(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _fuelUsagePerHour;                                         // 0x0818(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _fuelUsagePerHourMultiplierWhenActive;                     // 0x081C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _fuelFillingDurationPerAmountFilled;                       // 0x0820(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _fuelFillingExperiencePerAmount;                           // 0x0824(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _fuelFillingMontage;                                       // 0x0828(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMeleeSkillAnimationsPreset*                 _meleeSkillAnimationsPresetWhenTurnedOff;                  // 0x0830(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMeleeSkillAnimationsPreset*                 _meleeSkillAnimationsPresetWhenTurnedOn;                   // 0x0838(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _fuelStartFillingAudioEvent;                               // 0x0840(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _fuelStopFillingAudioEvent;                                // 0x0848(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _currentFuelAmount;                                        // 0x0850(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _turnedOn;                                                 // 0x0854(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_U547[0x13AB];                                  // 0x0855(0x13AB) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Chainsaw"));
		return ptr;
	}



	void SetUseFuelUsagePerHourMultiplierWhenActive(bool Value);
	void Server_SetUseFuelUsagePerHourMultiplierWhenActive(bool Value);
	void Server_SetTurnedOn(bool Value);
	void OnRep_TurnedOn(bool OldValue);
	bool GetUseFuelUsagePerHourMultiplierWhenActive();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemAnimInstance
// 0x0018 (FullSize[0x02D0] - InheritedSize[0x02B8])
class UItemAnimInstance : public UAnimInstance
{
public:
	unsigned char                                      UnknownData_CWM1[0x8];                                     // 0x02B8(0x0008) Fix Super Size
	ConZ_EPrisonerStance                               _owningPrisonerStance;                                     // 0x02C0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isOwningPrisonerInFirstPersonView;                        // 0x02C1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NGL4[0xE];                                     // 0x02C2(0x000E) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemAnimInstance"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ChainsawAnimInstance
// 0x0010 (FullSize[0x02E0] - InheritedSize[0x02D0])
class UChainsawAnimInstance : public UItemAnimInstance
{
public:
	bool                                               _isTurnedOn;                                               // 0x02D0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_A7DQ[0xF];                                     // 0x02D1(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ChainsawAnimInstance"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponAction
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UWeaponAction : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponAction"));
		return ptr;
	}



	void RemoveCartridgeFromWeapon();
	void RemoveAttachmentFromWeapon(class AWeapon* Weapon, class AWeaponAttachment* attachment);
	void OnWeaponActionAnimNotify(ConZ_EWeaponActionNotifyType notifyType);
	void OnActionAnimNotify(ConZ_ECharacterActionNotifyType notifyType);
	void InsertCartridgeIntoWeapon(class AWeapon* Weapon, class AAmmunitionItem* ammo);
	void InsertCartridgeIntoMagazine(class AWeaponAttachmentMagazine* magazine, class AAmmunitionItem* ammo);
	class AWeapon* GetWeapon();
	void AddAttachmentToWeapon(class AWeapon* Weapon, class AWeaponAttachment* attachment);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponActionReloadSequence
// 0x0068 (FullSize[0x0090] - InheritedSize[0x0028])
class UWeaponActionReloadSequence : public UWeaponAction
{
public:
	struct FBodyWeaponAnimation                        AnimationStandAndCrouch;                                   // 0x0028(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBodyWeaponAnimation                        AnimationProne;                                            // 0x0038(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               CanBeInterrupted;                                          // 0x0048(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ROZU[0x47];                                    // 0x0049(0x0047) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponActionReloadSequence"));
		return ptr;
	}



	void SetNextMontageSectionFromPrevious(const struct FName& previousSection, const struct FName& NextSection);
	void SetNextMontageSection(const struct FName& NextSection);
	void OnMontageEnded(class UAnimMontage* Montage, bool interrupted);
	void OnMontageBlendingOutStarted(class UAnimMontage* Montage, bool interrupted);
	struct FWeaponReloadData GetReloadData();
	class UAnimMontage* GetActiveAnimationWeapon();
	class UAnimMontage* GetActiveAnimationBody();
	float ExecuteUsingData(const struct FWeaponReloadData& Data);
	void End(bool Regular);
	bool CanInterrupt();
	bool CanExecuteUsingData(const struct FWeaponReloadData& Data);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ChamberCartridge
// 0x0000 (FullSize[0x0090] - InheritedSize[0x0090])
class UChamberCartridge : public UWeaponActionReloadSequence
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ChamberCartridge"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WaypointWidget
// 0x0098 (FullSize[0x0310] - InheritedSize[0x0278])
class UWaypointWidget : public UDesignableUserWidget
{
public:
	class UTexture2D*                                  IconTexture;                                               // 0x0278(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  AccentTexture;                                             // 0x0280(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                AccentColor;                                               // 0x0288(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BarValue;                                                  // 0x0298(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                BarColor;                                                  // 0x029C(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeightOffset;                                              // 0x02AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Emphasized;                                                // 0x02B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OVEZ[0x3];                                     // 0x02B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FLinearColor                                EmphasisColor;                                             // 0x02B4(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_56O0[0x4];                                     // 0x02C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     LabelText;                                                 // 0x02C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FWP1[0x38];                                    // 0x02D8(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WaypointWidget"));
		return ptr;
	}



	void TieLifetimeToActor(class AActor* Target);
	void SetWorldPosition(const struct FVector& Location);
	void SetTargetActor(class AActor* Target);
	void OnLifetimeTiedActorDestroyed(class AActor* Actor);
	bool IsOnScreen();
	bool IsAttached();
	class AActor* GetTargetActor();
	float GetDistance();
	float GetAngle();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ChangeTextWidget
// 0x0028 (FullSize[0x0338] - InheritedSize[0x0310])
class UChangeTextWidget : public UWaypointWidget
{
public:
	unsigned char                                      UnknownData_J4F3[0x28];                                    // 0x0310(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ChangeTextWidget"));
		return ptr;
	}



	void TextAcceptedEvent__DelegateSignature(class APrisoner* User, const struct FText& Text);
	void SetMaxNumberOfCharacters(int Value);
	void SetCurrentInputText_BP(const struct FText& Text);
	void OnTextAccepted();
	void OnCurrentInputTextChanged(const struct FText& Text);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CharacterAction
// 0x00D0 (FullSize[0x00F8] - InheritedSize[0x0028])
class UCharacterAction : public UObject
{
public:
	unsigned char                                      UnknownData_NDJY[0x30];                                    // 0x0028(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UCharacterActionDescription*>         PreActionsDescriptions;                                    // 0x0058(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UCharacterActionDescription*>         PostActionsDescriptions;                                   // 0x0068(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)
	class UCharacterAction*                            ParentAction;                                              // 0x0078(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UCharacterAction*>                    _preActions;                                               // 0x0080(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UCharacterAction*>                    _postActions;                                              // 0x0090(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UActionProgressWidget*                       _progressWidget;                                           // 0x00A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZD75[0x8];                                     // 0x00A8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCharacterActionDescription*                 _description;                                              // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4FMA[0x40];                                    // 0x00B8(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CharacterAction"));
		return ptr;
	}



	float PlayMontage(class UAnimMontage* Montage, float PlayRate, const struct FName& startSection, bool assignCallbacks);
	void OnProgressWidgetFinished();
	void OnProgressWidgetCanceled();
	void OnPreActionEnd(class UCharacterAction* Action);
	void OnPostActionEnd(class UCharacterAction* Action);
	void OnMontageEnded(class UAnimMontage* Montage, bool interrupted);
	void OnMontageBlendingOutStarted(class UAnimMontage* Montage, bool interrupted);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CharacterActionDescription
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UCharacterActionDescription : public UObject
{
public:
	unsigned char                                      UnknownData_C87R[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CharacterActionDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CharacterCreationProgressBar
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
class UCharacterCreationProgressBar : public UDesignableUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CharacterCreationProgressBar"));
		return ptr;
	}



	void NativeSetSliderFromPercentage(float percent, bool onlyWholeNumbers, int segmentsNum, bool enableRemainingPercentage, int* Index, int maxIndex, float snapTreshold, float* leftoverPercentage, float maxPercentage);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CharacterCreationWidget
// 0x0008 (FullSize[0x0280] - InheritedSize[0x0278])
class UCharacterCreationWidget : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData_QQQS[0x8];                                     // 0x0278(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CharacterCreationWidget"));
		return ptr;
	}



	void StartGame();
	void ShowErrorDialog(const struct FText& Message);
	void SendKeepServerConnectionAliveRequest();
	void OnUserProfileCreated();
	float ModifyAttributesByAttributeSize(struct FVector4* Attributes, float attributeSizeNormalized);
	TArray<int> GetRandomValuesInRangeAddingUpTo(int Min, int Max, int sum, int Num);
	TArray<float> GetRandomizedSkillValuesFloat(float Points, int Num, float* usedPoints);
	TArray<int> GetRandomizedSkillValues(int Points, int Num);
	struct FDateTime GetRandomBirthdayForAge(int Age);
	void EndWaitingOnServerResponse();
	void CreateUserProfile(struct FCharacterTemplate* CharacterTemplate);
	void CancelWaitingOnServerResponse();
	void BeginWaitingOnServerResponse();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CharacterImpactSoundsData
// 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
class UCharacterImpactSoundsData : public UDataAsset
{
public:
	struct FCharacterHeadImpactSoundsData              head;                                                      // 0x0030(0x0018) (Edit, NativeAccessSpecifierPublic)
	struct FCharacterTorsoImpactSoundsData             Torso;                                                     // 0x0048(0x0018) (Edit, NativeAccessSpecifierPublic)
	struct FCharacterArmsImpactSoundsData              Arms;                                                      // 0x0060(0x0018) (Edit, NativeAccessSpecifierPublic)
	struct FCharacterLegsImpactSoundsData              Legs;                                                      // 0x0078(0x0018) (Edit, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CharacterImpactSoundsData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CharacterPainSoundsData
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UCharacterPainSoundsData : public UDataAsset
{
public:
	class UAkAudioEvent*                               AudioEvent;                                                // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CharacterPainSoundsData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CharacterSelectionWidget
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
class UCharacterSelectionWidget : public UDesignableUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CharacterSelectionWidget"));
		return ptr;
	}



	void DeleteCharacter(class UUserProfile* UserProfile);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CharacterSpawner
// 0x0078 (FullSize[0x0298] - InheritedSize[0x0220])
class ACharacterSpawner : public AActor
{
public:
	class UBillboardComponent*                         SpriteComponent;                                           // 0x0220(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterSpawnerData2>              Characters;                                                // 0x0228(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<TEnumAsByte<PhysicsCore_EPhysicalSurface>>  AllowedSurfaces;                                           // 0x0238(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int                                                CharactersPerCell;                                         // 0x0248(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TotalCharacters;                                           // 0x024C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CellSize;                                                  // 0x0250(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CellsX;                                                    // 0x0254(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CellsY;                                                    // 0x0258(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinSpawnRadius;                                            // 0x025C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSpawnRadius;                                            // 0x0260(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinSpawnDistance;                                          // 0x0264(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSpawnDistance;                                          // 0x0268(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CullDistance;                                              // 0x026C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SpawnRetries;                                              // 0x0270(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TickFrequency;                                             // 0x0274(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Enabled;                                                   // 0x0278(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DebugDraw;                                                 // 0x0279(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KS4R[0x2];                                     // 0x027A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FColor                                      DebugColor;                                                // 0x027C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_P5F2[0x18];                                    // 0x0280(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CharacterSpawner"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CharacterSpawnerComponent
// 0x0038 (FullSize[0x0230] - InheritedSize[0x01F8])
class UCharacterSpawnerComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData_ZKFD[0x4];                                     // 0x01F8(0x0004) Fix Super Size
	float                                              Probability;                                               // 0x01FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               OverrideDefaultRespawnTime;                                // 0x0200(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_68YE[0x3];                                     // 0x0201(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RespawnTime;                                               // 0x0204(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MinCharactersToSpawn;                                      // 0x0208(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxCharactersToSpawn;                                      // 0x020C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterSpawnerMarker>             SpawnerMarkers;                                            // 0x0210(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DZDT[0x10];                                    // 0x0220(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CharacterSpawnerComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CharacterSpawnerSpawnee
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UCharacterSpawnerSpawnee : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CharacterSpawnerSpawnee"));
		return ptr;
	}



	void SetupCharacter(const struct FCharacterSpawneeInfo& spawneeInfo);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CharacterSpawningManager
// 0x1588 (FullSize[0x17A8] - InheritedSize[0x0220])
class ACharacterSpawningManager : public AActor
{
public:
	TArray<struct FPawnCharacterInfo>                  _spawnableCharacters;                                      // 0x0220(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	float                                              _managerProcessUpdateTime;                                 // 0x0230(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _spawnUpdateTime;                                          // 0x0234(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _spawnTriggerGroupUpdateTime;                              // 0x0238(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _spawnTriggerGroupRadius;                                  // 0x023C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _spawnTriggerGroupProximityQueryRadius;                    // 0x0240(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _interiorSearchDistanceThreshold;                          // 0x0244(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _exteriorSpawnerGroupsSpawnCooldownTimeSP;                 // 0x0248(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _interiorSpawnerGroupsSpawnCooldownTimeSP;                 // 0x024C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _exteriorSpawnerGroupsSpawnCooldownTimeMP;                 // 0x0250(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _interiorSpawnerGroupsSpawnCooldownTimeMP;                 // 0x0254(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _baseElementQueryDistance;                                 // 0x0258(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _exteriorSpawnerGroupsProbabilityMP;                       // 0x025C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _interiorSpawnerGroupsProbabilityMP;                       // 0x0260(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _exteriorSpawnerGroupsProbabilitySP;                       // 0x0264(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _interiorSpawnerGroupsProbabilitySP;                       // 0x0268(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _disableSerialization;                                     // 0x026C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _startSpawnerGroupCooldownAfterSpawning;                   // 0x026D(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _startSpawnerGroupCooldownAfterEnteringInterior;           // 0x026E(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LTKU[0x159];                                   // 0x026F(0x0159) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _referencedPawnClasses[0x50];                              // 0x026F(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      UnknownData_OGC7[0x1390];                                  // 0x0418(0x1390) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CharacterSpawningManager"));
		return ptr;
	}



	void SpawnCharactersAroundLocation(const struct FSpawnCharacterAroundInfo& Info);
	void SpawnCharacterGroup(const struct FSpawnCharacterGroupInfo& Info);
	bool SpawnCharacter(const struct FTransform& SpawnTransform, class UClass* PawnClass, bool IgnoreLimit);
	void OnSpawnTriggerDestroyed(class AActor* DestroyedActor);
	void OnSpawnedPawnDestroyed(class AActor* DestroyedActor);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CharacterSpawnerPreset
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UCharacterSpawnerPreset : public UObject
{
public:
	struct FCharacterSpawnerData                       SpawnerData;                                               // 0x0028(0x0010) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CharacterSpawnerPreset"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ChatNotification
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UChatNotification : public UConZNotification
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ChatNotification"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ChatNotificationDescription
// 0x0018 (FullSize[0x0058] - InheritedSize[0x0040])
class UChatNotificationDescription : public UNotificationDescription
{
public:
	struct FString                                     Message;                                                   // 0x0040(0x0010) (ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EChatType                                     chatType;                                                  // 0x0050(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               shouldCopyToClientClipboard;                               // 0x0051(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F6OX[0x6];                                     // 0x0052(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ChatNotificationDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ChatSuggestionWidget
// 0x0038 (FullSize[0x02B0] - InheritedSize[0x0278])
class UChatSuggestionWidget : public UDesignableUserWidget
{
public:
	class UBorder*                                     _border;                                                   // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChatText*                                   _textBlock;                                                // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _defaultColor;                                             // 0x0288(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _highlightedColor;                                         // 0x0298(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5TDW[0x8];                                     // 0x02A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ChatSuggestionWidget"));
		return ptr;
	}



	void SetText(const struct FString& Text);
	void SetIsHighlighted(bool Value);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ChatText
// 0x0000 (FullSize[0x02A8] - InheritedSize[0x02A8])
class UChatText : public UTextBlock
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ChatText"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ChatWidget
// 0x00D8 (FullSize[0x0350] - InheritedSize[0x0278])
class UChatWidget : public UDesignableUserWidget
{
public:
	class UImage*                                      _backgroundImage;                                          // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScrollBox*                                  _chatScrollBox;                                            // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScrollBox*                                  _suggestionsScrollBox;                                     // 0x0288(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                                    _suggestionsDropDown;                                      // 0x0290(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEditableTextBox*                            _inputText;                                                // 0x0298(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _chatTypeIndicator;                                        // 0x02A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _localChatColor;                                           // 0x02A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _globalChatColor;                                          // 0x02B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _squadChatColor;                                           // 0x02C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _serverChatColor;                                          // 0x02D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _errorChatColor;                                           // 0x02E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _defaultChatColor;                                         // 0x02F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _suggestionsTextColor;                                     // 0x0308(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MS32[0x8];                                     // 0x0318(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAdminCommandCompletionManager*              _adminCommandCompletionManager;                            // 0x0320(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_W014[0x28];                                    // 0x0328(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ChatWidget"));
		return ptr;
	}



	void UpdateActiveSuggestions();
	void SetChatType(ConZ_EChatType chatType);
	void OnTextCommitted(const struct FText& Text, TEnumAsByte<SlateCore_ETextCommit> CommitMethod);
	void OnTextChanged(const struct FText& Text);
	TArray<struct FString> GetSuggestions(const struct FString& Text, bool useSubstring);
	ConZ_EChatType GetChatType();
	void AddText(const struct FText& Text, ConZ_EChatType chatType);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponActionCheckAmmoSequence
// 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
class UWeaponActionCheckAmmoSequence : public UWeaponAction
{
public:
	struct FBodyWeaponAnimation                        Animations;                                                // 0x0028(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               CanBeInterrupted;                                          // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QQYB[0x17];                                    // 0x0039(0x0017) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponActionCheckAmmoSequence"));
		return ptr;
	}



	void SetNextMontageSectionFromPrevious(const struct FName& previousSection, const struct FName& NextSection);
	void SetNextMontageSection(const struct FName& NextSection);
	void OnMontageEnded(class UAnimMontage* Montage, bool interrupted);
	void OnMontageBlendingOutStarted(class UAnimMontage* Montage, bool interrupted);
	class UAnimMontage* GetActiveAnimationWeapon();
	class UAnimMontage* GetActiveAnimationBody();
	float Execute();
	void End(bool Regular);
	bool CanInterrupt();
	bool CanExecute();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CheckAmmoMagazineAttached
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class UCheckAmmoMagazineAttached : public UWeaponActionCheckAmmoSequence
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CheckAmmoMagazineAttached"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CheckAmmoMagazineNotAttached
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class UCheckAmmoMagazineNotAttached : public UWeaponActionCheckAmmoSequence
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CheckAmmoMagazineNotAttached"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CheckDetectableItemsAction
// 0x0010 (FullSize[0x00B0] - InheritedSize[0x00A0])
class UCheckDetectableItemsAction : public USkillAction
{
public:
	unsigned char                                      UnknownData_C5RT[0x10];                                    // 0x00A0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CheckDetectableItemsAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CheckDetectablePlayersAction
// 0x0008 (FullSize[0x00A8] - InheritedSize[0x00A0])
class UCheckDetectablePlayersAction : public USkillAction
{
public:
	unsigned char                                      UnknownData_X2QB[0x8];                                     // 0x00A0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CheckDetectablePlayersAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CheckOccludedDetectablePlayersAction
// 0x0008 (FullSize[0x00A8] - InheritedSize[0x00A0])
class UCheckOccludedDetectablePlayersAction : public USkillAction
{
public:
	unsigned char                                      UnknownData_NJ45[0x8];                                     // 0x00A0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CheckOccludedDetectablePlayersAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ChokingSickness
// 0x0008 (FullSize[0x01B8] - InheritedSize[0x01B0])
class UChokingSickness : public USickness
{
public:
	unsigned char                                      UnknownData_41R7[0x8];                                     // 0x01B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ChokingSickness"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InteractionAction
// 0x0080 (FullSize[0x00A8] - InheritedSize[0x0028])
class UInteractionAction : public UObject
{
public:
	unsigned char                                      UnknownData_P4KL[0x80];                                    // 0x0028(0x0080) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InteractionAction"));
		return ptr;
	}



	void OnActionFinished();
	void OnActionCanceled();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ChopItemAction
// 0x0008 (FullSize[0x00B0] - InheritedSize[0x00A8])
class UChopItemAction : public UInteractionAction
{
public:
	unsigned char                                      UnknownData_GBZT[0x8];                                     // 0x00A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ChopItemAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Choppable
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UChoppable : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Choppable"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ChoppingObjective
// 0x0038 (FullSize[0x0368] - InheritedSize[0x0330])
class AChoppingObjective : public ARequirementObjective
{
public:
	unsigned char                                      _targetActors[0x10];                                       // 0x0330(0x0010) UNKNOWN PROPERTY: ArrayProperty
	bool                                               _targetSpecificClothesType;                                // 0x0340(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YSA0[0x7];                                     // 0x0341(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<ConZ_EClothesType>                          _targetClothesTypes;                                       // 0x0348(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                               _singleTarget;                                             // 0x0358(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_T9AI[0xF];                                     // 0x0359(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ChoppingObjective"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ChoppingRecipeDataAsset
// 0x0098 (FullSize[0x00C8] - InheritedSize[0x0030])
class UChoppingRecipeDataAsset : public UDataAsset
{
public:
	struct FChoppingRecipe                             ChoppingRecipe;                                            // 0x0030(0x0098) (Edit, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ChoppingRecipeDataAsset"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ChoppingToolItemTag
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UChoppingToolItemTag : public UBaseItemTag
{
public:
	float                                              ChoppingTimeMultiplier;                                    // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                IngredientsQuantityBonus;                                  // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ChoppingToolItemTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CircularMenuSegmentInfo
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UCircularMenuSegmentInfo : public UDataAsset
{
public:
	struct FText                                       Caption;                                                   // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UCircularMenuSegmentIcons*                   Icons;                                                     // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldApplyFadeToIcon;                                     // 0x0050(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MXBX[0x3];                                     // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              IconSizeOverride;                                          // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCircularMenuWidget*                         ParentCircularWidget;                                      // 0x0058(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CircularMenuSegmentInfo"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CircularMenuSegmentWeaponMalfunctionInfo
// 0x0008 (FullSize[0x0068] - InheritedSize[0x0060])
class UCircularMenuSegmentWeaponMalfunctionInfo : public UCircularMenuSegmentInfo
{
public:
	ConZ_EWeaponMalfunction                            _weaponMalfunction;                                        // 0x0060(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IGNK[0x7];                                     // 0x0061(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CircularMenuSegmentWeaponMalfunctionInfo"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CircularMenuSegmentIcons
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UCircularMenuSegmentIcons : public UDataAsset
{
public:
	class UTexture2D*                                  UnselectedIcon;                                            // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  SelectedIcon;                                              // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  DisabledIcon;                                              // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  OverlayIcon;                                               // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CircularMenuSegmentIcons"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CircularMenuSegmentSubmenuInfo
// 0x0018 (FullSize[0x0078] - InheritedSize[0x0060])
class UCircularMenuSegmentSubmenuInfo : public UCircularMenuSegmentInfo
{
public:
	TArray<class UCircularMenuSegmentInfo*>            SubmenuInfo;                                               // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                              IndexOffset;                                               // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WKCW[0x4];                                     // 0x0074(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CircularMenuSegmentSubmenuInfo"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CircularMenuSegmentThrowingInfo
// 0x0018 (FullSize[0x0078] - InheritedSize[0x0060])
class UCircularMenuSegmentThrowingInfo : public UCircularMenuSegmentInfo
{
public:
	struct FScriptDelegate                             Action;                                                    // 0x0060(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	int                                                Index;                                                     // 0x0070(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E69T[0x4];                                     // 0x0074(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CircularMenuSegmentThrowingInfo"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CircularMenuSegmentGenericInfo
// 0x0010 (FullSize[0x0070] - InheritedSize[0x0060])
class UCircularMenuSegmentGenericInfo : public UCircularMenuSegmentInfo
{
public:
	struct FScriptDelegate                             Action;                                                    // 0x0060(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CircularMenuSegmentGenericInfo"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CircularMenuSegmentInteractionInfo
// 0x0090 (FullSize[0x00F0] - InheritedSize[0x0060])
class UCircularMenuSegmentInteractionInfo : public UCircularMenuSegmentInfo
{
public:
	ConZ_EInteractionTargetType                        InteractionTargetType;                                     // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JGGH[0x7];                                     // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FInteractionStruct                          InteractionInfo;                                           // 0x0068(0x0078) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class APrisoner*                                   _interactionInitiator;                                     // 0x00E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UObject*                                     _interactableObject;                                       // 0x00E8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CircularMenuSegmentInteractionInfo"));
		return ptr;
	}



	class UCircularMenuSegmentInteractionInfo* CreateSpecific(class APrisoner* initiator, class UObject* interactable, const struct FInteractionStruct& InteractionStruct);
	class UCircularMenuSegmentInteractionInfo* Create(ConZ_EInteractionTargetType interactionTarget, const struct FInteractionStruct& InteractionStruct);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CircularMenuSegmentWidget
// 0x0070 (FullSize[0x02E8] - InheritedSize[0x0278])
class UCircularMenuSegmentWidget : public UDesignableUserWidget
{
public:
	float                                              _nonSelectableAlpha;                                       // 0x0278(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _highlightedColour;                                        // 0x027C(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _unHighlightedColour;                                      // 0x028C(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6NWW[0x4];                                     // 0x029C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCircularMenuSegmentInfo*                    _info;                                                     // 0x02A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _segment;                                                  // 0x02A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                                    _iconsOverlay;                                             // 0x02B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                                    _iconSizeBox;                                              // 0x02B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _icon;                                                     // 0x02C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                                    _overlayIconSizeBox;                                       // 0x02C8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _overlayIcon;                                              // 0x02D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UJ5Y[0x10];                                    // 0x02D8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CircularMenuSegmentWidget"));
		return ptr;
	}



	void UpdateVisualParameters(int numberOfSegments, int Index, float Offset, float middleCutoffPercentage, float Size);
	class UCircularMenuSegmentWidget* CreateFromInfo(class UCircularMenuSegmentInfo* Info);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CircularMenuWidget
// 0x0048 (FullSize[0x02C0] - InheritedSize[0x0278])
class UCircularMenuWidget : public UDesignableUserWidget
{
public:
	TArray<struct FCircularLayerData>                  _layerData;                                                // 0x0278(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	float                                              _centerSize;                                               // 0x0288(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_86XU[0x4];                                     // 0x028C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FCircularSegmentContainer>           _segmentsByLayer;                                          // 0x0290(0x0010) (ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UOverlay*                                    _mainOverlay;                                              // 0x02A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _actionText;                                               // 0x02A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RTV0[0x10];                                    // 0x02B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CircularMenuWidget"));
		return ptr;
	}



	void InitializeThrowingLayer(int Layer, float Offset, TArray<class UCircularMenuSegmentThrowingInfo*> SegmentInfo, int countParameterOverride);
	void InitializeLayer(int Layer, float Offset, TArray<class UCircularMenuSegmentInfo*> SegmentInfo, int countParameterOverride, bool createAdditionalDummySegments);
	int GetSegmentIdForCoordinatesAndLayer(const struct FVector2D& Coordinates, int Layer);
	int GetSegmentIdForCoordinates(const struct FVector2D& Coordinates, int* Layer);
	class UCircularMenuWidget* CreateThrowingMenuWidget(class UObject* WorldContextObject, TArray<class UCircularMenuSegmentThrowingInfo*> throwingSegmentInfo);
	class UCircularMenuWidget* Create(class UObject* WorldContextObject, TArray<class UCircularMenuSegmentInfo*> SegmentInfo);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CircularParameterWidget
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
class UCircularParameterWidget : public UDesignableUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CircularParameterWidget"));
		return ptr;
	}



	void SetMaxValue(float Value);
	void SetCurrentValue(float Value);
	float GetPercentage();
	float GetMaxValue();
	float GetCurrentValue();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponActionClearMalfunctionSequence
// 0x0090 (FullSize[0x00B8] - InheritedSize[0x0028])
class UWeaponActionClearMalfunctionSequence : public UWeaponAction
{
public:
	int                                                SortIndex;                                                 // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EWeaponMalfunction                            MalfunctionType;                                           // 0x002C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MRIL[0x3];                                     // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       Description;                                               // 0x0030(0x0018) (Edit, NativeAccessSpecifierPublic)
	class UCircularMenuSegmentWeaponMalfunctionInfo*   CircularMenuSegmentInfo;                                   // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<ConZ_EWeaponMalfunction, struct FClearMalfunctionData> Malfunctions;                                              // 0x0050(0x0050) (Edit, NativeAccessSpecifierPublic)
	bool                                               CanBeInterrupted;                                          // 0x00A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowBeginFiringSequence;                                  // 0x00A1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RL61[0x16];                                    // 0x00A2(0x0016) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponActionClearMalfunctionSequence"));
		return ptr;
	}



	bool ShowOnUI();
	bool ShouldClearMalfunctionOnEvent(ConZ_EWeaponMalfunction malfunction, ConZ_EWeaponMalfunctionEvent malfunctionEvent);
	void SetNextMontageSectionFromPrevious(const struct FName& previousSection, const struct FName& NextSection);
	void SetNextMontageSection(const struct FName& NextSection);
	void OnMontageEnded(class UAnimMontage* Montage, bool interrupted);
	void OnMontageBlendingOutStarted(class UAnimMontage* Montage, bool interrupted);
	void HandleMalfunctionEvent(ConZ_EWeaponMalfunctionEvent malfunctionEvent, const struct FWeaponMalfunctionEventDescription& desc);
	class UAnimMontage* GetActiveAnimationWeapon();
	class UAnimMontage* GetActiveAnimationBody();
	float Execute();
	void End(bool Regular);
	bool CanInterrupt();
	bool CanExecute(ConZ_EWeaponMalfunction malfunction);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ClearBadRound
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UClearBadRound : public UWeaponActionClearMalfunctionSequence
{
public:
	struct FName                                       MontageEndSectionName;                                     // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ClearBadRound"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ClearClipPartiallyEjected
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UClearClipPartiallyEjected : public UWeaponActionClearMalfunctionSequence
{
public:
	struct FName                                       MontageEndSectionName;                                     // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ClearClipPartiallyEjected"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ClearDoubleFeed
// 0x0018 (FullSize[0x00D0] - InheritedSize[0x00B8])
class UClearDoubleFeed : public UWeaponActionClearMalfunctionSequence
{
public:
	struct FName                                       MontageEndSectionName;                                     // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                _ejectedRoundsCount;                                       // 0x00C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QXUN[0x4];                                     // 0x00C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AWeaponAttachmentMagazine*                   _magazineToRestore;                                        // 0x00C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ClearDoubleFeed"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ClearRoundNotLoaded
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UClearRoundNotLoaded : public UWeaponActionClearMalfunctionSequence
{
public:
	struct FName                                       MontageEndSectionName;                                     // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ClearRoundNotLoaded"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ClearStovePipe
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UClearStovePipe : public UWeaponActionClearMalfunctionSequence
{
public:
	struct FName                                       MontageEndSectionName;                                     // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ClearStovePipe"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ClearStuckBullet
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UClearStuckBullet : public UWeaponActionClearMalfunctionSequence
{
public:
	struct FName                                       MontageEndSectionName;                                     // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ClearStuckBullet"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ClockFaceWidget
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
class UClockFaceWidget : public UDesignableUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ClockFaceWidget"));
		return ptr;
	}



	void SetTime(float Time);
	void SetMinutes(int Minutes);
	void SetHours(int Hours);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InteractionAssetData
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UInteractionAssetData : public UAssetUserData
{
public:
	unsigned char                                      UnknownData_M3QG[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InteractionAssetData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CutObjectAssetData
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UCutObjectAssetData : public UInteractionAssetData
{
public:
	class UChoppingRecipeDataAsset*                    ChoppingRecipeDataAsset;                                   // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CutObjectAssetData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CollectObjectAssetData
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UCollectObjectAssetData : public UCutObjectAssetData
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CollectObjectAssetData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CompassItemTag
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UCompassItemTag : public UBaseItemTag
{
public:
	unsigned char                                      CompassLevel;                                              // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LYLE[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CompassItemTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CompassWidget
// 0x0040 (FullSize[0x02A0] - InheritedSize[0x0260])
class UCompassWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData_CJMC[0x8];                                     // 0x0260(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UImage*                                      _compassTrack;                                             // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture2D*                                  _compassTrackNorthOnly;                                    // 0x0270(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture2D*                                  _compassTrackCardinalOnly;                                 // 0x0278(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture2D*                                  _compassTrackCardinalAndIntercardinal;                     // 0x0280(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture2D*                                  _compassTrackEverything;                                   // 0x0288(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                                   _offset;                                                   // 0x0290(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _compassTrackWidthMultiplier;                              // 0x0298(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5939[0x4];                                     // 0x029C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CompassWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ComplexAnimal2
// 0x0180 (FullSize[0x0A4C] - InheritedSize[0x08CC])
class AComplexAnimal2 : public AAnimal2
{
public:
	float                                              HungerDepletionRate;                                       // 0x08CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HungerDepletionRateWhenResting;                            // 0x08D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EnergyRefillRate;                                          // 0x08D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HungerRefillRate;                                          // 0x08D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HealthRegenerationRate;                                    // 0x08DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HealthDepletionRate;                                       // 0x08E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnimalPaceSettings                         MovementPaceSettings;                                      // 0x08E4(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAnimalStationaryRotationRateSettings       RotationRateSettings;                                      // 0x08F4(0x003C) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnActionChanged;                                           // 0x0930(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FChargeAttackData>                   ChargeAttacks;                                             // 0x0940(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCloseRangeAttackData>               CloseRangeAttacks;                                         // 0x0950(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FTurnMontages                               TurnMonatges;                                              // 0x0960(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FAnimalActionMontageData                    AnimalActions;                                             // 0x0970(0x0018) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                              AttackRotationRate;                                        // 0x0988(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinActionTime;                                             // 0x098C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                HitReactTypeResting;                                       // 0x0990(0x0008) (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                HitReactTypeIntimidate;                                    // 0x0998(0x0008) (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DE73[0x8];                                     // 0x09A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint16_t                                           _hungerAndEnergyReplicated;                                // 0x09A8(0x0002) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SCSS[0x16];                                    // 0x09AA(0x0016) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     _lookAtPoint;                                              // 0x09C0(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0QLQ[0x80];                                    // 0x09CC(0x0080) Fix Super Size


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ComplexAnimal2"));
		return ptr;
	}



	void Wait(float Time);
	float TurnTowardLocation(const struct FVector& Location);
	float TurnTowardActor(class AActor* foe);
	float TurnAwayFromActor(class AActor* foe);
	float Turn(bool directionLeft);
	void StopAction_Multicast();
	void StartAction_Multicast(const struct FRepActionData& newAction);
	void Sit(float Time);
	void Rest(float Time);
	void ResetRotationRate();
	bool PreformChargeAttack(int attackIndex, float Time);
	void OnRep_HungerAndEnergy();
	void OnRep_ActionData();
	void NetMulticast_ForceSetAnimalRotation(const struct FRotator& NewRotation);
	bool IsAttacking();
	void Intimidate(float Time, class AActor* foe);
	struct FVector GetSpeed();
	float GetAngularVelocity();
	void ForceRoattionRate(const struct FRotator& RotationRate);
	void Eat(float Time);
	bool ChargeAttackFoe(class AActor* foe);
	void ChangeSpeed(float pace);
	void ChangePace(ConZ_EAnimalMovementPace pace);
	void Alert(float Time);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ComplexAnimal2AnimInstance
// 0x0070 (FullSize[0x0360] - InheritedSize[0x02F0])
class UComplexAnimal2AnimInstance : public UAnimal2AnimInstance
{
public:
	ConZ_EAnimalAction                                 CurrentAction;                                             // 0x02F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8L2E[0x3];                                     // 0x02F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HeadLookRight;                                             // 0x02F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HeadLookUp;                                                // 0x02F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HeadMovementLerpSpeed;                                     // 0x02FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AngularVelocity;                                           // 0x0300(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       faceMorphTargetName;                                       // 0x0304(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InterpolationSpeed;                                        // 0x030C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BlendInTime;                                               // 0x0310(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              BlendOutTime;                                              // 0x0314(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZTJA[0x3C];                                    // 0x0318(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _faceMorphValueChangePerSeconds;                           // 0x0354(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Y4AR[0x8];                                     // 0x0358(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ComplexAnimal2AnimInstance"));
		return ptr;
	}



	float GetTurnInPlaceElapsedTimeRight();
	float GetTurnInPlaceElapsedTimeLeft();
	float GetTurnInPlaceDirectionBlendAlpha();
	float GetTurnInPlaceBlendAlpha();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConsoleStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UConsoleStatics : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConsoleStatics"));
		return ptr;
	}



	void SetHasPendingChanges(bool Value);
	void SetGraphicsPreset(int preset);
	void SetConfigVar2(ConZ_EConfigFile file, const struct FString& Key, const struct FString& Value, const struct FString& Section);
	void SetConfigVar(const struct FString& Key, const struct FString& Value, const struct FString& Section);
	void RevertConfig();
	bool IsPushToTalkEnabled();
	bool GetInvertMouseY();
	bool GetHasPendingChanges();
	struct FString GetConfigVar(ConZ_EConfigFile file, const struct FString& Key, const struct FString& Section);
	struct FString GetConfigString(const struct FString& Key);
	int GetConfigInt(const struct FString& Key);
	float GetConfigFloat(const struct FString& Key);
	struct FString GetConfigFileName(ConZ_EConfigFile file);
	bool GetConfigBool(const struct FString& Key);
	void ConsoleFloatChanged__DelegateSignature(float Value);
	void ConsoleBoolChanged__DelegateSignature(bool Value);
	void ApplyDynamicShadowsQuality(class UObject* WorldContextObject, int overrideQuality);
	void ApplyConfig();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConstitutionSkill
// 0x0018 (FullSize[0x00B8] - InheritedSize[0x00A0])
class UConstitutionSkill : public USkill
{
public:
	unsigned char                                      UnknownData_7A7W[0x18];                                    // 0x00A0(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConstitutionSkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ContainerItemDescriptor
// 0x00B8 (FullSize[0x00E0] - InheritedSize[0x0028])
class UContainerItemDescriptor : public UObject
{
public:
	unsigned char                                      UnknownData_TDZ3[0x20];                                    // 0x0028(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _itemClass;                                                // 0x0048(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1PB8[0x10];                                    // 0x0050(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FContainerItemDescriptorData                _data;                                                     // 0x0060(0x0050) (Net, NativeAccessSpecifierPrivate)
	TScriptInterface<class UInventoryContainer>        _owningContainer;                                          // 0x00B0(0x0010) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TScriptInterface<class UInventoryNode>             _owningNode;                                               // 0x00C0(0x0010) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	bool                                               _firstReplication;                                         // 0x00D0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6356[0xF];                                     // 0x00D1(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ContainerItemDescriptor"));
		return ptr;
	}



	void OnItemStateChanged(class AItem* Item);
	void OnItemDestroyed(class AActor* Actor);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZAssetManager
// 0x0060 (FullSize[0x04B8] - InheritedSize[0x0458])
class UConZAssetManager : public UAssetManager
{
public:
	TArray<struct FImageAssetToLoad>                   _imageAssetsToLoad;                                        // 0x0458(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RI3F[0x50];                                    // 0x0468(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZAssetManager"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZBase
// 0x00B8 (FullSize[0x02D8] - InheritedSize[0x0220])
class AConZBase : public AActor
{
public:
	TWeakObjectPtr<class AConZBaseElement>             _baseElementActor;                                         // 0x0220(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2E9Q[0x84];                                    // 0x0228(0x0084) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _drawBaseDebug;                                            // 0x02AC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EBaseBuildingDebugMode                        _debugMode;                                                // 0x02AD(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               _overrideBlockStackingRules;                               // 0x02AE(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_M5H3[0x1];                                     // 0x02AF(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _debugRenderingDistance;                                   // 0x02B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _decayProcessingNumberOfFrames;                            // 0x02B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _decayProcessingMaxDestroyedElementsPerUpdate;             // 0x02B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_109T[0x1C];                                    // 0x02BC(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZBase"));
		return ptr;
	}



	void OnElementInteracted(class APrisoner* User, ConZ_EInteractionType interactionType, const struct FInteractionData& InteractionData);
	struct FString GetBaseName();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZBaseElement
// 0x0100 (FullSize[0x0320] - InheritedSize[0x0220])
class AConZBaseElement : public AActor
{
public:
	unsigned char                                      UnknownData_6NOZ[0x28];                                    // 0x0220(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _weatherMaskComponentClass;                                // 0x0248(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_H2AX[0x8];                                     // 0x0250(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UStaticMesh*, class UHierarchicalInstancedStaticMeshComponent*> _elementClassMap;                                          // 0x0258(0x0050) (ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LTAX[0x78];                                    // 0x02A8(0x0078) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZBaseElement"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZBaseManager
// 0x0168 (FullSize[0x0388] - InheritedSize[0x0220])
class AConZBaseManager : public AActor
{
public:
	unsigned char                                      UnknownData_IQUL[0x60];                                    // 0x0220(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _damageEventProcessingPeriod;                              // 0x0280(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _decayProcessingPeriod;                                    // 0x0284(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _flagOvertakePeriod;                                       // 0x0288(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _baseInteractionsPeriod;                                   // 0x028C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _baseClass;                                                // 0x0290(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _baseElementClass;                                         // 0x0298(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _flagAreaVisualizerClass;                                  // 0x02A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                                   _initialBaseSize;                                          // 0x02A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _flagInfluenceRadius;                                      // 0x02B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _flagOvertakeDuration;                                     // 0x02B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxBaseBuildingHeight;                                    // 0x02B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FConZBaseRepairAreaDuration                 _shortRepairDuration;                                      // 0x02BC(0x0008) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FConZBaseRepairAreaDuration                 _mediumRepairDuration;                                     // 0x02C4(0x0008) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FConZBaseRepairAreaDuration                 _longRepairDuration;                                       // 0x02CC(0x0008) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8RZ3[0x10];                                    // 0x02D4(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _useBuildingRestrictions;                                  // 0x02E4(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _disableBaseBuilding;                                      // 0x02E5(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SWO5[0xA];                                     // 0x02E6(0x000A) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<int64_t, class AConZBase*>                    _bases;                                                    // 0x02F0(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6IR8[0x48];                                    // 0x0340(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZBaseManager"));
		return ptr;
	}



	void NetMulticast_UpdateDoorData(int dataVersion, const struct FVector& doorLocation, const struct FDoorRepData& doorData);
	void NetMulticast_TransferOwnership(int dataVersion, const struct FDbIntegerId& oldId, const struct FDbIntegerId& newId);
	void NetMulticast_SpawnBaseElement(int dataVersion, const struct FTransform& Transform, const struct FConZBaseData& baseData, class UClass* ElementClass, int64_t ElementID, int64_t prisonerPlayerId, bool IsOwnedByPlayer, const struct FBaseElementSpawnParams& Params);
	void NetMulticast_SetDebugMode(class APrisoner* Prisoner, ConZ_EBaseBuildingDebugMode Mode);
	void NetMulticast_SetBaseOwnerPlayerId(int dataVersion, const struct FConZBaseInteractionData& baseData, int64_t PlayerId);
	void NetMulticast_ProcessDecay(int dataVersion, float DeltaSeconds);
	void NetMulticast_InteractWithElement(int dataVersion, ConZ_EInteractionType interactionType, const struct FConZBaseInteractionData& baseData, const struct FConZBaseElementInteractionData& baseElementData, class APrisoner* User);
	void NetMulticast_ExecuteFlagOvertake(int dataVersion, int64_t ElementID, const struct FVector& elementLocation, const struct FDbIntegerId& PlayerId);
	void NetMulticast_DestroyElement(int dataVersion, const struct FConZBaseElementIdentifier& ElementIdentifier, bool cascade);
	void NetMulticast_DestroyAllElementsInRadius(int dataVersion, const struct FVector& Center, float Radius, float minElementAreaCovered, float minAngleDeg, float maxAngleDeg, const struct FVector& forwardVector, ConZ_EBaseElementType typeFilter);
	void NetMulticast_ClearBaseOwnerPlayerId(int dataVersion, const struct FConZBaseInteractionData& baseData);
	void NetMulticast_ChangeFlagOwner(int dataVersion, const struct FDbIntegerId& oldOwnerId, const struct FDbIntegerId& newOwnerId);
	void NetMulticast_ApplyDamageToBaseElement(int dataVersion, int64_t BaseId, int64_t ElementID, const struct FVector& elementLocation, float DamageAmount);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZBlueprintFunctionLibrary
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UConZBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZBlueprintFunctionLibrary"));
		return ptr;
	}



	void ChangeLocalization(const struct FString& Target);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZCameraManager
// 0x0010 (FullSize[0x27C0] - InheritedSize[0x27B0])
class AConZCameraManager : public APlayerCameraManager
{
public:
	unsigned char                                      UnknownData_9PFQ[0x10];                                    // 0x27B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZCameraManager"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZGameInstance
// 0x0198 (FullSize[0x0340] - InheritedSize[0x01A8])
class UConZGameInstance : public UGameInstance
{
public:
	struct FCommonMapNames                             CommonMapNames;                                            // 0x01A8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FCharacterCreationMenuContext               CharacterCreationMenuContext;                              // 0x01C0(0x0030) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                               NetworkFailed;                                             // 0x01F0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               WasKickedFromGameSession;                                  // 0x01F1(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VNEK[0x16];                                    // 0x01F2(0x0016) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UGameplayLog*                                GameplayLogLogin;                                          // 0x0208(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameplayLog*                                GameplayLogAdmin;                                          // 0x0210(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameplayLog*                                GameplayLogKill;                                           // 0x0218(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameplayLog*                                GameplayLogViolations;                                     // 0x0220(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameplayLog*                                GameplayLogChat;                                           // 0x0228(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               FileIntegrityCompromised;                                  // 0x0230(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SUJ3[0x7];                                     // 0x0231(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    FileIntegrityCompromisedDelegate;                          // 0x0238(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LZW5[0x8];                                     // 0x0248(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<uint32_t, class UDbConnection*>               _databaseConnections;                                      // 0x0250(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7POF[0x28];                                    // 0x02A0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDedicatedServerRequest*                     _serverRequest;                                            // 0x02C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserManager*                                _userManager;                                              // 0x02D0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUser*                                       _currentUser;                                              // 0x02D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserProfile*                                _currentUserProfile;                                       // 0x02E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture2D*                                  _loadingScreenTexture;                                     // 0x02E8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULoadingScreen*                              _loadingScreen;                                            // 0x02F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9PEV[0x48];                                    // 0x02F8(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZGameInstance"));
		return ptr;
	}



	void StartSingleplayerGame();
	void StartMultiplayerGame(const struct FString& ip, int gameplayPort, const struct FString& authToken);
	void SetPlayAsDrone(bool Value);
	void SetCurrentUserProfile(class UUserProfile* Value);
	void RemoveLoadingWidget();
	void OnVoiceChatVolumeChanged(float Volume);
	void OnPreLoadMap(const struct FString& mapName);
	void OnPostLoadMap(class UWorld* loadedWorld);
	void OnPlaySessionEnd(bool quit);
	bool IsTransitioningMap();
	void HandleNetworkFailure(class UWorld* World, class UNetDriver* NetDriver, TEnumAsByte<Engine_ENetworkFailure> FailureType, const struct FString& errorString);
	class UUserManager* GetUserManager();
	class UDedicatedServerRequest* GetServerRequest();
	bool GetPlayAsDrone();
	struct FText GetLastNetworkError();
	class UDbConnection* GetDatabaseConnection();
	class UUserProfile* GetCurrentUserProfile();
	class UUser* GetCurrentUser();
	void FileIntegrityCompromisedDelegate__DelegateSignature();
	void AddLoadingWidget(class ULoadingScreen* Widget);
	void AddDefaultLoadingWidget();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZGameMode
// 0x0550 (FullSize[0x0858] - InheritedSize[0x0308])
class AConZGameMode : public AGameMode
{
public:
	float                                              SerializationFrequency;                                    // 0x0308(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HFTY[0x1C];                                    // 0x030C(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDoorLockingRegistry*                        _doorLockingRegistry;                                      // 0x0328(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _prisonerClassToSpawn;                                     // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _droneClassToSpawn;                                        // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SFR6[0xB8];                                    // 0x0340(0x00B8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _itemSpawningManagerClass;                                 // 0x03F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AItemSpawningManager*                        _itemSpawningManager;                                      // 0x0400(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _itemVirtualizationManagerClass;                           // 0x0408(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AItemVirtualizationManager*                  _itemVirtualizationManager;                                // 0x0410(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGlobalAnimalSpawner*                        _globalAnimalSpawner;                                      // 0x0418(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGlobalBirdSpawner2*                         _globalBirdSpawner;                                        // 0x0420(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _vehicleSpawningManagerClass;                              // 0x0428(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AVehicleSpawningManager*                     _vehicleSpawningManager;                                   // 0x0430(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _reportingManagerClass;                                    // 0x0438(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AReportingManager*                           _reportingManager;                                         // 0x0440(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _characterSpawningManagerClass;                            // 0x0448(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACharacterSpawningManager*                   _characterSpawningManager;                                 // 0x0450(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _achievementsManagerServerClass;                           // 0x0458(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AAchievementsManagerServer*                  _achievementsManagerServer;                                // 0x0460(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _missionLevelManagerClass;                                 // 0x0468(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AMissionLevelManager*                        _missionLevelManager;                                      // 0x0470(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _missionSchedulerClass;                                    // 0x0478(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AMissionScheduler*                           _missionScheduler;                                         // 0x0480(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _survivalStatsHandlerClass;                                // 0x0488(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASurvivalStatsHandler*                       _survivalStatsHandler;                                     // 0x0490(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _heatSourceManagerClass;                                   // 0x0498(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AHeatSourceManager*                          _heatSourceManager;                                        // 0x04A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _baseManagerClass;                                         // 0x04A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AConZBaseManager*                            _baseManager;                                              // 0x04B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _ladderMarkersReplicatorClass;                             // 0x04B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ALadderMarkersReplicator*                    _ladderMarkersReplicator;                                  // 0x04C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _effectOverTimeDealerClass;                                // 0x04C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AEffectOverTimeDealer*                       _effectOverTimeDealer;                                     // 0x04D0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _notificationManagerClass;                                 // 0x04D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ANotificationsManager*                       _notificationManager;                                      // 0x04E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _voteSystemManagerClass;                                   // 0x04E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AVoteSystemManager*                          _voteSystemManager;                                        // 0x04F0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _serverAnalyticsManagerClass;                              // 0x04F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AServerAnalyticsManager*                     _serverAnalyticsManager;                                   // 0x0500(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _aiDetectionTimerHandlerClass;                             // 0x0508(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AAIDetectionTimerHandler*                    _aiDetectionTimerHandler;                                  // 0x0510(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TQRE[0xC8];                                    // 0x0518(0x00C8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDedicatedServerResponse*                    _serverResponse;                                           // 0x05E0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SK8S[0x270];                                   // 0x05E8(0x0270) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZGameMode"));
		return ptr;
	}



	void SendHUDMessageToAll(const struct FString& Message, bool beep);
	bool KickPlayer(class AConZPlayerController* Player, const struct FString& KickReason);
	class AVehicleSpawningManager* GetVehicleSpawningManager();
	class ASurvivalStatsHandler* GetSurvivalStatsHandler();
	class AReportingManager* GetReportingManager();
	class AMissionScheduler* GetMissionScheduler();
	class AMissionLevelManager* GetMissionLevelManager();
	class ALadderMarkersReplicator* GetLadderMarkersReplicator();
	class AItemVirtualizationManager* GetItemVirtualizationManager();
	class AItemSpawningManager* GetItemSpawningManager();
	class AHeatSourceManager* GetHeatSourceManager();
	class AGlobalBirdSpawner2* GetGlobalBirdSpawner();
	class AGlobalAnimalSpawner* GetGlobalAnimalSpawner();
	class AEffectOverTimeDealer* GetEffectOverTimeDealer();
	class ACharacterSpawningManager* GetCharacterSpawningManager();
	class AConZBaseManager* GetBaseManager();
	class AAIDetectionTimerHandler* GetAIDetectionTimerHandler();
	class AAchievementsManagerServer* GetAchievementsManagerServer();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZGameSession
// 0x0000 (FullSize[0x0238] - InheritedSize[0x0238])
class AConZGameSession : public AGameSession
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZGameSession"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZGameState
// 0x03E8 (FullSize[0x0678] - InheritedSize[0x0290])
class AConZGameState : public AGameState
{
public:
	unsigned char                                      UnknownData_JEIG[0x58];                                    // 0x0290(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class URespawnSettings*                            RespawnSettings;                                           // 0x02E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowSectorRespawn;                                        // 0x02F0(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowShelterRespawn;                                       // 0x02F1(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowSquadmateRespawn;                                     // 0x02F2(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CZ0X[0x5];                                     // 0x02F3(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCraftingDatabase*                           _craftingDatabase;                                         // 0x02F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGlobalItemSpawner*                          _globalItemSpawner;                                        // 0x0300(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3M1U[0x20];                                    // 0x0308(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBaseItemTag*                                _persistentItemTag;                                        // 0x0328(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AConZCharacter*>                      _registeredCharacters;                                     // 0x0330(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WZQ3[0x50];                                    // 0x0340(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AOceanManager*>                       _oceans;                                                   // 0x0390(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	class USicknessClasses*                            _sicknessClasses;                                          // 0x03A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AConZSquad*>                          _squads;                                                   // 0x03A8(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TMap<TWeakObjectPtr<class AConZCharacter>, int>    _currentDroneTargetDispatcherMap;                          // 0x03B8(0x0050) (NativeAccessSpecifierPrivate)
	TMap<TWeakObjectPtr<class AConZCharacter>, int>    _droneTargetDispatcherHistoryMap;                          // 0x0408(0x0050) (NativeAccessSpecifierPrivate)
	TMap<TWeakObjectPtr<class AConZCharacter>, class UDroneTargetData*> _droneTargetVisits;                                        // 0x0458(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FEVE[0x18];                                    // 0x04A8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _ladderMarkersRegistryClass;                               // 0x04C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ALadderMarkersRegistry*                      _ladderMarkersRegistry;                                    // 0x04C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_N1H5[0x38];                                    // 0x04D0(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UReplenishableResourceManager*               _replenishableResourceManager;                             // 0x0508(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URestorableMeshInstancesManager*             _restorableMeshInstancesManager;                           // 0x0510(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UResourceLockingManager*                     _resourceLockingManager;                                   // 0x0518(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UItemRegistry*                               _itemRegistry;                                             // 0x0520(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USafeZoneRegistry*                           _safeZoneRegistry;                                         // 0x0528(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameResourceContainerProxyForReplenishableResourceRegistry* _gameResourceContainerProxyForReplenishableResourceRegistry; // 0x0530(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SJOD[0xD0];                                    // 0x0538(0x00D0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FDbIntegerId, struct FDbIntegerId>     _prisonerKillRegistry;                                     // 0x0608(0x0050) (NativeAccessSpecifierPrivate)
	class UClass*                                      _customMapBorderClass;                                     // 0x0658(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _tournamentClass;                                          // 0x0660(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACustomMapBorder*                            _customMapBorder;                                          // 0x0668(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ATournament*                                 _tournament;                                               // 0x0670(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZGameState"));
		return ptr;
	}



	void StartTournament(struct FTournamentParameters* parameters);
	void SendServerTime(float Time);
	void RemoveMemberFromSquad(const struct FDbIntegerId& UserProfileId, class AConZSquad* Squad, bool destroySquadIfEmpty);
	void RemoveMemberFromAllSquads(const struct FDbIntegerId& UserProfileId, bool destroySquadIfEmpty);
	void OnRep_Squads();
	void Multicast_SendRespawnSettings(const struct FRespawnParameters& parameters);
	void Multicast_RemoveFromPrisonerKillRegistry(const struct FDbIntegerId& Target);
	void Multicast_AddToOrUpdatePrisonerKillRegistry(const struct FDbIntegerId& Target, const struct FDbIntegerId& killer);
	bool IsTournamentInProgress();
	class ATournament* GetTournament();
	class AConZSquad* GetSquadForUserProfileId(const struct FDbIntegerId& ID);
	class AConZSquad* GetSquadForPrisoner(class APrisoner* Prisoner);
	class AConZSquad* GetSquad(const struct FDbIntegerId& squadId);
	TArray<class APrisoner*> GetRegisteredPrisoners();
	class ACustomMapBorder* GetCustomMapBorder();
	void EndTournament();
	class AConZSquad* CreateSquad(const struct FDbIntegerId& squadId);
	void CleanupSquadsFromDatabase();
	void AddMemberToSquad(const struct FDbIntegerId& UserProfileId, class AConZSquad* Squad);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameplayLog
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UGameplayLog : public UObject
{
public:
	unsigned char                                      UnknownData_53GE[0x18];                                    // 0x0028(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameplayLog"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZPlayerController
// 0x03A8 (FullSize[0x0918] - InheritedSize[0x0570])
class AConZPlayerController : public APlayerController
{
public:
	unsigned char                                      UnknownData_FNR5[0x8];                                     // 0x0570(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UPrimitiveComponent*>                 ComponentsToHide;                                          // 0x0578(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPrisonerSpawned;                                         // 0x0588(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UInteractionContainerUserWidget*             CurrentInteractionContainerWidget;                         // 0x0598(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LocalChatDistance;                                         // 0x05A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsTalkButtonPressed;                                       // 0x05A4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9OO5[0x3];                                     // 0x05A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPlayerRpcChannel*                           _playerRpcChannel;                                         // 0x05A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_S2AB[0x68];                                    // 0x05B0(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUserProfile*                                _userProfile;                                              // 0x0618(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X397[0x10];                                    // 0x0620(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     _userFakeName;                                             // 0x0630(0x0010) (Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZZM4[0x30];                                    // 0x0640(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class APawn*                                       _possessedPawn;                                            // 0x0670(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VXRX[0x10];                                    // 0x0678(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPawnNoiseEmitterComponent*                  _noiseEmitterComponent;                                    // 0x0688(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FTN0[0x10];                                    // 0x0690(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _teleportWorldStreamingLocationChangeDelay;                // 0x06A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _teleportWorldStreamingTriggerLag;                         // 0x06A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9VPI[0x68];                                    // 0x06A8(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _repFamePoints;                                            // 0x0710(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HLTR[0xA4];                                    // 0x0714(0x00A4) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _maxHistorySize;                                           // 0x07B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6AM7[0x14];                                    // 0x07BC(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _weatherHeightUpdatePeriod;                                // 0x07D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5T2F[0x4];                                     // 0x07D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAdminCommandRegistry*                       _adminCommandRegistry;                                     // 0x07D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PJ8S[0x20];                                    // 0x07E0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AAchievementsManagerClient*                  _achievementsManagerClient;                                // 0x0800(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _achievementsManagerClientClass;                           // 0x0808(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _missionManagerClass;                                      // 0x0810(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AMissionManager*                             _missionManager;                                           // 0x0818(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _missionDialogueManagerClass;                              // 0x0820(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LXNF[0x60];                                    // 0x0828(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _isReadyForPlayDelay;                                      // 0x0888(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_77ZG[0xC];                                     // 0x088C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDateTime                                   _replicatedServerUtcNow;                                   // 0x0898(0x0008) (Net, ZeroConstructor, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OQCX[0x60];                                    // 0x08A0(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPathFollowingComponent*                     _pathFollowingComponent;                                   // 0x0900(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _forceSpawnAsDrone;                                        // 0x0908(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _mpSpawnDroneAndPrisoner;                                  // 0x0909(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E6WE[0xE];                                     // 0x090A(0x000E) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZPlayerController"));
		return ptr;
	}



	void UpdateUpdateableNotification(const struct FString& notificationName, const struct FString& Message);
	void ToggleGameMenuEvent();
	void Testing_ProcessAdminCommand(const struct FString& commandText);
	void Teleport(const struct FTeleportRequest& request);
	void ShowWarningMessage(const struct FString& Message, float Duration, const struct FLinearColor& TextColor);
	void ShowUpdateableNotification(const struct FString& notificationName, const struct FString& Message, float Duration, bool ping);
	void ShowNotification(const struct FString& Message, float Duration, bool ping);
	void ShowLevelUpMessageFromClass(class UClass* skillClass, ConZ_ESkillLevel skillLevel);
	void ShowLevelUpMessage(class USkill* Skill, ConZ_ESkillLevel skillLevel);
	void ShowKillFeedNotificationOnClient(const struct FString& prefix, const struct FString& characterName, const struct FString& suffix, bool ping);
	void ShowKillFeedMessage(const struct FString& prefix, const struct FString& characterName, const struct FString& suffix, bool ping);
	void ShowHUDMessage(const struct FString& Message, bool beep);
	void SetTeleportWorldStreamingLocationChangeDelay(float Value);
	void SetRespawnOptionTime(ConZ_ERespawnOption option, float Time, bool force);
	void SetIsChatDuplicationToMessageNotificationsMuted(bool Value);
	void SetGameEventCooldown(float cooldown);
	void SetFamePoints(float Value);
	void SetCommitSuicideOptionTime(float Time);
	void Server_SendProofOfLife();
	void Server_SelfKickFromGameSession(const struct FString& reason);
	void Server_RequestSurvivalStats(uint32_t ID, const struct FDbIntegerId& UserProfileId);
	void Server_RequestSquadRankingData(uint32_t ID, const struct FDbIntegerId& squadId, int count);
	void Server_RequestSquadMemberInfo(uint32_t ID, const struct FDbIntegerId& squadId);
	void Server_RequestRespawnWaitTime();
	void Server_RequestGameEventTeamChange(int preferredTeam);
	void Server_RequestEventsRankingStats(uint32_t ID, const struct FDbIntegerId& UserProfileId, int count, ConZ_EEventsRankingStatsOrderByField orderByField, ConZ_ESortOrder sortOrder);
	void Server_ReportStartLeavingGame();
	void Server_ReportPlayPreparationsSucceeded();
	void Server_ReportCancelLeavingGame();
	void Server_ProcessAdminCommand(const struct FString& commandText);
	void Server_LeaveGameEvent();
	void Server_JoinGameEvent(class AGameEventBase* gameEvent, int preferredTeam);
	void Server_AllowCertainInventoryInteractions();
	void SendHUDMessageToClient(const struct FString& Message, bool beep);
	void SendHUDMessageToAll(const struct FString& Message, bool beep);
	void SendChatStringToServer(const struct FString& string, ConZ_EChatType chatType);
	void SendChatStringToClient(class AConZPlayerState* SenderPlayerState, const struct FString& string, ConZ_EChatType chatType, bool shouldCopyToClientClipboard);
	void SendAnimalEyeSocketYawToServer(class AAnimal2* Animal, unsigned char Yaw);
	void SaveState();
	void RepossesOriginalPrisoner();
	void RemoveServerFromFavorites();
	void RegisterRespawn(ConZ_ERespawnOption option);
	void RegisterCommitSuicide();
	void RebuildCompletionsForRegisteredAdminCommands();
	void PushChatMessage(const struct FString& string, class AConZPlayerState* SenderPlayerState, ConZ_EChatType chatType, bool shouldCopyToClientClipboard);
	void PrisonerSpawnedDelegate__DelegateSignature(class APrisoner* spawnedPrisoner);
	void OnRep_UserFakeName();
	void OnRep_ReplicatedServerUtcNow();
	void OnRep_PossessedPawn();
	void OnRep_FamePoints();
	void LoadState();
	void LeaveGameEvent();
	void JoinGameEvent(class AGameEventBase* gameEvent, int preferredTeam);
	bool IsTeleportInProgress();
	bool IsPushToTalkPressed();
	void InputComponent_CancelAllControllerActions();
	void InitializePathFollowingComponent(class APrisoner* Prisoner);
	void HandleChatMessageCommit(const struct FText& Text, ConZ_EChatType chatType);
	struct FString GetUserProfileName();
	struct FDbIntegerId GetUserProfileId();
	class UUserProfile* GetUserProfile();
	struct FString GetUserName2();
	struct FString GetUserId();
	float GetTeleportWorldStreamingLocationChangeDelay();
	struct FDbIntegerId GetServerUserProfileId();
	float GetRespawnWaitTime();
	float GetRespawnOptionTimeLeft(ConZ_ERespawnOption option);
	float GetRespawnOptionTime(ConZ_ERespawnOption option);
	class APrisoner* GetPrisoner();
	class UPlayerRpcChannel* GetPlayerRpcChannel();
	class UPawnNoiseEmitterComponent* GetNoiseEmitterComponent();
	class AMissionDialogueManager* GetMissionDialogueManager();
	struct FPlayerLoginInfo GetLoginInfo();
	bool GetIsChatDuplicationToMessageNotificationsMuted();
	float GetGameEventCooldown();
	int GetFamePointsRounded();
	float GetFamePoints();
	float GetFameMultiplier();
	int GetFameLevel();
	class AMissionDialogueManager* GetDialogueManager();
	float GetCommitSuicideOptionTimeLeft();
	class AConZCameraManager* GetCameraManager();
	class UAdminCommandRegistry* GetAdminCommandRegistry();
	class AAchievementsManagerClient* GetAchievementsManagerClient();
	void Crash();
	int ComputeFameLevel(float FamePoints);
	void Client_UpdateRespawnSettings(const struct FRespawnParameters& parameters);
	void Client_UpdateAdminCommandSquadArgumentCompletionValues(TArray<struct FString> Values);
	void Client_UpdateAdminCommandPlayerArgumentCompletionValues(TArray<struct FString> Values);
	void Client_UnmuteUser(const struct FString& UserId);
	void Client_TestPingLockStuff(float averageDelta, float averagePing, float counter);
	void Client_SetRespawnWaitTime(float Seconds);
	void Client_SetRespawnOptionTime(ConZ_ERespawnOption option, float Time);
	void Client_SetGameEventCooldown(float cooldown);
	void Client_SetCommitSuicideOptionTime(float Time);
	void Client_SaveState();
	void Client_RecieveBytesFromStream(int streamId, TArray<unsigned char> bytes);
	void Client_ReceiveSurvivalStats(uint32_t ID, const struct FSurvivalStats& stats);
	void Client_ReceiveSquadRankingData(uint32_t ID, TArray<struct FString> names, TArray<struct FString> information, TArray<uint64_t> emblems, TArray<float> scores, int squadRank, int squadIndex);
	void Client_ReceiveSquadMemberInfo(uint32_t ID, TArray<struct FDbIntegerId> userProfileIds, TArray<struct FString> names, TArray<ConZ_EConZSquadMemberRank> ranks, TArray<float> FamePoints, TArray<bool> online);
	void Client_ReceiveEventsRankingStats(uint32_t ID, TArray<struct FEventsRankingStatsItem> stats, int playerRank);
	void Client_MuteUser(const struct FString& UserId, const struct FString& userName);
	void Client_Login(const struct FPlayerLoginInfo& serverLoginInfo);
	void Client_ExecuteAdminCommand(const struct FString& commandText);
	void Client_EndByteStream(int streamId);
	void Client_EnableRespawnOption(ConZ_ERespawnOption option);
	void Client_BeginByteStream(int streamId, ConZ_ERawByteStreamType streamType);
	void Client_AllowCertainInventoryInteractions();
	void ClearRespawnOptionTimers();
	void ChatHistoryForward();
	void ChatHistoryBack();
	bool CanAddServerToFavorites();
	void AddServerToFavorites();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZPlayerState
// 0x0010 (FullSize[0x0330] - InheritedSize[0x0320])
class AConZPlayerState : public APlayerState
{
public:
	unsigned char                                      UnknownData_A2MK[0xC];                                     // 0x0320(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint32_t                                           _repPawnLocationOnMap;                                     // 0x032C(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZPlayerState"));
		return ptr;
	}



	void OnRep_PawnLocationForMap();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZReverbComponent
// 0x0028 (FullSize[0x0260] - InheritedSize[0x0238])
class UConZReverbComponent : public UAkLateReverbComponent
{
public:
	class UAkAuxBus*                                   IndoorSmallAuxBus;                                         // 0x0238(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAuxBus*                                   IndoorMediumAuxBus;                                        // 0x0240(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAuxBus*                                   IndoorLargeAuxBus;                                         // 0x0248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAuxBus*                                   OutdoorLargeAuxBus;                                        // 0x0250(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RXZ4[0x8];                                     // 0x0258(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZReverbComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZReverbVolume
// 0x0000 (FullSize[0x0290] - InheritedSize[0x0290])
class AConZReverbVolume : public AAkReverbVolume
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZReverbVolume"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZSpectatorPawn
// 0x0010 (FullSize[0x02B8] - InheritedSize[0x02A8])
class AConZSpectatorPawn : public ASpectatorPawn
{
public:
	float                                              DefaultFOV;                                                // 0x02A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I8IX[0xC];                                     // 0x02AC(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZSpectatorPawn"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZSquad
// 0x0080 (FullSize[0x02A0] - InheritedSize[0x0220])
class AConZSquad : public AActor
{
public:
	struct FDbIntegerId                                squadId;                                                   // 0x0220(0x0008) (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     SquadName;                                                 // 0x0228(0x0010) (Edit, BlueprintVisible, Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     SquadMessage;                                              // 0x0238(0x0010) (Edit, BlueprintVisible, Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     SquadInformation;                                          // 0x0248(0x0010) (Edit, BlueprintVisible, Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FConZSquadEmblem                            SquadEmblem;                                               // 0x0258(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FConZSquadPendingMember>             _pendingMembers;                                           // 0x0260(0x0010) (Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FConZSquadMember>                    _members;                                                  // 0x0270(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TArray<struct FConZSquadMember>                    _oldMembers;                                               // 0x0280(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	uint64_t                                           _repEmblem;                                                // 0x0290(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _maxAllowedSquadMembers;                                   // 0x0298(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QK7J[0x4];                                     // 0x029C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZSquad"));
		return ptr;
	}



	void UpdateMemberStatus();
	void UpdateMemberLimit();
	void SetMemberRank(const struct FDbIntegerId& UserProfileId, ConZ_EConZSquadMemberRank Rank);
	void SendMessageToMembers(const struct FString& Message);
	void RemoveMember(const struct FDbIntegerId& UserProfileId);
	void PromoteMember(const struct FDbIntegerId& UserProfileId);
	void OnRep_SquadName();
	void OnRep_SquadMessage();
	void OnRep_Members();
	void OnRep_Emblem();
	bool IsMemberCountValid(bool includePending);
	bool IsAnyMemberInDanger();
	bool IsAnyMemberAlive();
	void InviteMember(const struct FDbIntegerId& UserProfileId);
	bool HasMember(const struct FDbIntegerId& UserProfileId, bool includePending);
	struct FDbIntegerId GetSuccessorForMember(const struct FDbIntegerId& UserProfileId);
	TArray<struct FConZSquadMember> GetOnlineMembers();
	int GetOnlineMemberCount();
	TArray<struct FConZSquadMember> GetMembers();
	ConZ_EConZSquadMemberRank GetMemberRank(const struct FDbIntegerId& UserProfileId);
	ConZ_EAccessLevel GetMemberLockAccessibility(const struct FDbIntegerId& UserProfileId);
	int GetMemberCount(bool includePending);
	struct FConZSquadMember GetMember(const struct FDbIntegerId& UserProfileId);
	int GetMaxAllowedMemberCount();
	struct FDbIntegerId GetLeader();
	void GenerateName();
	void GenerateMessage();
	void GenerateInformation();
	void GenerateEmblem();
	void DemoteMember(const struct FDbIntegerId& UserProfileId);
	bool CanMemberRecruitMembers(const struct FDbIntegerId& UserProfileId);
	bool CanMemberPromoteRank(const struct FDbIntegerId& UserProfileId, ConZ_EConZSquadMemberRank Rank);
	bool CanMemberKickRank(const struct FDbIntegerId& UserProfileId, ConZ_EConZSquadMemberRank Rank);
	bool CanMemberEditName(const struct FDbIntegerId& UserProfileId);
	bool CanMemberEditMessage(const struct FDbIntegerId& UserProfileId);
	bool CanMemberEditInformation(const struct FDbIntegerId& UserProfileId);
	bool CanMemberEditEmblem(const struct FDbIntegerId& UserProfileId);
	bool CanMemberDemoteRank(const struct FDbIntegerId& UserProfileId, ConZ_EConZSquadMemberRank Rank);
	void AddMember(const struct FDbIntegerId& UserProfileId, ConZ_EConZSquadMemberRank Rank);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZVehicle4W
// 0x0A40 (FullSize[0x0CD0] - InheritedSize[0x0290])
class AConZVehicle4W : public ADcxVehicle4W
{
public:
	unsigned char                                      UnknownData_1TPX[0x20];                                    // 0x0290(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVehicleSpawnParameters                     _spawnParameters;                                          // 0x02B0(0x002C) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	ConZ_EConZPxDominanceGroup                         _physicsDominanceGroup;                                    // 0x02DC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PE28[0x1B];                                    // 0x02DD(0x001B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isMassChangeByCargoAllowed;                               // 0x02F8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isMassChangeByMounteesAllowed;                            // 0x02F9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isCenterOfMassChangeByCargoAllowed;                       // 0x02FA(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isCenterOfMassChangeByMounteesAllowed;                    // 0x02FB(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _cargoCenterOfMassOffset;                                  // 0x02FC(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minEffectiveCargoMass;                                    // 0x0308(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxEffectiveCargoMass;                                    // 0x030C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _pushImpulseMagnitude;                                     // 0x0310(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_A7FE[0x4];                                     // 0x0314(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 _pushIntensityCurve;                                       // 0x0318(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _pushDirectionRatioBetweenForwardAndUp;                    // 0x0320(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxDistanceToAllowThePush;                                // 0x0324(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxDistanceToAllowThePushStart;                           // 0x0328(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _pushStartAccelerationChange;                              // 0x032C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _pushStartSpeedThresholdKph;                               // 0x0330(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BRZQ[0x10];                                    // 0x0334(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _maxSpeed;                                                 // 0x0344(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _supportsHandbrake;                                        // 0x0348(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZXDK[0x7];                                     // 0x0349(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               _engineStartingAudioEvent;                                 // 0x0350(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _engineStartedAudioEvent;                                  // 0x0358(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _engineTurnedOffAudioEvent;                                // 0x0360(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _engineFailedToStartAudioEvent;                            // 0x0368(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _engineFailedToStartNoFuelAudioEvent;                      // 0x0370(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _engineFailedToStartNoBatteryAudioEvent;                   // 0x0378(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _engineStalledAudioEvent;                                  // 0x0380(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _noFuelToStartEngineAudioEvent;                            // 0x0388(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _noBatteryToStartEngineAudioEvent;                         // 0x0390(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _hornStartAudioEvent;                                      // 0x0398(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _hornStopAudioEvent;                                       // 0x03A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _noBatteryToActivateHornAudioEvent;                        // 0x03A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _lightsActivatedAudioEvent;                                // 0x03B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _lightsDeactivatedAudioEvent;                              // 0x03B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _noBatteryToActivateLightsAudioEvent;                      // 0x03C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _noBatteryToTurnOnRadioAudioEvent;                         // 0x03C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _gearUpAudioEvent;                                         // 0x03D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _gearDownAudioEvent;                                       // 0x03D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _chassisStartedMovingAudioEvent;                           // 0x03E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _chassisStoppedMovingAudioEvent;                           // 0x03E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VGMP[0x4];                                     // 0x03F0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _rpmScaleForSoundWhenSpeedIsEqualOrGreaterThanZero;        // 0x03F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _rpmScaleForSoundWhenSpeedIsLessThanZero;                  // 0x03F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _soundCullDistance;                                        // 0x03FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTireToSurfaceAudioData*                     _tireToSurfaceAudioData;                                   // 0x0400(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _sendStateInterval;                                        // 0x0408(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _rigidBodyStatePositionErrorTolerance;                     // 0x040C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _rigidBodyStateRotationErrorTolerance;                     // 0x0410(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _distanceErrorToHardSnapToRemoteLocation;                  // 0x0414(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UConZVehicle4WMountSlot*>             _mountSlots;                                               // 0x0418(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	ConZ_EVehicleEngineState                           _engineState;                                              // 0x0428(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6D53[0xF];                                     // 0x0429(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _engineStallingForceMagnitude;                             // 0x0438(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _hornActive;                                               // 0x043C(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _lightsActive;                                             // 0x043D(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Z7M6[0x2];                                     // 0x043E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVehicleMaterialParameterDescription        _headlightsMaterialParameter;                              // 0x0440(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FVehicleMaterialParameterDescription        _reverseLightsMaterialParameter;                           // 0x0450(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FVehicleMaterialParameterDescription        _brakeLightsMaterialParameter;                             // 0x0460(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	float                                              _brakeLightsAlwaysOnIfLightsAreActivated;                  // 0x0470(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E080[0x24];                                    // 0x0474(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _itemContainerClass;                                       // 0x0498(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AVehicleItemContainer*                       _itemContainer;                                            // 0x04A0(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _itemContainerContainedItemsMass;                          // 0x04A8(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_A52V[0x94];                                    // 0x04AC(0x0094) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _canEngineBeStalledByAcceleration;                         // 0x0540(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6TRT[0x3];                                     // 0x0541(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _engineStallingByAccelerationSpeedThreshold;               // 0x0544(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _engineStallingByAccelerationOccurrenceInterval;           // 0x0548(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YTNO[0x4];                                     // 0x054C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               _engineStallingByAccelerationAudioEvent;                   // 0x0550(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<float>                                      _engineStallingByAccelerationAudioEventTriggerTimeRatios;  // 0x0558(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                               _canEngineBeStalledByUpShift;                              // 0x0568(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EX1K[0x3];                                     // 0x0569(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _engineStallingByUpShiftOccurrenceInterval;                // 0x056C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UDJ2[0x8];                                     // 0x0570(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               _engineStallingByUpShiftAudioEvent;                        // 0x0578(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<float>                                      _engineStallingByUpShiftAudioEventTriggerTimeRatios;       // 0x0580(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _engineStallingWhenStartingViaMotionAudioEvent;            // 0x0590(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<float>                                      _engineStallingWhenStartingViaMotionAudioEventTriggerTimeRatios; // 0x0598(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                               _canSkillAffectMaxSpeed;                                   // 0x05A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canSkillAffectSteerRate;                                  // 0x05A9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canSkillAffectThrottleAmount;                             // 0x05AA(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canSkillAffectBrakeAmount;                                // 0x05AB(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3Q2L[0x8];                                     // 0x05AC(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _engineBlockMaxHealth;                                     // 0x05B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WRV9[0x4];                                     // 0x05B8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _maxHealth;                                                // 0x05BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _autoHealthDrainThreshold;                                 // 0x05C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _autoHealthDrain;                                          // 0x05C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRepairableParams                           _repairableParams;                                         // 0x05C8(0x0038) (Edit, NativeAccessSpecifierPrivate)
	TArray<struct FVehicleDamagedEffectsParameters>    _damagedEffects;                                           // 0x0600(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VLEG[0x10];                                    // 0x0610(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       _damageMaterialParameterName;                              // 0x0620(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVehicleExhaustEffects                      _exhaustEffects;                                           // 0x0628(0x0048) (Edit, NativeAccessSpecifierPrivate)
	struct FRepairableParams                           _repairableTireParams;                                     // 0x0670(0x0038) (Edit, NativeAccessSpecifierPrivate)
	float                                              _tireEffectUpdateRange;                                    // 0x06A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _numAudioObjectsForTires;                                  // 0x06AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_U819[0x18];                                    // 0x06B0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FVehicleTireEffectProperties>        _tireEffectProperties;                                     // 0x06C8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BE1Q[0x10];                                    // 0x06D8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _corpseClass;                                              // 0x06E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _activeHitTimeToLive;                                      // 0x06F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_N7IG[0x4];                                     // 0x06F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVehicleImpactEffects                       _impactEffects[0x3];                                       // 0x06F8(0x00A8) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 ImpactDamageVsNormalImpulse;                               // 0x07A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_A11N[0x10];                                    // 0x07A8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _makeNoiseInterval;                                        // 0x07B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxNoiseLoudnessFromEngine;                               // 0x07BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxNoiseLoudnessFromSpeed;                                // 0x07C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_B628[0x4];                                     // 0x07C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _speedThresholdInKphToAffectNavigation;                    // 0x07C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _allowedWaterImmersionDepth;                               // 0x07CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _disallowedWaterImmersionDepth;                            // 0x07D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _waterImmersionDepthToForceEvictMountees;                  // 0x07D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _timeToEvictMounteesWhenImmersedIntoWater;                 // 0x07D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _timeToForceEvictMounteesWhenImmersedIntoWater;            // 0x07DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _timeToAutoDestructWhenImmersedIntoWater;                  // 0x07E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3YVM[0x9];                                     // 0x07E4(0x0009) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _shouldEvictMounteesIfTiltedAboveThreshold;                // 0x07ED(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5AET[0x2];                                     // 0x07EE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _tiltThresholdAngleToEvictMountees;                        // 0x07F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_O5AI[0xC];                                     // 0x07F4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       _healthBarCaption;                                         // 0x0800(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8AZ8[0x8];                                     // 0x0818(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _fuelResourceType;                                         // 0x0820(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxFuelAmount;                                            // 0x0828(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _fuelDrainWhenStartingEngine;                              // 0x082C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRuntimeFloatCurve                          _engineFuelDrainPerRpm;                                    // 0x0830(0x0088) (Edit, NativeAccessSpecifierPrivate)
	float                                              _engineFuelDrainPerRpmScale;                               // 0x08B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_47CP[0x4];                                     // 0x08BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRuntimeFloatCurve                          _engineFuelDrainPerRpmUnderLoad;                           // 0x08C0(0x0088) (Edit, NativeAccessSpecifierPrivate)
	float                                              _engineFuelDrainPerRpmUnderLoadScale;                      // 0x0948(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _fuelDrainWhenInactive;                                    // 0x094C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _fuelFillingBaseDuration;                                  // 0x0950(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _fillingDurationPerFuelAmountFilled;                       // 0x0954(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _experienceAwardedPerFuelAmountFilled;                     // 0x0958(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5ZKY[0x4];                                     // 0x095C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                _prisonerFillingFuelMontage;                               // 0x0960(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _startFillingFuelAudioEvent;                               // 0x0968(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _stopFillingFuelAudioEvent;                                // 0x0970(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _startFillingFuelWithReplenishableResourceAudioEvent;      // 0x0978(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _stopFillingFuelWithReplenishableResourceAudioEvent;       // 0x0980(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _fillFuelWithReplenishableResourceOverlapBoxExtent;        // 0x0988(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _fuelDrainingBaseDuration;                                 // 0x0994(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _drainingDurationPerFuelAmountDrained;                     // 0x0998(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _experienceAwardedPerFuelAmountDrained;                    // 0x099C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _prisonerDrainingFuelMontage;                              // 0x09A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _startDrainingFuelAudioEvent;                              // 0x09A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _stopDrainingFuelAudioEvent;                               // 0x09B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVehicleEngineStallingParameters            _engineStallingParametersWhenOutOfFuel;                    // 0x09B8(0x0058) (Edit, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VXWZ[0x4];                                     // 0x0A10(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _fuelUpdateInterval;                                       // 0x0A14(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_A3KK[0x8];                                     // 0x0A18(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _batteryResourceType;                                      // 0x0A20(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxBatteryAmount;                                         // 0x0A28(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _batteryDrainWhenStartingEngine;                           // 0x0A2C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _batteryDrainWhenHornIsActive;                             // 0x0A30(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _batteryDrainWhenLightsAreActive;                          // 0x0A34(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _batteryDrainWhenRadioIsTurnedOn;                          // 0x0A38(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _batteryDrainWhenInactive;                                 // 0x0A3C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRuntimeFloatCurve                          _batteryDynamoChargePerKph;                                // 0x0A40(0x0088) (Edit, NativeAccessSpecifierPrivate)
	float                                              _batteryDynamoChargePerKphScale;                           // 0x0AC8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_F8LV[0x4];                                     // 0x0ACC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRuntimeFloatCurve                          _batteryAlternatorChargePerRpm;                            // 0x0AD0(0x0088) (Edit, NativeAccessSpecifierPrivate)
	float                                              _batteryAlternatorChargePerRpmScale;                       // 0x0B58(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _batteryPowerReductionThreshold;                           // 0x0B5C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _startEngineDurationPenaltyWhenBatteryReducedInPower;      // 0x0B60(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _batteryChargingBaseDuration;                              // 0x0B64(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _chargingDurationPerBatteryAmountCharged;                  // 0x0B68(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _experienceAwardedPerBatteryAmountCharged;                 // 0x0B6C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _prisonerChargingBatteryMontage;                           // 0x0B70(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _startChargingBatteryAudioEvent;                           // 0x0B78(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _stopChargingBatteryAudioEvent;                            // 0x0B80(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_D02S[0x4];                                     // 0x0B88(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _batteryUpdateInterval;                                    // 0x0B8C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UG6Y[0x20];                                    // 0x0B90(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class URadioComponent*                             _radioComponent;                                           // 0x0BB0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVehicleHitZoneManager*                      _hitZones;                                                 // 0x0BB8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32_t                                           _vehiclePartsStateFlags;                                   // 0x0BC0(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _doorsNum;                                                 // 0x0BC4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _doorWindowsNum;                                           // 0x0BC8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ON6X[0x4];                                     // 0x0BCC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isInteriorExposedByDefault;                               // 0x0BD0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SZGV[0x3];                                     // 0x0BD1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _maxVehicleEnterAngle;                                     // 0x0BD4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4QUZ[0x10];                                    // 0x0BD8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ConZ_EAITeam                                       _aiTeam;                                                   // 0x0BE8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YRLE[0x77];                                    // 0x0BE9(0x0077) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint32_t                                           _repPackedSimulationState;                                 // 0x0C60(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32_t                                           _repHealthFuelBatteryAmount;                               // 0x0C64(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GK8L[0x68];                                    // 0x0C68(0x0068) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZVehicle4W"));
		return ptr;
	}



	void WarnAboutMounteeEvictionIfInWater();
	void Server_StopEngineViaStall();
	void Server_StopEngineViaIgnition();
	void Server_StopEngineViaBeingBroken();
	void Server_StopEngineStalling();
	void Server_StartEngineViaMotion();
	void Server_StartEngineViaIgnition();
	void Server_StartEngineStalling(const struct FVehicleEngineStallingParameters& parameters);
	void Server_SetLightsActive(bool Value);
	void Server_SetHornActive(bool Value);
	void Server_SendState(const struct FRigidBodyState& State, uint32_t packedState);
	void Server_RepairEngineBlock();
	void Server_ApplyImpactDamage(float Damage, const struct FHitResult& HitResult);
	void ReceiveBeginHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool selfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnRep_VehiclePartsStateFlags(uint32_t Previous);
	void OnRep_PackedSimulationState();
	void OnRep_LightsActive(bool OldValue);
	void OnRep_ItemContainerContainedItemsMass(float OldValue);
	void OnRep_HornActive(bool OldValue);
	void OnRep_HealthFuelBatteryAmount();
	void OnRep_EngineState(ConZ_EVehicleEngineState OldValue);
	void NetMulticast_UpdateMassProperties();
	void NetMulticast_StopEngineStalling(bool skipLocallyControlled);
	void NetMulticast_StartEngineStalling(const struct FVehicleEngineStallingParameters& parameters, bool skipLocallyControlled);
	void NetMulticast_PushStart(const struct FVector& Direction);
	float GetWaterImmersionDepthSlow();
	float GetWaterImmersionDepth();
	class AVehicleItemContainer* GetItemContainer();
	class UVehicleHitZoneManager* GetHitZoneManager();
	bool CanBeInteractedWith();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZVehicle4WMountSlot
// 0x0080 (FullSize[0x0130] - InheritedSize[0x00B0])
class UConZVehicle4WMountSlot : public UActorComponent
{
public:
	unsigned char                                      UnknownData_ICJ7[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       _socketName;                                               // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _mountAudioEvent;                                          // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _mountPriority;                                            // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_R1LE[0x4];                                     // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FMountSlotEntryPoint>                _entryPoints;                                              // 0x00D0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _unmountAudioEvent;                                        // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isReachableFromSky;                                       // 0x00E8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EMotionIntensity                              _mountingMotionIntensity;                                  // 0x00E9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EMotionIntensity                              _unmountingMotionIntensity;                                // 0x00EA(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X70Y[0x1];                                     // 0x00EB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     _mounteeCenterOfMassOffset;                                // 0x00EC(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minEffectiveMounteeMass;                                  // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxEffectiveMounteeMass;                                  // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UObject*                                     _mountee;                                                  // 0x0100(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UObject*                                     _reservee;                                                 // 0x0108(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canMounteeBeAttackedByMelee;                              // 0x0110(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_G1DK[0x7];                                     // 0x0111(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UPhysicalMaterial*>                   _interactionZoneMaterials;                                 // 0x0118(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UVehicleWeaponAimingParameters*              _vehicleWeaponAimingParameters;                            // 0x0128(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZVehicle4WMountSlot"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZVehicle4WDriverMountSlot
// 0x0030 (FullSize[0x0160] - InheritedSize[0x0130])
class UConZVehicle4WDriverMountSlot : public UConZVehicle4WMountSlot
{
public:
	class UBlendSpace*                                 _forwardIdleAnimation;                                     // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _forwardSteeringAnimation;                                 // 0x0138(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _forwardSteeringAnimationFP;                               // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace*                                 _reverseIdleAnimation;                                     // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _reverseSteeringAnimation;                                 // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _reverseSteeringAnimationFP;                               // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZVehicle4WDriverMountSlot"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZVehicle4WPassengerMountSlot
// 0x0008 (FullSize[0x0138] - InheritedSize[0x0130])
class UConZVehicle4WPassengerMountSlot : public UConZVehicle4WMountSlot
{
public:
	class UBlendSpace*                                 _idleAnimation;                                            // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZVehicle4WPassengerMountSlot"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZVehicleAnimInstance
// 0x003C (FullSize[0x0A78] - InheritedSize[0x0A3C])
class UConZVehicleAnimInstance : public UDcxVehicleAnimInstance
{
public:
	float                                              EngineRpm;                                                 // 0x0A3C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EngineRpmInterpSpeed;                                      // 0x0A40(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Speed;                                                     // 0x0A44(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpeedKph;                                                  // 0x0A48(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSteeringWheelSteerAngle;                                // 0x0A4C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SteeringWheelSteerAngleInterpSpeed;                        // 0x0A50(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentSteeringWheelSteerAngle;                            // 0x0A54(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                      DoorOpenPercentage;                                        // 0x0A58(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                      DoorWindowOpenPercentage;                                  // 0x0A68(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZVehicleAnimInstance"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZVehicleDriveComponent4W
// 0x0020 (FullSize[0x03F8] - InheritedSize[0x03D8])
class UConZVehicleDriveComponent4W : public UDcxVehicleDriveComponent4W
{
public:
	float                                              _maxArtificialBrakingForce;                                // 0x03D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _speedLimiterMaxSpeed;                                     // 0x03DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _speedLimiterMaxBrakingForce;                              // 0x03E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _speedLimiterInfluenceCoefficient;                         // 0x03E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FConZVehicleFlatTireWheelConfiguration> _flatTireWheelConfigurations;                              // 0x03E8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZVehicleDriveComponent4W"));
		return ptr;
	}



	void SetSpeedLimiterMaxSpeed(float Value);
	void InflateWheelTire(int WheelIndex);
	float GetSpeedLimiterMaxSpeed();
	float GetEngineLoad();
	void DeflateWheelTire(int WheelIndex);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZVehicleSpringArmComponent
// 0x0050 (FullSize[0x02D0] - InheritedSize[0x0280])
class UConZVehicleSpringArmComponent : public USpringArmComponent
{
public:
	float                                              _ownerAccelerationDirectionInterpSpeed;                    // 0x0280(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _maxCameraOffset;                                          // 0x0284(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _cameraOffsetInterpSpeed;                                  // 0x0290(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NV0G[0x34];                                    // 0x029C(0x0034) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZVehicleSpringArmComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZVehicleTire
// 0x0028 (FullSize[0x0108] - InheritedSize[0x00E0])
class UConZVehicleTire : public UDcxVehicleTire
{
public:
	struct FConZVehicleTireParticleData                ParticleTrail;                                             // 0x00E0(0x0014) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FConZVehicleTireParticleData                ParticleWave;                                              // 0x00F4(0x0014) (Edit, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZVehicleTire"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZWaterVolume
// 0x0008 (FullSize[0x0270] - InheritedSize[0x0268])
class AConZWaterVolume : public APhysicsVolume
{
public:
	class AOceanManager*                               Ocean;                                                     // 0x0268(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZWaterVolume"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZWorldBoundsVolume
// 0x0000 (FullSize[0x0258] - InheritedSize[0x0258])
class AConZWorldBoundsVolume : public AVolume
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZWorldBoundsVolume"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ConZWorldSettings
// 0x0128 (FullSize[0x04C8] - InheritedSize[0x03A0])
class AConZWorldSettings : public AWorldSettings
{
public:
	bool                                               SerializeInstances;                                        // 0x03A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_REZX[0x7];                                     // 0x03A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AWeatherController*                          WeatherController;                                         // 0x03A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AWetnessManager*                             WetnessManager;                                            // 0x03B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGameEventManager*                           GameEventManager;                                          // 0x03B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AWorldEventManager*                          WorldEventManager;                                         // 0x03C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuildingManager*                            BuildingManager;                                           // 0x03C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AItemContainerManager*                       ItemContainerManager;                                      // 0x03D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ARadioStation*>                       RadioStations;                                             // 0x03D8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               RadioNoiseStartEvent;                                      // 0x03E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               RadioNoiseStopEvent;                                       // 0x03F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               RadioStopEvent;                                            // 0x03F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               RadioStationChangeNoiseEvent;                              // 0x0400(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FItemSpawningSettings                       ItemSpawningSettings;                                      // 0x0408(0x0058) (Edit, NativeAccessSpecifierPublic)
	class AVolume*                                     IslandBoundsVolume;                                        // 0x0460(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseVirtualizationSystem;                                   // 0x0468(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LB92[0x3];                                     // 0x0469(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FBox2D                                      WorldBounds;                                               // 0x046C(0x0014) (Edit, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayTag                                HeightMapGameplayTag;                                      // 0x0480(0x0008) (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                MapPropertiesGameplayTag;                                  // 0x0488(0x0008) (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X5NR[0x38];                                    // 0x0490(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ConZWorldSettings"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CookingSkill
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UCookingSkill : public UIntelligenceSkill
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CookingSkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CopperDeficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UCopperDeficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CopperDeficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CorpseInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UCorpseInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CorpseInterface"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CraftableItem
// 0x00F8 (FullSize[0x0128] - InheritedSize[0x0030])
class UCraftableItem : public UDataAsset
{
public:
	ConZ_ECraftingItemCategory                         ItemCategory;                                              // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K34V[0x3];                                     // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ItemOrder;                                                 // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCraftingPair>                       CraftedItems;                                              // 0x0038(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	ConZ_EInteractionType                              Interaction;                                               // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E9DF[0x7];                                     // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       InteractionCaption;                                        // 0x0050(0x0018) (Edit, NativeAccessSpecifierPublic)
	TArray<struct FCraftingItem>                       MandatoryItems;                                            // 0x0068(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCraftingItem>                       OptionalItems;                                             // 0x0078(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCraftingItem>                       ToolsNeeded;                                               // 0x0088(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                               AutoCalculation;                                           // 0x0098(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VV1R[0x7];                                     // 0x0099(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      Skill;                                                     // 0x00A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCraftingSkillLevelData                     NoSkillLevelData;                                          // 0x00A8(0x0014) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCraftingSkillLevelData                     BasicLevelData;                                            // 0x00BC(0x0014) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCraftingSkillLevelData                     MediumLevelData;                                           // 0x00D0(0x0014) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCraftingSkillLevelData                     AdvancedLevelData;                                         // 0x00E4(0x0014) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UAnimMontage*                                CustomCraftingMontage;                                     // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StartCraftingAudioEvent;                                   // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopCraftingAudioEvent;                                    // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               OnlyForSupporterPack;                                      // 0x0110(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RR35[0x3];                                     // 0x0111(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MatBaseOutlineOffset;                                      // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MatThinness;                                               // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               MatIsTwoSided;                                             // 0x011C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoCalculateHealth;                                       // 0x011D(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoCalculateWeight;                                       // 0x011E(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoCalculateFoodParameters;                               // 0x011F(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AlcoholContentMultiplier;                                  // 0x0120(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                BulletStackAmount;                                         // 0x0124(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CraftableItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PlaceableCraftableItem
// 0x0098 (FullSize[0x01C0] - InheritedSize[0x0128])
class UPlaceableCraftableItem : public UCraftableItem
{
public:
	float                                              MaxPlacementAngle;                                         // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AdjustRotation;                                            // 0x012C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_15AJ[0x3];                                     // 0x012D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              GroundOffsetWhilePlacing;                                  // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDistanceFromGroundWhilePlacing;                         // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReachabilityVerticalOffset;                                // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IgnoreFloatingCheckWhilePlacing;                           // 0x013C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CJF5[0x3];                                     // 0x013D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     PlacementLocationOffset;                                   // 0x0140(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     BoundsExtensionWhilePlacing;                               // 0x014C(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     BoundsExtensionWhilePlacingMin;                            // 0x0158(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     BoundsExtensionWhilePlacingMax;                            // 0x0164(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     PlacementTracesBoundsExtension;                            // 0x0170(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     FloatingTracesBoundsExtension;                             // 0x017C(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     FloatingTracesCenterOffset;                                // 0x0188(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxHeightAdjustmentWhilePlacing;                           // 0x0194(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinHeightAdjustmentWhilePlacing;                           // 0x0198(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseMeshCollisionForPlacement;                              // 0x019C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanPlaceInEnemyFlagArea;                                   // 0x019D(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CheckBaseBuildingPlacementMask;                            // 0x019E(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EPlacementAlgorithm                           PlacementAlgorithm;                                        // 0x019F(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxMissedPlacementTracesPercent;                           // 0x01A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShowDirectionIndicator;                                    // 0x01A4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SR00[0x3];                                     // 0x01A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     DirectionIndicatorOffset;                                  // 0x01A8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DirectionIndicatorRotation;                                // 0x01B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DirectionIndicatorSize;                                    // 0x01B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9UWG[0x4];                                     // 0x01BC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PlaceableCraftableItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FortificationCraftableItem
// 0x0040 (FullSize[0x0200] - InheritedSize[0x01C0])
class UFortificationCraftableItem : public UPlaceableCraftableItem
{
public:
	class UClass*                                      FortificationClass;                                        // 0x01C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  Icon;                                                      // 0x01C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       Caption;                                                   // 0x01D0(0x0018) (Edit, NativeAccessSpecifierPublic)
	struct FText                                       Description;                                               // 0x01E8(0x0018) (Edit, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FortificationCraftableItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BaseBuildingBlockCraftableItem
// 0x0060 (FullSize[0x0220] - InheritedSize[0x01C0])
class UBaseBuildingBlockCraftableItem : public UPlaceableCraftableItem
{
public:
	class UClass*                                      BaseBlockClass;                                            // 0x01C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  Icon;                                                      // 0x01C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       Caption;                                                   // 0x01D0(0x0018) (Edit, NativeAccessSpecifierPublic)
	struct FText                                       Description;                                               // 0x01E8(0x0018) (Edit, NativeAccessSpecifierPublic)
	struct FVector                                     PlacementMeshOffset;                                       // 0x0200(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     PlacementMeshScale;                                        // 0x020C(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsUpgrade;                                                 // 0x0218(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2S5B[0x7];                                     // 0x0219(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BaseBuildingBlockCraftableItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CraftingAvailableItemWidget
// 0x0028 (FullSize[0x02A0] - InheritedSize[0x0278])
class UCraftingAvailableItemWidget : public UDesignableUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnClicked;                                                 // 0x0278(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	bool                                               _isSelected;                                               // 0x0288(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isOptional;                                               // 0x0289(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EOptionalState                                _optionalState;                                            // 0x028A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HQN4[0x5];                                     // 0x028B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AItem*                                       _item;                                                     // 0x0290(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _clickSound;                                               // 0x0298(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CraftingAvailableItemWidget"));
		return ptr;
	}



	void SetOptionalState(ConZ_EOptionalState State);
	void SetIsSelected(bool isSelected);
	void SetIsOptional(bool isOptional);
	bool IsAvailable();
	void Init(class AItem* Item);
	ConZ_EOptionalState GetOptionalState();
	bool GetIsSelected();
	bool GetIsOptional();
	void ClickedDelegate__DelegateSignature(class UCraftingAvailableItemWidget* Widget, class AItem* Item);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CraftingComponentWidget
// 0x0028 (FullSize[0x02A0] - InheritedSize[0x0278])
class UCraftingComponentWidget : public UDesignableUserWidget
{
public:
	class UItemClassWidget*                            ItemWidget;                                                // 0x0278(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               _isTool;                                                   // 0x0280(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_928T[0x7];                                     // 0x0281(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _itemClass;                                                // 0x0288(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isAvailable;                                              // 0x0290(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZPZL[0xF];                                     // 0x0291(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CraftingComponentWidget"));
		return ptr;
	}



	void SetSatisfiedAndRequiredCount(int Satisfied, int Required);
	void SetRequiredCount(int count);
	void SetOrderNumber(int orderNumber);
	void SetIsTool(bool IsTool);
	void SetIsOptional(bool isOptional);
	void SetIsAvailable(bool IsAvailable);
	bool GetIsAvailable();
	void CreateTooltip();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CraftingDatabase
// 0x00C0 (FullSize[0x00F0] - InheritedSize[0x0030])
class UCraftingDatabase : public UDataAsset
{
public:
	TArray<class UCraftableItem*>                      CraftableItems;                                            // 0x0030(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FString>                             AssetPaths;                                                // 0x0040(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UCraftingItemTag*                            CookableTag;                                               // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCraftingItemTag*                            SmokableTag;                                               // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCraftingItemTag*                            OpenItemTag;                                               // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCraftingItemTag*                            LightFireTag;                                              // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCraftingItemTag*                            ConservedFoodTag;                                          // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UItemGroup*                                  IngredientsGroup;                                          // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FString>                             IngredientsGroupPaths;                                     // 0x0080(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FString>                             IngredientsExcludePaths;                                   // 0x0090(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class UCraftingItemTag*, struct FItemClassesArray> _itemsByTags;                                              // 0x00A0(0x0050) (Edit, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CraftingDatabase"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CraftingInfoWidget
// 0x00F0 (FullSize[0x0368] - InheritedSize[0x0278])
class UCraftingInfoWidget : public UDesignableUserWidget
{
public:
	class UInspectedItemWidget*                        ItemWidget;                                                // 0x0278(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGridPanel*                                  ComponentsGridPanel;                                       // 0x0280(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGridPanel*                                  CraftingGridPanel;                                         // 0x0288(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                                 ComponentsMinimizableWidget;                               // 0x0290(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                                 CraftingMinimizableWidget;                                 // 0x0298(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      _itemClass;                                                // 0x02A0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UT0K[0x50];                                    // 0x02A8(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UPreviousNextSwitchWidget*>           _switchWidgets;                                            // 0x02F8(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UPrisonerInventoryComponent>  _inventoryComponent;                                       // 0x0308(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FCraftingRecipe                             _craftingRecipe;                                           // 0x0310(0x0038) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6EXX[0x20];                                    // 0x0348(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CraftingInfoWidget"));
		return ptr;
	}



	void SwapIngredient(int widgetIndex, int orderIndex);
	void SetCaptionAndDescription(const struct FText& Caption, const struct FText& Description);
	void Init(class AItem* itemCDO);
	void Close();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CraftingItemTag
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UCraftingItemTag : public UBaseItemTag
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CraftingItemTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CraftingObjective
// 0x0018 (FullSize[0x0348] - InheritedSize[0x0330])
class ACraftingObjective : public ARequirementObjective
{
public:
	unsigned char                                      _targetItems[0x10];                                        // 0x0330(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      UnknownData_BU3C[0x8];                                     // 0x0340(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CraftingObjective"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CraftingPanelWidget
// 0x0298 (FullSize[0x0510] - InheritedSize[0x0278])
class UCraftingPanelWidget : public UDesignableUserWidget
{
public:
	struct FScriptMulticastDelegate                    RecipeItemClicked;                                         // 0x0278(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UCraftingInfoWidget*                         _craftingInfo;                                             // 0x0288(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _inventoryBox;                                             // 0x0290(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _vicinityBox;                                              // 0x0298(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _toolsAndWeaponsBox;                                       // 0x02A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _toolsAndWeaponsSubBox1;                                   // 0x02A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _toolsAndWeaponsSubBox2;                                   // 0x02B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _toolsAndWeaponsSubBox3;                                   // 0x02B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _toolsAndWeaponsSubBox4;                                   // 0x02C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _toolsAndWeaponsSubBox5;                                   // 0x02C8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 ToolsAndWeaponsSubContainer1;                              // 0x02D0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 ToolsAndWeaponsSubContainer2;                              // 0x02D8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 ToolsAndWeaponsSubContainer3;                              // 0x02E0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 ToolsAndWeaponsSubContainer4;                              // 0x02E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 ToolsAndWeaponsSubContainer5;                              // 0x02F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _itemsBox;                                                 // 0x02F8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _itemsSubBox1;                                             // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _itemsSubBox2;                                             // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _itemsSubBox3;                                             // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _itemsSubBox4;                                             // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _itemsSubBox5;                                             // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 ItemsSubContainer1;                                        // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 ItemsSubContainer2;                                        // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 ItemsSubContainer3;                                        // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 ItemsSubContainer4;                                        // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 ItemsSubContainer5;                                        // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _foodBox;                                                  // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _foodSubBox1;                                              // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _foodSubBox2;                                              // 0x0360(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _foodSubBox3;                                              // 0x0368(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _foodSubBox4;                                              // 0x0370(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _foodSubBox5;                                              // 0x0378(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 FoodSubContainer1;                                         // 0x0380(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 FoodSubContainer2;                                         // 0x0388(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 FoodSubContainer3;                                         // 0x0390(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 FoodSubContainer4;                                         // 0x0398(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 FoodSubContainer5;                                         // 0x03A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _placeablesBox;                                            // 0x03A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _placeablesSubBox1;                                        // 0x03B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _placeablesSubBox2;                                        // 0x03B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _placeablesSubBox3;                                        // 0x03C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _placeablesSubBox4;                                        // 0x03C8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _placeablesSubBox5;                                        // 0x03D0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 PlaceablesSubContainer1;                                   // 0x03D8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 PlaceablesSubContainer2;                                   // 0x03E0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 PlaceablesSubContainer3;                                   // 0x03E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 PlaceablesSubContainer4;                                   // 0x03F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 PlaceablesSubContainer5;                                   // 0x03F8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _basebuildingBox;                                          // 0x0400(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _basebuildingSubBox1;                                      // 0x0408(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _basebuildingSubBox2;                                      // 0x0410(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _basebuildingSubBox3;                                      // 0x0418(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _basebuildingSubBox4;                                      // 0x0420(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _basebuildingSubBox5;                                      // 0x0428(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 BaseBuildingContainer;                                     // 0x0430(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 BaseBuildingSubContainer1;                                 // 0x0438(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 BaseBuildingSubContainer2;                                 // 0x0440(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 BaseBuildingSubContainer3;                                 // 0x0448(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 BaseBuildingSubContainer4;                                 // 0x0450(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 BaseBuildingSubContainer5;                                 // 0x0458(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScrollBox*                                  _inventoryScrollBox;                                       // 0x0460(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScrollBox*                                  _vicinityScrollBox;                                        // 0x0468(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScrollBox*                                  _toolsAndWeaponsScrollBox;                                 // 0x0470(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScrollBox*                                  _itemsScrollBox;                                           // 0x0478(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScrollBox*                                  _foodScrollBox;                                            // 0x0480(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScrollBox*                                  _placeablesScrollBox;                                      // 0x0488(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScaleBox*                                   _toolsAndWeaponsScaleBox;                                  // 0x0490(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScaleBox*                                   _itemsScaleBox;                                            // 0x0498(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScaleBox*                                   _foodScaleBox;                                             // 0x04A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScaleBox*                                   _placeablesScaleBox;                                       // 0x04A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UCraftingRecipeWidget>        _selectedRecipeWidget;                                     // 0x04B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlacedPlaceableWidget*                      _placedPlaceableWidget;                                    // 0x04B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JWIB[0x50];                                    // 0x04C0(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CraftingPanelWidget"));
		return ptr;
	}



	void UpdateAvailableComponents();
	void ShowPlaceableCraftingConfirmationForCraftingIndex(int Index);
	void RecipeItemClicked__DelegateSignature(class UCraftableItem* CraftableItem);
	void OnRecipeClicked(class UCraftingRecipeWidget* Widget);
	void OnPlaceableCraftingConfirmationConfirmed(int Index);
	void OnAdditionalIngredientSelected(class UCraftingAvailableItemWidget* Widget, class AItem* Item);
	void HandlePrisonerChange(class APrisoner* Prisoner);
	void Craft();
	bool CanCraft();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CraftingRecipeWidget
// 0x0050 (FullSize[0x02C8] - InheritedSize[0x0278])
class UCraftingRecipeWidget : public UDesignableUserWidget
{
public:
	class UItemClassWidget*                            ItemWidget;                                                // 0x0278(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RecipeID;                                                  // 0x0280(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LZ0S[0x4];                                     // 0x0284(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnRecipeSelected;                                          // 0x0288(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	bool                                               _isGrayedOut;                                              // 0x0298(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N44W[0x7];                                     // 0x0299(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UImage*                                      _itemImage;                                                // 0x02A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  _additionalText;                                           // 0x02A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCraftableItem*                              _craftableItem;                                            // 0x02B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1KCD[0x8];                                     // 0x02B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isExaminable;                                             // 0x02C0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_ERecipeAvailabilityState                      _availabilityState;                                        // 0x02C1(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_55QW[0x6];                                     // 0x02C2(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CraftingRecipeWidget"));
		return ptr;
	}



	void SetTooltipFromClass(class UClass* ItemClass);
	void SetTooltipFromCaptionAndDescription(const struct FText& Caption, const struct FText& Description);
	void SetIsSelected(bool isSelected);
	void SetIsGrayedOut(bool isGrayedOut);
	void SetAvailabilityState(ConZ_ERecipeAvailabilityState State);
	void RecipeSelectedDelegate__DelegateSignature(class UCraftingRecipeWidget* Widget);
	ConZ_ERecipeAvailabilityState GetAvailabilityState();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CraftItemAction
// 0x0098 (FullSize[0x0140] - InheritedSize[0x00A8])
class UCraftItemAction : public UInteractionAction
{
public:
	unsigned char                                      UnknownData_L9GA[0x98];                                    // 0x00A8(0x0098) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CraftItemAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CTFBase
// 0x0030 (FullSize[0x0250] - InheritedSize[0x0220])
class ACTFBase : public AActor
{
public:
	class USphereComponent*                            SphereComponent;                                           // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        Mesh;                                                      // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstance*>                   TeamMaterials;                                             // 0x0230(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class ACTFGameEvent*                               _gameEvent;                                                // 0x0240(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _team;                                                     // 0x0248(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _radius;                                                   // 0x024C(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CTFBase"));
		return ptr;
	}



	void SphereOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnRep_Team();
	void OnRep_Radius();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CTFFlag
// 0x00B0 (FullSize[0x02D0] - InheritedSize[0x0220])
class ACTFFlag : public AActor
{
public:
	class USphereComponent*                            SphereComponent;                                           // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      FlagMesh;                                                  // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstance*>                   TeamMaterials;                                             // 0x0230(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FName                                       AttachSocketName;                                          // 0x0240(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACTFGameEvent*                               _gameEvent;                                                // 0x0248(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _team;                                                     // 0x0250(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_F9ZW[0x4];                                     // 0x0254(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class APrisoner*                                   _carrier;                                                  // 0x0258(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_H0V2[0x8];                                     // 0x0260(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _resetProgress;                                            // 0x0268(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OE3V[0x4];                                     // 0x026C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  _baseTransform;                                            // 0x0270(0x0030) (Net, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FTransform                                  _flagTransform;                                            // 0x02A0(0x0030) (Net, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CTFFlag"));
		return ptr;
	}



	void SphereOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnRep_Team();
	void OnRep_FlagTransform();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CTFFlagStand
// 0x0020 (FullSize[0x0240] - InheritedSize[0x0220])
class ACTFFlagStand : public AActor
{
public:
	class UStaticMeshComponent*                        Mesh;                                                      // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPointLightComponent*                        Light;                                                     // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                _lightColor;                                               // 0x0230(0x0010) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CTFFlagStand"));
		return ptr;
	}



	void OnRep_LightColor();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameEventBase
// 0x0358 (FullSize[0x0578] - InheritedSize[0x0220])
class AGameEventBase : public AActor
{
public:
	struct FText                                       EventName;                                                 // 0x0220(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UClass*                                      ParticipantStatsClass;                                     // 0x0238(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      RoundInfoWidgetClass;                                      // 0x0240(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      TeamHeaderWidgetClass;                                     // 0x0248(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      StatWidgetClass;                                           // 0x0250(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      MiniStatWidgetClass;                                       // 0x0258(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      TransportClass;                                            // 0x0260(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               TimesUpAnnouncement;                                       // 0x0268(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               BlueTeamWonRoundAnnouncement;                              // 0x0270(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               RedTeamWonRoundAnnouncement;                               // 0x0278(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               RoundDrawAnnouncement;                                     // 0x0280(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               BlueTeamWonEventAnnouncement;                              // 0x0288(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               RedTeamWonEventAnnouncement;                               // 0x0290(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               EventDrawAnnouncement;                                     // 0x0298(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               Time30sAnnouncement;                                       // 0x02A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               Time15sAnnouncement;                                       // 0x02A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               Time10sCountdownAnnouncement;                              // 0x02B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               TensionMusicStart;                                         // 0x02B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               TensionMusicStop;                                          // 0x02C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EGameEventState                               _state;                                                    // 0x02C8(0x0001) (Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IWW8[0x3];                                     // 0x02C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _activeParticipantCount;                                   // 0x02CC(0x0004) (Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _numberOfTeams;                                            // 0x02D0(0x0004) (Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MHVH[0x4];                                     // 0x02D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<int>                                        _teamMemberCount;                                          // 0x02D8(0x0010) (Edit, Net, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	TArray<int>                                        _teamScores;                                               // 0x02E8(0x0010) (Edit, Net, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	TArray<int>                                        _roundWinningTeam;                                         // 0x02F8(0x0010) (Edit, Net, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	int                                                _round;                                                    // 0x0308(0x0004) (Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _roundTimeLeft;                                            // 0x030C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _cancelTimeLeft;                                           // 0x0310(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GWHE[0x1C];                                    // 0x0314(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AGameEventLocationMarker*                    _marker;                                                   // 0x0330(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGameEventBorder*                            _border;                                                   // 0x0338(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGameEventManager*                           _manager;                                                  // 0x0340(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGameEventParticipantInfo>           _participantInfo;                                          // 0x0348(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	struct FGameEventParameters                        _parameters;                                               // 0x0358(0x0188) (Net, NativeAccessSpecifierPrivate)
	class UGameEventCardWidget*                        _cardWidget;                                               // 0x04E0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameEventScoreboardWidget*                  _scoreboardWidget;                                         // 0x04E8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameEventScoreboardWidget*                  _miniScoreboardWidget;                                     // 0x04F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<int>                                        _rankings;                                                 // 0x04F8(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PN9P[0x40];                                    // 0x0508(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkComponent*                                _lastAnnouncement;                                         // 0x0548(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkComponent*                                _lastCountdownAnnouncement;                                // 0x0550(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7PT2[0x20];                                    // 0x0558(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameEventBase"));
		return ptr;
	}



	void UpdateTeamMemberCount();
	void UpdateRanking(int Index);
	void SetTeamScore(int TeamIndex, float Score);
	void SetParticipantTeam(class APrisoner* Prisoner, int TeamIndex);
	void SetParameters(const struct FGameEventParameters& parameters);
	void SetNumberOfTeams(int Value);
	bool ScheduleEvent();
	void SavePrisonerState(class APrisoner* Prisoner);
	bool SameTeam(class APrisoner* prisonerA, class APrisoner* prisonerB);
	void RestorePrisonerState(class APrisoner* Prisoner);
	void ResetGameEventArea();
	void RegisterParticipant(class APrisoner* Prisoner, int preferredTeam);
	void PresentSpawnScreen(class APrisoner* Prisoner);
	void ParticipantExit(class APrisoner* Prisoner);
	void ParticipantEnter(class APrisoner* Prisoner);
	void OnRep_Rankings();
	void OnRep_ParticipantInfo();
	void Multicast_StopMusic(class UAkAudioEvent* StopAudioEvent);
	void Multicast_StopCountdownAnnouncement();
	void Multicast_ShowScoreboardForEveryone();
	void Multicast_ShowEventNotification(ConZ_EGameEventNotificationType Type, const struct FString& auxString);
	void Multicast_PlayMusic(class UAkAudioEvent* StartAudioEvent);
	void Multicast_PlayCountdownAnnouncement(class UAkAudioEvent* Sound);
	void Multicast_PlayAnnouncementToTeam(int TeamIndex, class UAkAudioEvent* Sound);
	void Multicast_PlayAnnouncementToParticipant(class APrisoner* Prisoner, class UAkAudioEvent* Sound);
	void Multicast_PlayAnnouncementToAllParticipants(class UAkAudioEvent* Sound);
	void Multicast_HideScoreboardForEveryone();
	void KickParticipant(class APrisoner* Prisoner);
	bool IsTeamFull(int TeamIndex);
	bool IsParticipating(class APrisoner* Prisoner);
	void InitEvent(class AGameEventLocationMarker* marker, class AGameEventManager* manager);
	TArray<int> GetWinningTeamsPerRound();
	float GetTeamScore(int TeamIndex);
	int GetTeamMemberCount(int TeamIndex);
	float GetStatusTime();
	struct FRotator GetSpawnRotationForLocation(const struct FVector& Location);
	class UGameEventScoreboardWidget* GetScoreboardWidget();
	float GetRoundTimeLeft();
	void GetPossibleLoadout(class APrisoner* Prisoner, TArray<class UItemSelection*>* primaryWeapons, TArray<class UItemSelection*>* secondaryWeapons, TArray<class UItemSelection*>* tertiaryWeapons, TArray<class UItemSelection*>* outfits, TArray<class UItemSelection*>* support, TArray<class UItemSelection*>* Gear);
	int GetParticipantTeam(class APrisoner* Prisoner);
	struct FVector GetParticipantJoinLocation(class APrisoner* Prisoner);
	TArray<struct FGameEventParticipantInfo> GetParticipantInfo();
	int GetParticipantAtRank(int Rank);
	struct FGameEventParameters GetParameters();
	int GetNumberOfTeams();
	int GetNumberOfParticipants();
	int GetNumberOfActiveParticipants();
	class UGameEventScoreboardWidget* GetMiniScoreboardWidget();
	float GetMaxDurationLeft();
	class AGameEventLocationMarker* GetMarker();
	ConZ_EGameEventState GetEventState();
	struct FDbIntegerId GetDatabaseEventId();
	struct FDbIntegerId GetCurrentRoundDatabaseId();
	int GetCurrentRound();
	class UGameEventCardWidget* GetCardWidget();
	float GetCancelTimeLeft();
	class AGameEventBorder* GetBorder();
	void ForceParticipantStatsRep(int Index);
	int FindParticipantIndex(class APrisoner* Prisoner);
	void EquipParticipantLoadout(class APrisoner* Prisoner);
	int DeclareWinningTeam();
	void ConvertScoreToFame(class APrisoner* Prisoner);
	void ClearTeamScores();
	struct FVector ChooseSpawnLocation(class APrisoner* Prisoner);
	void CheckParticipatingPrisoners();
	bool CanStart();
	bool CanSchedule();
	bool CanJoin(class APrisoner* Prisoner, int preferredTeam);
	void CancelEvent(bool force);
	void CallInParticipant(class APrisoner* Prisoner);
	void AwardParticipant(int Index, const struct FGameEventRewardPoints& reward);
	int AssignParticipantTeam(class APrisoner* Prisoner);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameEventParticipantStats
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
class UGameEventParticipantStats : public UObject
{
public:
	float                                              Score;                                                     // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                EnemyKills;                                                // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TeamKills;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Deaths;                                                    // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Suicides;                                                  // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Assists;                                                   // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Headshots;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_691P[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameEventParticipantStats"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CTFParticipantStats
// 0x0010 (FullSize[0x0058] - InheritedSize[0x0048])
class UCTFParticipantStats : public UGameEventParticipantStats
{
public:
	int                                                Pickups;                                                   // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Captures;                                                  // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Returns;                                                   // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FMZE[0x4];                                     // 0x0054(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CTFParticipantStats"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CTFGameEvent
// 0x0128 (FullSize[0x06A0] - InheritedSize[0x0578])
class ACTFGameEvent : public AGameEventBase
{
public:
	class UClass*                                      FlagClass;                                                 // 0x0578(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CaptureBaseClass;                                          // 0x0580(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      FlagStandClass;                                            // 0x0588(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  FlagIconTexture;                                           // 0x0590(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  FlagAccentTexture;                                         // 0x0598(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  BaseIconTexture;                                           // 0x05A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  BaseAccentTexture;                                         // 0x05A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  EmptyBaseIconTexture;                                      // 0x05B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  EmptyBaseAccentTexture;                                    // 0x05B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                TeamColorA;                                                // 0x05C0(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                TeamColorB;                                                // 0x05D0(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               BlueTeamPickedUpFlagAnnouncement;                          // 0x05E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               BlueTeamCapturedFlagAnnouncement;                          // 0x05E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               BlueTeamFlagDroppedAnnouncement;                           // 0x05F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               BlueTeamFlagReturnedAnnouncement;                          // 0x05F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               RedTeamPickedUpFlagAnnouncement;                           // 0x0600(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               RedTeamCapturedFlagAnnouncement;                           // 0x0608(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               RedTeamFlagDroppedAnnouncement;                            // 0x0610(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               RedTeamFlagReturnedAnnouncement;                           // 0x0618(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCTFParameters                              _CTFParameters;                                            // 0x0620(0x0030) (Net, NoDestructor, NativeAccessSpecifierPrivate)
	class ACTFFlag*                                    _flagA;                                                    // 0x0650(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACTFFlag*                                    _flagB;                                                    // 0x0658(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACTFBase*                                    _baseA;                                                    // 0x0660(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACTFBase*                                    _baseB;                                                    // 0x0668(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4C7O[0x30];                                    // 0x0670(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CTFGameEvent"));
		return ptr;
	}



	void SetCTFParameters(const struct FCTFParameters& Params);
	void OnParticipantDied(class APrisoner* victim, const struct FDamageEvent& DamageEvent, class AController* eventInstigator, class AActor* causer);
	class ACTFFlag* GetFlagB();
	class ACTFFlag* GetFlagA();
	struct FCTFParameters GetCTFParameters();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameEventLocationMarker
// 0x01F8 (FullSize[0x0418] - InheritedSize[0x0220])
class AGameEventLocationMarker : public AActor
{
public:
	struct FText                                       LocationName;                                              // 0x0220(0x0018) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UTexture2D*                                  LocationImage;                                             // 0x0238(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  LocationImageGrayscale;                                    // 0x0240(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               EligibleForRandomPick;                                     // 0x0248(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TJUE[0x7];                                     // 0x0249(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      GameEventClass;                                            // 0x0250(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameEventParameters                        GameEventParameters;                                       // 0x0258(0x0188) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UClass*                                      BorderClass;                                               // 0x03E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     AreaCenterOffset;                                          // 0x03E8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Radius;                                                    // 0x03F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSpawnArea>                          SpawnAreas;                                                // 0x03F8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class USphereComponent*                            Sphere;                                                    // 0x0408(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBillboardComponent*                         Sprite;                                                    // 0x0410(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameEventLocationMarker"));
		return ptr;
	}



	struct FVector GetAreaCenter();
	class AGameEventBase* CreateGameEvent();
	class AGameEventBorder* CreateBorder();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CTFLocationMarker
// 0x00C8 (FullSize[0x04E0] - InheritedSize[0x0418])
class ACTFLocationMarker : public AGameEventLocationMarker
{
public:
	struct FCTFParameters                              CTFParameters;                                             // 0x0418(0x0030) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     CaptureOffsetA;                                            // 0x0448(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     CaptureOffsetB;                                            // 0x0454(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CaptureRadiusA;                                            // 0x0460(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CaptureRadiusB;                                            // 0x0464(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C3BV[0x8];                                     // 0x0468(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  FlagOffsetA;                                               // 0x0470(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                                  FlagOffsetB;                                               // 0x04A0(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        FlagAPreviewMesh;                                          // 0x04D0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        FlagBPreviewMesh;                                          // 0x04D8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CTFLocationMarker"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CustomMapBorder
// 0x0068 (FullSize[0x0288] - InheritedSize[0x0220])
class ACustomMapBorder : public AActor
{
public:
	class UStaticMeshComponent*                        Mesh;                                                      // 0x0220(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        TournamentMesh;                                            // 0x0228(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    Material;                                                  // 0x0230(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   _minCustomMapSize;                                         // 0x0238(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isInTournamentMode;                                       // 0x0240(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JYWE[0x3];                                     // 0x0241(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _tournamentModeCompletionPercentage;                       // 0x0244(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _nearingCompletionPercentage;                              // 0x0248(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_G9F6[0x8];                                     // 0x024C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector2D                                   _minTournamentMapSize;                                     // 0x0254(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FBox2D                                      _tournamentFinalBorderDimensions;                          // 0x025C(0x0014) (Net, ZeroConstructor, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                               _active;                                                   // 0x0270(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CIMX[0x3];                                     // 0x0271(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FBox2D                                      _customMapDimensions;                                      // 0x0274(0x0014) (Net, ZeroConstructor, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CustomMapBorder"));
		return ptr;
	}



	void OnRep_TournamentCompletionPercentage();
	void OnRep_IsInTournamentMode();
	void OnRep_CustomMapDimensions();
	void OnRep_Active();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CutObjectAction
// 0x0028 (FullSize[0x00D0] - InheritedSize[0x00A8])
class UCutObjectAction : public UInteractionAction
{
public:
	unsigned char                                      UnknownData_1AKY[0x28];                                    // 0x00A8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CutObjectAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CuttingObjective
// 0x0030 (FullSize[0x0360] - InheritedSize[0x0330])
class ACuttingObjective : public ARequirementObjective
{
public:
	unsigned char                                      _targetMeshes[0x10];                                       // 0x0330(0x0010) UNKNOWN PROPERTY: ArrayProperty
	bool                                               _specificItem;                                             // 0x0340(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X02R[0x7];                                     // 0x0341(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _itemToFound;                                              // 0x0348(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _itemAmount;                                               // 0x0350(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LQ99[0xC];                                     // 0x0354(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CuttingObjective"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CyclosporiasisPoisoning
// 0x0008 (FullSize[0x01B8] - InheritedSize[0x01B0])
class UCyclosporiasisPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData_PQPX[0x8];                                     // 0x01B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CyclosporiasisPoisoning"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CystitisDisease
// 0x0028 (FullSize[0x01D8] - InheritedSize[0x01B0])
class UCystitisDisease : public UDisease
{
public:
	unsigned char                                      UnknownData_UAW1[0x28];                                    // 0x01B0(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CystitisDisease"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DamageDirectionIndicator
// 0x0048 (FullSize[0x0070] - InheritedSize[0x0028])
class UDamageDirectionIndicator : public UObject
{
public:
	bool                                               visible;                                                   // 0x0028(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NHQ5[0x7];                                     // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture*                                    Texture;                                                   // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Radius;                                                    // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OpacityMultiplier;                                         // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultDelayDuration;                                      // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultSustainDuration;                                    // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultReleaseDuration;                                    // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E2NT[0x24];                                    // 0x004C(0x0024) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DamageDirectionIndicator"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TrapItem
// 0x0140 (FullSize[0x0898] - InheritedSize[0x0758])
class ATrapItem : public AItem
{
public:
	unsigned char                                      UnknownData_FICU[0x8];                                     // 0x0758(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AutoDestroyTimeWhenArmed;                                  // 0x0760(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DestroyAfterTriggered;                                     // 0x0764(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U700[0x3];                                     // 0x0765(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DestroyDelay;                                              // 0x0768(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanEverBeRefueled;                                         // 0x076C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7J8J[0x3];                                     // 0x076D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTrapRefuelItemTag*                          RefuelItemTag;                                             // 0x0770(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     TriggerForwardVector;                                      // 0x0778(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollDuration;                                           // 0x0784(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanBeBurried;                                              // 0x0788(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               MustBeArmed;                                               // 0x0789(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IgnoreRadialDamage;                                        // 0x078A(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldApplyPhysicalDamage;                                 // 0x078B(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox                                        PhysicalDamageBoundsBox;                                   // 0x078C(0x001C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              ActorDestructionDelay;                                     // 0x07A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HasFixedTrigger;                                           // 0x07AC(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FIMQ[0x3];                                     // 0x07AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinDamageForTrigger;                                       // 0x07B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HH64[0xC];                                     // 0x07B4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  TriggerVisualTransform;                                    // 0x07C0(0x0030) (Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              MaxTriggerAngle;                                           // 0x07F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanEverShowTrigger;                                        // 0x07F4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QT24[0x1];                                     // 0x07F5(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isDestroyed;                                              // 0x07F6(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TN8C[0x1];                                     // 0x07F7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _minigameClass;                                            // 0x07F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      _minigameToolTag;                                          // 0x0800(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S9XQ[0x28];                                    // 0x0808(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isBuried;                                                 // 0x0830(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isArmed;                                                  // 0x0831(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _wasTriggered;                                             // 0x0832(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canBeTriggered;                                           // 0x0833(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EYLB[0x14];                                    // 0x0834(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _ownerlessDecayTime;                                       // 0x0848(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FOKI[0x4];                                     // 0x084C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _burriedDecayTime;                                         // 0x0850(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8KLV[0x4];                                     // 0x0854(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _numRemainingDefuseAttempts;                               // 0x0858(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_ETrapTriggerType                              _currentTrigger;                                           // 0x085C(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QI7M[0x3];                                     // 0x085D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDbIntegerId                                _lastTriggerOwner;                                         // 0x0860(0x0008) (Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _quality;                                                  // 0x0868(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_76HT[0x4];                                     // 0x086C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        _burriedMesh;                                              // 0x0870(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*                    _burriedMeshMaterial;                                      // 0x0878(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialBillboardComponent*                 _spriteMarkerBillboard;                                    // 0x0880(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _moundStartFadeDistance;                                   // 0x0888(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _moundEndFadeDistance;                                     // 0x088C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _applyBuryMaterial;                                        // 0x0890(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_K6PE[0x3];                                     // 0x0891(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _numberOfDefuseAttempts;                                   // 0x0894(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TrapItem"));
		return ptr;
	}



	void OnTriggerEvent(const struct FTriggeredEventData& eventData);
	void OnTrapDestroyTimer();
	void OnRep_WasTriggered();
	void OnRep_LastTriggerOwner();
	void OnRep_IsDestroyed();
	void OnRep_IsBuried();
	void OnRep_IsArmed();
	void OnRep_CurrentTrigger();
	void OnLocalPrisonerSpawned(class APrisoner* Prisoner);
	void OnActorDestroyTimer();
	void NetMulticast_TriggerTrap(const struct FTrapTriggerParams& Params);
	void Multicast_SetOnlyManualTrigger(bool onlyManualTrigger);
	bool IsBuried();
	bool IsArmed();
	void BP_OnTriggered();
	void BP_OnRefueled();
	void BP_OnDisarmed();
	void BP_OnArmed();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DamagingTrapItem
// 0x0018 (FullSize[0x08B0] - InheritedSize[0x0898])
class ADamagingTrapItem : public ATrapItem
{
public:
	unsigned char                                      UnknownData_HDCL[0x4];                                     // 0x0898(0x0004) Fix Super Size
	float                                              _damagePerSecond;                                          // 0x089C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _triggerSound;                                             // 0x08A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5EXU[0x8];                                     // 0x08A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DamagingTrapItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DataSingleton
// 0x0970 (FullSize[0x0998] - InheritedSize[0x0028])
class UDataSingleton : public UObject
{
public:
	TArray<struct FProjectileImpulseMultiplier>        ImpulseMultipliers;                                        // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FDamageMultipliers>                  DamageMultipliers;                                         // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FCanvasIcon                                 CrosshairIconUp;                                           // 0x0048(0x0018) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCanvasIcon                                 CrosshairIconDown;                                         // 0x0060(0x0018) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCanvasIcon                                 CrosshairIconLeft;                                         // 0x0078(0x0018) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCanvasIcon                                 CrosshairIconRight;                                        // 0x0090(0x0018) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCanvasIcon                                 CrosshairIconCenter;                                       // 0x00A8(0x0018) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCanvasIcon                                 CrosshairBlockedIcon;                                      // 0x00C0(0x0018) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCanvasIcon                                 BowSpreadCircle;                                           // 0x00D8(0x0018) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UTexture2D*                                  SingleFireIcon;                                            // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  AutoFireIcon;                                              // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  BurstFireIcon;                                             // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WeaponSpreadBase;                                          // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWeaponSpreadData                           WeaponSpreadData[0x9];                                     // 0x010C(0x0240) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                              BowArrowDeviationDegreesAngleByStep;                       // 0x034C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWeaponViewKickData                         WeaponViewKickData[0x9];                                   // 0x0350(0x00D8) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                              WeaponAimingAutoCorrectAngle;                              // 0x0428(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OT2Y[0x4];                                     // 0x042C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FWeaponMalfunctionProbabilityCurves         WeaponMalfunctionProbabilityCurves;                        // 0x0430(0x03B8) (Edit, NativeAccessSpecifierPublic)
	float                                              UpperBoundStaminaAmountToDrain;                            // 0x07E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LowerBoundWeaponWeightForStaminaDrain;                     // 0x07EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UpperBoundWeaponWeightForStaminaDrain;                     // 0x07F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WeaponFOVWhileScoping;                                     // 0x07F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 DownTheSightsModeLerpCurve;                                // 0x07F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialParameterCollection*                WeaponFOVParameterCollection;                              // 0x0800(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCanvasIcon                                 InteractIcon;                                              // 0x0808(0x0018) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCanvasIcon                                 BondageIcon;                                               // 0x0820(0x0018) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UInputDataAsset*                             DefaultInputData;                                          // 0x0838(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDerivedWidgetsData*                         Widgets;                                                   // 0x0840(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          PlaceablePrimaryMatValid;                                  // 0x0848(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          PlaceablePrimaryMatInvalid;                                // 0x0850(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          PlaceablePrimaryMatFriendlyFlag;                           // 0x0858(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          PlaceableOutlineMat;                                       // 0x0860(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          PlaceableDepthMat;                                         // 0x0868(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          PlaceableMaterialRadiusSphere;                             // 0x0870(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          WidgetMaterial;                                            // 0x0878(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBaseItemTag*                                DivingMaskItemTag;                                         // 0x0880(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBaseItemTag*                                ToolBoxItemTag;                                            // 0x0888(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBaseItemTag*                                MushroomItemTag;                                           // 0x0890(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBaseItemTag*                                AlcoholItemTag;                                            // 0x0898(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBaseItemTag*                                SoapItemTag;                                               // 0x08A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      AnimalSkinItemClass;                                       // 0x08A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTrapData*                                   TrapData;                                                  // 0x08B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DogTagItemClass;                                           // 0x08B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_ECollisionChannel>              ItemObstructionCollisionChannel;                           // 0x08C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldTraceComplexCollisionForItemObstruction;             // 0x08C1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JHLU[0x6];                                     // 0x08C2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      AssetsHiddenFromAdminCommands[0x50];                       // 0x08C2(0x0050) UNKNOWN PROPERTY: SetProperty
	class UMissionDataGroup*                           MissonDataGroup;                                           // 0x0918(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDialogueData*                               DialogueData;                                              // 0x0920(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNetworkDataIdAsset*                         NetworkDataIdAsset;                                        // 0x0928(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWashClothesData*                            WashClothesData;                                           // 0x0930(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBuryData*                                   BuryData;                                                  // 0x0938(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEmblemData*                                 SquadEmblemData;                                           // 0x0940(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundClass*                                 VoiceSoundClass;                                           // 0x0948(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          ItemTetrisMaterial;                                        // 0x0950(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicalSurfacesEffectsData*                PhysicalSurfaceEffectsData;                                // 0x0958(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  ChestLockedIcon;                                           // 0x0960(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  ChestUnlockedIcon;                                         // 0x0968(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ChestLockingSound;                                         // 0x0970(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      UIData;                                                    // 0x0978(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              _noiseLevelValues[0x6];                                    // 0x0980(0x0018) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DataSingleton"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DbConnection
// 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
class UDbConnection : public UObject
{
public:
	unsigned char                                      UnknownData_QYBL[0x28];                                    // 0x0028(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DbConnection"));
		return ptr;
	}



	bool Open(ConZ_EDbConnectionOpenMode Mode);
	bool IsOpen();
	ConZ_EDbConnectionOpenMode GetOpenMode();
	bool Close();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DbStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UDbStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DbStatics"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DeadlyNightshadePoisoning
// 0x0010 (FullSize[0x01C0] - InheritedSize[0x01B0])
class UDeadlyNightshadePoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData_1NPO[0x10];                                    // 0x01B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DeadlyNightshadePoisoning"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DeathmatchParticipantStats
// 0x0010 (FullSize[0x0058] - InheritedSize[0x0048])
class UDeathmatchParticipantStats : public UGameEventParticipantStats
{
public:
	float                                              LongestHeadshot;                                           // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MeleeKills;                                                // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LongestLife;                                               // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FUGW[0x4];                                     // 0x0054(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DeathmatchParticipantStats"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DeathmatchGameEvent
// 0x0020 (FullSize[0x0598] - InheritedSize[0x0578])
class ADeathmatchGameEvent : public AGameEventBase
{
public:
	struct FDeathmatchParameters                       _deathmatchParameters;                                     // 0x0578(0x0014) (Net, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8IBJ[0xC];                                     // 0x058C(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DeathmatchGameEvent"));
		return ptr;
	}



	void SetDeathmatchParameters(const struct FDeathmatchParameters& Params);
	void RestrictGameEventArea();
	struct FDeathmatchParameters GetDeathmatchParameters();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DeathmatchLocationMarker
// 0x0028 (FullSize[0x0440] - InheritedSize[0x0418])
class ADeathmatchLocationMarker : public AGameEventLocationMarker
{
public:
	struct FDeathmatchParameters                       DeathmatchParameters;                                      // 0x0418(0x0014) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     FocusOffset;                                               // 0x042C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimalRadius;                                             // 0x0438(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LDEF[0x4];                                     // 0x043C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DeathmatchLocationMarker"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Decayable
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UDecayable : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Decayable"));
		return ptr;
	}



	float GetDamageOverTimeUpdateFrequency();
	void ApplyDamageOverTime(float DeltaTime);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DedicatedServerRequest
// 0x00C0 (FullSize[0x00E8] - InheritedSize[0x0028])
class UDedicatedServerRequest : public UObject
{
public:
	unsigned char                                      UnknownData_JEIO[0xC0];                                    // 0x0028(0x00C0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DedicatedServerRequest"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DedicatedServerResponse
// 0x00A8 (FullSize[0x00D0] - InheritedSize[0x0028])
class UDedicatedServerResponse : public UObject
{
public:
	unsigned char                                      UnknownData_XESX[0x30];                                    // 0x0028(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDbConnection*                               _dbConnection;                                             // 0x0058(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5315[0x70];                                    // 0x0060(0x0070) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DedicatedServerResponse"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Deer2
// 0x0054 (FullSize[0x0AA0] - InheritedSize[0x0A4C])
class ADeer2 : public AComplexAnimal2
{
public:
	float                                              HartScaleVariance;                                         // 0x0A4C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HindBaseScale;                                             // 0x0A50(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HindScaleVariance;                                         // 0x0A54(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bMale;                                                     // 0x0A58(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HU33[0x7];                                     // 0x0A59(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMesh*                               SkeletalMeshes[0x2];                                       // 0x0A60(0x0010) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 AntlerMeshes[0x4];                                         // 0x0A70(0x0020) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        Antlers;                                                   // 0x0A90(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           _hartHind;                                                 // 0x0A98(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MFI2[0x4];                                     // 0x0A9C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Deer2"));
		return ptr;
	}



	void OnRep_HartHind();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DefusingCuttingToolItemTag
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UDefusingCuttingToolItemTag : public UBaseItemTag
{
public:
	class USkeletalMesh*                               SkeletalMesh;                                              // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                Montage;                                                   // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DefusingCuttingToolItemTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DehydrationSickness
// 0x0008 (FullSize[0x01B8] - InheritedSize[0x01B0])
class UDehydrationSickness : public USickness
{
public:
	unsigned char                                      UnknownData_E4CQ[0x8];                                     // 0x01B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DehydrationSickness"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DexteritySkill
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UDexteritySkill : public USkill
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DexteritySkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DemolitionSkill
// 0x00E0 (FullSize[0x0180] - InheritedSize[0x00A0])
class UDemolitionSkill : public UDexteritySkill
{
public:
	struct FDemolitionSkillParametersPerSkillLevel     NoSkillParameters;                                         // 0x00A0(0x002C) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDemolitionSkillParametersPerSkillLevel     BasicSkillParameters;                                      // 0x00CC(0x002C) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDemolitionSkillParametersPerSkillLevel     MediumSkillParameters;                                     // 0x00F8(0x002C) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDemolitionSkillParametersPerSkillLevel     AdvancedSkillParameters;                                   // 0x0124(0x002C) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDemolitionSkillParametersPerSkillLevel     AboveAdvancedSkillParameters;                              // 0x0150(0x002C) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_STAE[0x4];                                     // 0x017C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DemolitionSkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DerivedWidgetsData
// 0x0280 (FullSize[0x02B0] - InheritedSize[0x0030])
class UDerivedWidgetsData : public UDataAsset
{
public:
	class UClass*                                      CraftingPanel;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CraftingInfo;                                              // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CraftingSectionContainer;                                  // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CraftableItem;                                             // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CraftingIngredient;                                        // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CraftingPossibleItem;                                      // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      StripedFiller;                                             // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      AvailableItem;                                             // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      WorldCraftingMarker;                                       // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      LoadingScreen;                                             // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      InteractionWidgetClass;                                    // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      InteractionGroupWidgetClass;                               // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      InteractionContainerWidgetClass;                           // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ItemWidgetClass;                                           // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      InventoryWidgetClass;                                      // 0x00A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      InventorySlotWidgetClass;                                  // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      WarningWidgetClass;                                        // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      HudWidgetClass;                                            // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      LoadingWidgetClass;                                        // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      LoadingIconWidgetClass;                                    // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      SpawnScreenWidgetClass;                                    // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      WaypointScreenWidgetClass;                                 // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      HoverPanelWidgetClass;                                     // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ActionProgressWidgetClass;                                 // 0x00E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ItemSelectionWidgetClass;                                  // 0x00F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ExamineWidgetClass;                                        // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      HandsInventoryWidgetClass;                                 // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      GenericItemInventoryWidgetClass;                           // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      InventoryContainersWidgetClass;                            // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CombinedInventoryWidgetClass;                              // 0x0118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      TeamInvitationWidgetClass;                                 // 0x0120(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CraftingInfoWidgetClass;                                   // 0x0128(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CraftingComponentWidgetClass;                              // 0x0130(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CraftingRecipeWidgetClass;                                 // 0x0138(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      EmptySlotWidgetClass;                                      // 0x0140(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      TeamInfoWidgetClass;                                       // 0x0148(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      TeammateNameWidgetClass;                                   // 0x0150(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      PreviousNextSwitchWidgetClass;                             // 0x0158(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      VicinityItemContainerWidgetClass;                          // 0x0160(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      QuickAccessItemWidget;                                     // 0x0168(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ChangeTextWidgetClass;                                     // 0x0170(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ItemStatusWidgetClass;                                     // 0x0178(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      HealthWidgetClass;                                         // 0x0180(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      GameEventPanelWidgetClass;                                 // 0x0188(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      GameEventCardWidgetClass;                                  // 0x0190(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      GameEventScoreboardWidgetClass;                            // 0x0198(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      GameEventMiniScoreboardWidgetClass;                        // 0x01A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      TournamentScoreboardWidgetClass;                           // 0x01A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CircularMenuWidgetClass;                                   // 0x01B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CircularMenuSegmentWidgetClass;                            // 0x01B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      LockpickingWidgetClass;                                    // 0x01C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DoorUpgradeWidgetClass;                                    // 0x01C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      UpgradeWidgetClass;                                        // 0x01D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      InventoryContainerWidget2Test;                             // 0x01D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      InventoryItemWidget2Test;                                  // 0x01E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ItemInventoryWidget2;                                      // 0x01E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      InventoryPanelSideLayerWidget;                             // 0x01F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<ConZ_EWidgetType, class UClass*>              Widgets;                                                   // 0x01F8(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, NativeAccessSpecifierPublic)
	class UClass*                                      ObjectivesWidgetClass;                                     // 0x0248(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      MissionPromptClass;                                        // 0x0250(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      MissionResultClass;                                        // 0x0258(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      MissionItemClass;                                          // 0x0260(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ObjectiveItemClass;                                        // 0x0268(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      MissionRewardClass;                                        // 0x0270(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      RewardItemWidgetClass;                                     // 0x0278(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      StatisticsListRow;                                         // 0x0280(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTooltipPanelData>                   ItemTooltipPanels;                                         // 0x0288(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UClass*                                      MalfunctionsContainerClass;                                // 0x0298(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      WeaponAmmoCountContainerClass;                             // 0x02A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      PlaceableElementWidgetClass;                               // 0x02A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DerivedWidgetsData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DetectableTag
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDetectableTag : public UBaseItemTag
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DetectableTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DialogueContainerWidget
// 0x0020 (FullSize[0x0280] - InheritedSize[0x0260])
class UDialogueContainerWidget : public UUserWidget
{
public:
	class USubtitleWidget*                             _subtitleWidget;                                           // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                                    _avatarImageOverlay;                                       // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _actionText;                                               // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0NJ7[0x8];                                     // 0x0278(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DialogueContainerWidget"));
		return ptr;
	}



	void StartAvatarAnimation(ConZ_EDialogAnimationState AnimationState);
	class UWidgetAnimation* GetShowAvatarAnimation();
	class UWidgetAnimation* GetHideAvatarAnimation();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DialogueData
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UDialogueData : public UDataAsset
{
public:
	TMap<ConZ_EDialogEvent, struct FDialogInfoContainer> Dialogs;                                                   // 0x0030(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DialogueData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DiarrheaSickness
// 0x0018 (FullSize[0x01C8] - InheritedSize[0x01B0])
class UDiarrheaSickness : public USickness
{
public:
	unsigned char                                      UnknownData_VB4N[0x18];                                    // 0x01B0(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DiarrheaSickness"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DigestionItem
// 0x0168 (FullSize[0x0190] - InheritedSize[0x0028])
class UDigestionItem : public UObject
{
public:
	unsigned char                                      UnknownData_5LNW[0x168];                                   // 0x0028(0x0168) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DigestionItem"));
		return ptr;
	}



	float GetWeight();
	float GetVolume();
	bool GetShouldProcess();
	float GetRemainingWeight();
	float GetRemainingWater();
	float GetRemainingVolume();
	int GetID();
	struct FString GetCaption();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DistantLevel
// 0x0070 (FullSize[0x0290] - InheritedSize[0x0220])
class ADistantLevel : public AActor
{
public:
	class UStaticMeshComponent*                        _previewMeshComponent;                                     // 0x0220(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     _streamingLevelName;                                       // 0x0228(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EDistantMeshStreamingBehavior                 _meshStreamingBehavior;                                    // 0x0238(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6PK7[0x3];                                     // 0x0239(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FBoxSphereBounds                            _meshBounds;                                               // 0x023C(0x001C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      _collisionMesh[0x28];                                      // 0x0258(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      _meshLODs[0x10];                                           // 0x0280(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DistantLevel"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DistantLevelManager
// 0x00A0 (FullSize[0x02C0] - InheritedSize[0x0220])
class ADistantLevelManager : public AActor
{
public:
	class USceneComponent*                             _rootComponent;                                            // 0x0220(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minCameraLocationChangeToUpdateDistantLevels;             // 0x0228(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _distantMeshPreloadDistance;                               // 0x022C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _maxNumSimultaneouslyStreamedDistantMeshLODs;              // 0x0230(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _distantCollisionMeshUnloadDistance;                       // 0x0234(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _maxNumSimultaneouslyStreamedDistantCollisionMeshes;       // 0x0238(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9NIK[0x4];                                     // 0x023C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FDistantLevelDescription>            _distantLevelDescriptions;                                 // 0x0240(0x0010) (Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ELAF[0x70];                                    // 0x0250(0x0070) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DistantLevelManager"));
		return ptr;
	}



	void HandleStreamingLevelsVisibilityChanged();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DogTagItem
// 0x0010 (FullSize[0x0768] - InheritedSize[0x0758])
class ADogTagItem : public AItem
{
public:
	struct FString                                     _userProfileName;                                          // 0x0758(0x0010) (Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DogTagItem"));
		return ptr;
	}



	void OnRep_UserProfileName();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PriceCategory
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPriceCategory : public UDataAsset
{
public:
	float                                              Price;                                                     // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I21P[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PriceCategory"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Door
// 0x01C8 (FullSize[0x03E8] - InheritedSize[0x0220])
class ADoor : public AActor
{
public:
	unsigned char                                      UnknownData_PKDW[0x18];                                    // 0x0220(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       ControlName;                                               // 0x0238(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshComponent*                              Mesh;                                                      // 0x0240(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnOpened;                                                  // 0x0248(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UZA4[0x48];                                    // 0x0258(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneComponent*                             _rootComponent;                                            // 0x02A0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_I1OA[0x4];                                     // 0x02A8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _maxNumberOfLocks;                                         // 0x02AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                _maxNumberOfZappers;                                       // 0x02B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               CanOpenOnBothSides;                                        // 0x02B4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_E9D5[0x3];                                     // 0x02B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _openingDuration;                                          // 0x02B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _canOpen;                                                  // 0x02BC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FX7V[0x3];                                     // 0x02BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               _openingSoundCue;                                          // 0x02C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               _openedSoundCue;                                           // 0x02C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               _closingSoundCue;                                          // 0x02D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               _closedSoundCue;                                           // 0x02D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _noiseLoudness;                                            // 0x02E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isJammed;                                                 // 0x02E4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_477F[0x3];                                     // 0x02E5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _jammedOpenPercent;                                        // 0x02E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7UEY[0x4];                                     // 0x02EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _doorUnlockData;                                           // 0x02F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8F9V[0x8];                                     // 0x02F8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ConZ_EDoorStateFlags                               _stateFlags;                                               // 0x0300(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PZ4C[0x1];                                     // 0x0301(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _canEverBeOpened;                                          // 0x0302(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canEverBeClosed;                                          // 0x0303(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JPXO[0x4];                                     // 0x0304(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPriceCategory*                              _priceCategory;                                            // 0x0308(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UClass*>                              _upgradeItemsClasses;                                      // 0x0310(0x0010) (Edit, Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TArray<struct FLockData>                           _lockData;                                                 // 0x0320(0x0010) (Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UClass*>                              _originalUpgradeItemsClasses;                              // 0x0330(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FLockData>                           _originalLockData;                                         // 0x0340(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KKQ5[0x10];                                    // 0x0350(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDbIntegerId                                _owningUserProfileId;                                      // 0x0360(0x0008) (Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_N8ZA[0x10];                                    // 0x0368(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDoorUpgradeWidget*                          _upgradeWidget;                                            // 0x0378(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EAWZ[0x8];                                     // 0x0380(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDoorRepData                                _doorRepData;                                              // 0x0388(0x0038) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ASKU[0x15];                                    // 0x03C0(0x0015) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _disableSerialization;                                     // 0x03D5(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CYRR[0x12];                                    // 0x03D6(0x0012) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Door"));
		return ptr;
	}



	void OnUnlockFailed__DelegateSignature();
	void OnUnlocked__DelegateSignature(class ADoor* Door);
	void OnRep_StateFlags(ConZ_EDoorStateFlags Previous);
	void OnRep_OwningUserProfileId();
	void OnRep_Locks();
	void OnOpened__DelegateSignature();
	void OnLockRemoved__DelegateSignature(class ADoor* Door);
	void OnLocked__DelegateSignature(class ADoor* Door);
	void OnAudioStopped();
	bool IsOpen();
	void ChangeOpenState(bool shouldOpen);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DoorLockingRegistry
// 0x0058 (FullSize[0x0108] - InheritedSize[0x00B0])
class UDoorLockingRegistry : public UActorComponent
{
public:
	TMap<ConZ_EDoorUnlockDataType, struct FDoorUnlockDataCollection> _doorUnlockDataByType;                                     // 0x00B0(0x0050) (NativeAccessSpecifierPrivate)
	int                                                _countNormalizationThreshold;                              // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4O3B[0x4];                                     // 0x0104(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DoorLockingRegistry"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DoorUnlockData
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UDoorUnlockData : public UObject
{
public:
	ConZ_EDoorUnlockDataType                           Type;                                                      // 0x0028(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ADF1[0x7];                                     // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     Description;                                               // 0x0030(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DoorUnlockData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DoorUnlockItem
// 0x0020 (FullSize[0x0778] - InheritedSize[0x0758])
class ADoorUnlockItem : public AItem
{
public:
	int64_t                                            _expirationTimeSeconds;                                    // 0x0758(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EDoorUnlockDataType                           _unlockDataType;                                           // 0x0760(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LM9M[0x7];                                     // 0x0761(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _doorUnlockData;                                           // 0x0768(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int64_t                                            _itemCreatedTimestamp;                                     // 0x0770(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DoorUnlockItem"));
		return ptr;
	}



	void OnRep_DoorLockingDescriptor();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.UpgradeWidget
// 0x0050 (FullSize[0x02C8] - InheritedSize[0x0278])
class UUpgradeWidget : public UDesignableUserWidget
{
public:
	class UClass*                                      _upgradeClass;                                             // 0x0278(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _itemIcon;                                                 // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _backgroundImage;                                          // 0x0288(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _priceText;                                                // 0x0290(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _regularColour;                                            // 0x0298(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _unavailableColour;                                        // 0x02A8(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _availableColour;                                          // 0x02B8(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.UpgradeWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.UpgradeSlotWidget
// 0x0080 (FullSize[0x02F8] - InheritedSize[0x0278])
class UUpgradeSlotWidget : public UDesignableUserWidget
{
public:
	class UVerticalBox*                                _buyableUpgradesBox;                                       // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _itemIcon;                                                 // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _gridSymbol;                                               // 0x0288(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _backgroundImage;                                          // 0x0290(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _defaultImage;                                             // 0x0298(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _regularColour;                                            // 0x02A0(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _dropUnavailableColour;                                    // 0x02B0(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _dropAvailableColour;                                      // 0x02C0(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_ESlotType                                     _slotType;                                                 // 0x02D0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_I1DS[0xF];                                     // 0x02D1(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              _buyableUpgrades;                                          // 0x02E0(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MRMC[0x8];                                     // 0x02F0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.UpgradeSlotWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DoorUpgradeWidget
// 0x0028 (FullSize[0x0338] - InheritedSize[0x0310])
class UDoorUpgradeWidget : public UWaypointWidget
{
public:
	class ADoor*                                       _door;                                                     // 0x0310(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7Z9U[0x20];                                    // 0x0318(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DoorUpgradeWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DoubleDoor
// 0x0008 (FullSize[0x03F0] - InheritedSize[0x03E8])
class ADoubleDoor : public ADoor
{
public:
	class UMeshComponent*                              Mesh1;                                                     // 0x03E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DoubleDoor"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DoubleRegularDoorStatic
// 0x0030 (FullSize[0x0420] - InheritedSize[0x03F0])
class ADoubleRegularDoorStatic : public ADoubleDoor
{
public:
	struct FRotator                                    _openRotation0;                                            // 0x03F0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    _openRotation1;                                            // 0x03FC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    _closedRotation0;                                          // 0x0408(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    _closedRotation1;                                          // 0x0414(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DoubleRegularDoorStatic"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DoubleRegularDoorDestructible
// 0x0030 (FullSize[0x0420] - InheritedSize[0x03F0])
class ADoubleRegularDoorDestructible : public ADoubleDoor
{
public:
	struct FRotator                                    _openRotation0;                                            // 0x03F0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    _openRotation1;                                            // 0x03FC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    _closedRotation0;                                          // 0x0408(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    _closedRotation1;                                          // 0x0414(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DoubleRegularDoorDestructible"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DoubleSlidingDoorStatic
// 0x0020 (FullSize[0x0410] - InheritedSize[0x03F0])
class ADoubleSlidingDoorStatic : public ADoubleDoor
{
public:
	class USceneComponent*                             ClosedPositionComponent0;                                  // 0x03F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             ClosedPositionComponent1;                                  // 0x03F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             OpenPositionComponent0;                                    // 0x0400(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             OpenPositionComponent1;                                    // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DoubleSlidingDoorStatic"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DoubleSlidingDoorDestructible
// 0x0020 (FullSize[0x0410] - InheritedSize[0x03F0])
class ADoubleSlidingDoorDestructible : public ADoubleDoor
{
public:
	class USceneComponent*                             ClosedPositionComponent0;                                  // 0x03F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             ClosedPositionComponent1;                                  // 0x03F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             OpenPositionComponent0;                                    // 0x0400(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             OpenPositionComponent1;                                    // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DoubleSlidingDoorDestructible"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FoodItem
// 0x0140 (FullSize[0x0898] - InheritedSize[0x0758])
class AFoodItem : public AItem
{
public:
	float                                              Volume;                                                    // 0x0758(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Energy;                                                    // 0x075C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Water;                                                     // 0x0760(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EatingTime;                                                // 0x0764(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EDigestionGroup                               DigestionGroup;                                            // 0x0768(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J5XT[0x3];                                     // 0x0769(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Fat;                                                       // 0x076C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SaturatedFat;                                              // 0x0770(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Sodium;                                                    // 0x0774(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Carbs;                                                     // 0x0778(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Fiber;                                                     // 0x077C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Sugar;                                                     // 0x0780(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Proteins;                                                  // 0x0784(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Alcohol;                                                   // 0x0788(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Vitamin_A;                                                 // 0x078C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Vitamin_B1;                                                // 0x0790(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Vitamin_B2;                                                // 0x0794(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Vitamin_B3;                                                // 0x0798(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Vitamin_B4;                                                // 0x079C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Vitamin_B5;                                                // 0x07A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Vitamin_B6;                                                // 0x07A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Vitamin_B9;                                                // 0x07A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Vitamin_B12;                                               // 0x07AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Vitamin_C;                                                 // 0x07B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Vitamin_D;                                                 // 0x07B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Vitamin_E;                                                 // 0x07B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Vitamin_K;                                                 // 0x07BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Calcium;                                                   // 0x07C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Iron;                                                      // 0x07C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Magnesium;                                                 // 0x07C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Phosphorus;                                                // 0x07CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Potassium;                                                 // 0x07D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Zinc;                                                      // 0x07D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Copper;                                                    // 0x07D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Manganese;                                                 // 0x07DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Selenium;                                                  // 0x07E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Cookable;                                                  // 0x07E4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3PEJ[0x3];                                     // 0x07E5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CookingTime;                                               // 0x07E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinCookingTemperature;                                     // 0x07EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxCookingTemperature;                                     // 0x07F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinCookingSpeed;                                           // 0x07F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxCookingSpeed;                                           // 0x07F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThermalConductivityFactor;                                 // 0x07FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              QualitySensitivityFactor;                                  // 0x0800(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FreezingTemperature;                                       // 0x0804(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RoomTemperature;                                           // 0x0808(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShelfLife;                                                 // 0x080C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpoilageRateCooked;                                        // 0x0810(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpoilageRateFrozen;                                        // 0x0814(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsConsumable;                                              // 0x0818(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanCheckTaste;                                             // 0x0819(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y70S[0x6];                                     // 0x081A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystemComponent*                    SteamComponent;                                            // 0x0820(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             SteamParticles;                                            // 0x0828(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    SmokeComponent;                                            // 0x0830(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             SmokeParticles;                                            // 0x0838(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 ItemOpenedMesh;                                            // 0x0840(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 ItemEmptyMesh;                                             // 0x0848(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StartEatingAudioEvent;                                     // 0x0850(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopEatingAudioEvent;                                      // 0x0858(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StartCookingAudioEvent;                                    // 0x0860(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopCookingAudioEvent;                                     // 0x0868(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              _caloriesBonus;                                            // 0x0870(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _catchSicknessModifier;                                    // 0x0874(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _itemOpened;                                               // 0x0878(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Y6LS[0x3];                                     // 0x0879(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _temperature;                                              // 0x087C(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _environmentTemperature;                                   // 0x0880(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isCooking;                                                // 0x0884(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MAI1[0x3];                                     // 0x0885(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _cookedAmount;                                             // 0x0888(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_D1J1[0xC];                                     // 0x088C(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FoodItem"));
		return ptr;
	}



	void OnRep_Temperature();
	void OnRep_ItemOpened();
	void OnRep_IsCooking();
	void OnAudioComponentExpired();
	bool IsCooking();
	float GetVolume();
	float GetThermalConductivityFactor();
	float GetTemperature();
	float GetEnvironmentTemperature();
	float GetCookingAmount();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DrinkItem
// 0x0010 (FullSize[0x08A8] - InheritedSize[0x0898])
class ADrinkItem : public AFoodItem
{
public:
	class UBasicGameResourceContainerComponent*        _gameResourceContainer;                                    // 0x0898(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0Q8W[0x8];                                     // 0x08A0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DrinkItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DrinkWaterAssetData
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UDrinkWaterAssetData : public UInteractionAssetData
{
public:
	float                                              QuantityPerDrink;                                          // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              salinity;                                                  // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StartDrinkingAudioEvent;                                   // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopDrinkingAudioEvent;                                    // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DrinkWaterAssetData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DrivingSkill
// 0x0528 (FullSize[0x05C8] - InheritedSize[0x00A0])
class UDrivingSkill : public UDexteritySkill
{
public:
	struct FDrivingSkillExperienceAwards               NoSkillExperienceAwards;                                   // 0x00A0(0x0008) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FDrivingSkillExperienceAwards               BasicSkillExperienceAwards;                                // 0x00A8(0x0008) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FDrivingSkillExperienceAwards               MediumSkillExperienceAwards;                               // 0x00B0(0x0008) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FDrivingSkillExperienceAwards               AdvancedSkillExperienceAwards;                             // 0x00B8(0x0008) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FDrivingSkillExperienceAwards               AboveAdvancedSkillExperienceAwards;                        // 0x00C0(0x0008) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FDrivingSkillParametersPerSkillLevel        NoSkillParameters;                                         // 0x00C8(0x0100) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FDrivingSkillParametersPerSkillLevel        BasicSkillParameters;                                      // 0x01C8(0x0100) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FDrivingSkillParametersPerSkillLevel        MediumSkillParameters;                                     // 0x02C8(0x0100) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FDrivingSkillParametersPerSkillLevel        AdvancedSkillParameters;                                   // 0x03C8(0x0100) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FDrivingSkillParametersPerSkillLevel        AboveAdvancedSkillParameters;                              // 0x04C8(0x0100) (Edit, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DrivingSkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Drone
// 0x0228 (FullSize[0x08F0] - InheritedSize[0x06C8])
class ADrone : public AConZCharacter
{
public:
	unsigned char                                      UnknownData_2S6M[0x8];                                     // 0x06C8(0x0008) Fix Super Size
	TArray<float>                                      SpeedSteps;                                                // 0x06D0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                              MovementInertiaPlayer;                                     // 0x06E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MovementInertiaAI;                                         // 0x06E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MovementRotationSpeedExpFactor;                            // 0x06E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EngineParticlesChangeSpeedExpFactor;                       // 0x06EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 EngineVolumeFromSpeed;                                     // 0x06F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MovementBreathingInterval;                                 // 0x06F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MovementBreathingIntensity;                                // 0x06FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ScanBeamOpeningSpeed;                                      // 0x0700(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ScanBeamScanningSpeed;                                     // 0x0704(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ScanFaceHalfHeight;                                        // 0x0708(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TDKW[0x4];                                     // 0x070C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             SelfDestructParticles;                                     // 0x0710(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               EngineAudioEvent;                                          // 0x0718(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               EngineStopAudioEvent;                                      // 0x0720(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               SelfDestructAudioEvent;                                    // 0x0728(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B3LX[0x30];                                    // 0x0730(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          _nightVisionMaterial;                                      // 0x0760(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _currentSpeedStep;                                         // 0x0768(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GT9R[0x3];                                     // 0x0769(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _movementInertia;                                          // 0x076C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SK9D[0x8];                                     // 0x0770(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        _cameraMesh;                                               // 0x0778(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NQCR[0x98];                                    // 0x0780(0x0098) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _health;                                                   // 0x0818(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_28VC[0x25];                                    // 0x081C(0x0025) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _silentMode;                                               // 0x0841(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZJZL[0x9A];                                    // 0x0842(0x009A) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _interactionDistance;                                      // 0x08DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UActionProgressWidget*                       _progressWidget;                                           // 0x08E0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_S2OJ[0x8];                                     // 0x08E8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Drone"));
		return ptr;
	}



	void Server_TeleportToNextOrPreviousPlayer(bool Next);
	void Server_SetSilentMode(bool Value);
	void Server_SetCurrentSpeedStep(int step);
	void Server_OpenDoor(class ADoor* Door);
	void Server_InitializeItemVirtualizedInventory(class UObject* Item);
	void Server_DestroyBaseElement(const struct FVector& Location);
	void Server_CloseDoor(class ADoor* Door);
	void SelfDestruct();
	void OnRep_SilentMode();
	void OnRep_CurrentSpeedStep();
	void OnProgressWidgetFinished();
	void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void NetMulticast_SpawnDestroyedEffects();
	void NetMulticast_PlaySoundOnClients(ConZ_EDroneSound SoundToPlay, bool force);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DroneAIController
// 0x0358 (FullSize[0x0680] - InheritedSize[0x0328])
class ADroneAIController : public AAIController
{
public:
	float                                              FollowingDuration;                                         // 0x0328(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FollowingHeight;                                           // 0x032C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FollowingDistance;                                         // 0x0330(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinDistanceForFollowingAtHeight;                           // 0x0334(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProximityAccelScale;                                       // 0x0338(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProximityZPriority;                                        // 0x033C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimumNavigationProximity;                                // 0x0340(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DroneCruisingHeight;                                       // 0x0344(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MHDR[0x338];                                   // 0x0348(0x0338) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DroneAIController"));
		return ptr;
	}



	void SensingComponent_OnHearNoise(class APawn* NoiseInstigator, const struct FVector& Location, float Volume);
	void NavigationResultHandler(const struct FDoNNavigationQueryData& QueryData);
	void FollowCharacter(class ACharacter* characterToFollow);
	void FindWayTo(const struct FVector& Destination);
	void DynamicCollisionListener(const struct FDonNavigationDynamicCollisionPayload& CollisionData);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DroneCameraActor
// 0x0000 (FullSize[0x07A0] - InheritedSize[0x07A0])
class ADroneCameraActor : public ACameraActor
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DroneCameraActor"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DroneSoundComponent
// 0x0048 (FullSize[0x0120] - InheritedSize[0x00D8])
class UDroneSoundComponent : public UCharacterSoundComponent
{
public:
	class USoundCue*                                   IdleSound;                                                 // 0x00D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               IdleAudioEvent;                                            // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   AngrySound;                                                // 0x00E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AngryAudioEvent;                                           // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   AttackSound;                                               // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AttackAudioEvent;                                          // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   KillSound;                                                 // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               KillAudioEvent;                                            // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinSilenceTimeout;                                         // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSilenceTimeout;                                         // 0x011C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DroneSoundComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DroneTargetData
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UDroneTargetData : public UObject
{
public:
	unsigned char                                      UnknownData_Q70X[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DroneTargetData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DropdownMenuSelectionWidget
// 0x0038 (FullSize[0x0298] - InheritedSize[0x0260])
class UDropdownMenuSelectionWidget : public UUserWidget
{
public:
	struct FScriptDelegate                             OnClicked;                                                 // 0x0260(0x0010) (Edit, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	struct FScriptDelegate                             OnUpdated;                                                 // 0x0270(0x0010) (Edit, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               Selected;                                                  // 0x0280(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HA6B[0x3];                                     // 0x0281(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SelectionIndex;                                            // 0x0284(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               option;                                                    // 0x0288(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_P20U[0x7];                                     // 0x0289(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDropdownMenuWidget*                         _dropdownMenu;                                             // 0x0290(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DropdownMenuSelectionWidget"));
		return ptr;
	}



	void Update();
	void SetMenu(class UDropdownMenuWidget* DropdownMenu);
	void SelectRandom();
	void Select(int Index);
	void OnDropdownSelectionDelegate__DelegateSignature(class UDropdownMenuSelectionWidget* Widget);
	class UDropdownMenuWidget* GetMenu();
	void Click();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DropdownMenuWidget
// 0x0020 (FullSize[0x0280] - InheritedSize[0x0260])
class UDropdownMenuWidget : public UUserWidget
{
public:
	struct FScriptDelegate                             OnUpdate;                                                  // 0x0260(0x0010) (Edit, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PHON[0x8];                                     // 0x0270(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UNamedSlot*                                  _panelSlot;                                                // 0x0278(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DropdownMenuWidget"));
		return ptr;
	}



	void Update();
	void SetSelectedElementIndex(int Index);
	void Open();
	void OnDropdownMenuUpdate__DelegateSignature();
	bool IsOpen();
	void InitOptions();
	int GetSelectedElementIndex();
	class UDropdownMenuSelectionWidget* GetSelectedElement();
	int GetOptionCount();
	void Close(bool Collapse);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DropZoneDroppable
// 0x0060 (FullSize[0x0280] - InheritedSize[0x0220])
class ADropZoneDroppable : public AActor
{
public:
	class UStaticMeshComponent*                        Mesh;                                                      // 0x0220(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               LandSound;                                                 // 0x0228(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADropZoneGameEvent*                          _gameEvent;                                                // 0x0230(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TJK7[0x8];                                     // 0x0238(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystemComponent*                    _flareParticles0;                                          // 0x0240(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*                    _flareParticles1;                                          // 0x0248(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*                    _flareParticles2;                                          // 0x0250(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_46R5[0x8];                                     // 0x0258(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     _endLocation;                                              // 0x0260(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _fallingSpeed;                                             // 0x026C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _flareParticlesEnabled;                                    // 0x0270(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_INDB[0x3];                                     // 0x0271(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _flareParticlesTeam;                                       // 0x0274(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_G9JC[0x8];                                     // 0x0278(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DropZoneDroppable"));
		return ptr;
	}



	void SetGameEvent(class ADropZoneGameEvent* gameEvent);
	void OnRep_FlareParticlesTeam();
	void OnRep_FlareParticlesEnabled();
	class ADropZoneGameEvent* GetGameEvent();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DropZoneCargo
// 0x0010 (FullSize[0x0290] - InheritedSize[0x0280])
class ADropZoneCargo : public ADropZoneDroppable
{
public:
	unsigned char                                      UnknownData_1280[0x8];                                     // 0x0280(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UChildActorComponent*                        Slot;                                                      // 0x0288(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DropZoneCargo"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DropZoneCrate
// 0x0010 (FullSize[0x0290] - InheritedSize[0x0280])
class ADropZoneCrate : public ADropZoneDroppable
{
public:
	class UClass*                                      KeyClass;                                                  // 0x0280(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               _hasKey;                                                   // 0x0288(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KUOB[0x7];                                     // 0x0289(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DropZoneCrate"));
		return ptr;
	}



	void OnRep_HasKey();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DropZoneEquipmentTable
// 0x0018 (FullSize[0x0238] - InheritedSize[0x0220])
class ADropZoneEquipmentTable : public AActor
{
public:
	TArray<class AItem*>                               _trackedItems;                                             // 0x0220(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WX0U[0x8];                                     // 0x0230(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DropZoneEquipmentTable"));
		return ptr;
	}



	void UntrackItem(class AItem* Item);
	void TrackItem(class AItem* Item);
	void OnTrackedItemDestroyed(class AActor* Actor);
	void EndCleaningItems();
	void BeginCleaningItems();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DropZoneParticipantStats
// 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
class UDropZoneParticipantStats : public UGameEventParticipantStats
{
public:
	int                                                Activations;                                               // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8EMY[0x4];                                     // 0x004C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DropZoneParticipantStats"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DropZoneGameEvent
// 0x0158 (FullSize[0x06D0] - InheritedSize[0x0578])
class ADropZoneGameEvent : public AGameEventBase
{
public:
	class UClass*                                      TableAClass;                                               // 0x0578(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      TableBClass;                                               // 0x0580(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CrateClass;                                                // 0x0588(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CargoClass;                                                // 0x0590(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               IntroAnnouncement;                                         // 0x0598(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               LocateTheKeyAnnouncement;                                  // 0x05A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               BlueTeamFoundKeyAnnouncement;                              // 0x05A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               BlueTeamUnlockedAnnouncement;                              // 0x05B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               BlueTeamStolenAnnouncement;                                // 0x05B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               RedTeamFoundKeyAnnouncement;                               // 0x05C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               RedTeamUnlockedAnnouncement;                               // 0x05C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               RedTeamStolenAnnouncement;                                 // 0x05D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               CargoDropAnnouncement;                                     // 0x05D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               CargoLandedAnnouncement;                                   // 0x05E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  KeyIcon;                                                   // 0x05E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  CargoIcon;                                                 // 0x05F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                FriendlyColor;                                             // 0x05F8(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                EnemyColor;                                                // 0x0608(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDropZoneParameters                         _dropZoneParameters;                                       // 0x0618(0x002C) (Net, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JTHL[0xC];                                     // 0x0644(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ConZ_EDropZoneGameEventPhase                       _phase;                                                    // 0x0650(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KKAA[0x3];                                     // 0x0651(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _capturingTeam;                                            // 0x0654(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _phaseTimeLeft;                                            // 0x0658(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _captureProgress;                                          // 0x065C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YIKS[0x8];                                     // 0x0660(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AGameEventBorder*                            _barrierA;                                                 // 0x0668(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGameEventBorder*                            _barrierB;                                                 // 0x0670(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADropZoneEquipmentTable*                     _tableA;                                                   // 0x0678(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADropZoneEquipmentTable*                     _tableB;                                                   // 0x0680(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADropZoneCrate*                              _crateA;                                                   // 0x0688(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADropZoneCrate*                              _crateB;                                                   // 0x0690(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADropZoneKey*                                _key;                                                      // 0x0698(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APrisoner*                                   _keyCarrier;                                               // 0x06A0(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                      _topmostKeyOwner;                                          // 0x06A8(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADropZoneCargo*                              _cargo;                                                    // 0x06B0(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADropZoneSlot*                               _slot;                                                     // 0x06B8(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8GCU[0x10];                                    // 0x06C0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DropZoneGameEvent"));
		return ptr;
	}



	void SetDropZoneParameters(const struct FDropZoneParameters& Params);
	void OnRep_CapturingTeam();
	class ADropZoneSlot* GetSlot();
	float GetPhaseTimeLeft();
	ConZ_EDropZoneGameEventPhase GetPhase();
	class APrisoner* GetKeyCarrier();
	class ADropZoneKey* GetKey();
	struct FDropZoneParameters GetDropZoneParameters();
	class ADropZoneCrate* GetCrateB();
	class ADropZoneCrate* GetCrateA();
	class ADropZoneCargo* GetCargo();
	int GetCapturingTeam();
	float GetCaptureProgress();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DropZoneKey
// 0x0010 (FullSize[0x0768] - InheritedSize[0x0758])
class ADropZoneKey : public AItem
{
public:
	class USphereComponent*                            SphereComponent;                                           // 0x0758(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADropZoneGameEvent*                          _gameEvent;                                                // 0x0760(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DropZoneKey"));
		return ptr;
	}



	void SphereOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void SetGameEvent(class ADropZoneGameEvent* gameEvent);
	class ADropZoneGameEvent* GetGameEvent();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DropZoneLocationMarker
// 0x0108 (FullSize[0x0520] - InheritedSize[0x0418])
class ADropZoneLocationMarker : public AGameEventLocationMarker
{
public:
	struct FDropZoneParameters                         DropZoneParameters;                                        // 0x0418(0x002C) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     SpawnOffsetA;                                              // 0x0444(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SpawnOffsetB;                                              // 0x0450(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnRadiusA;                                              // 0x045C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnRadiusB;                                              // 0x0460(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G4QI[0xC];                                     // 0x0464(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  CargoDropOffset;                                           // 0x0470(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                                  CrateDropOffsetA;                                          // 0x04A0(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                                  CrateDropOffsetB;                                          // 0x04D0(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CrateAPreviewMesh;                                         // 0x0500(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CrateBPreviewMesh;                                         // 0x0508(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        CargoPreviewMesh;                                          // 0x0510(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XHCI[0x8];                                     // 0x0518(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DropZoneLocationMarker"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DropZoneSlot
// 0x0040 (FullSize[0x0260] - InheritedSize[0x0220])
class ADropZoneSlot : public AActor
{
public:
	unsigned char                                      UnknownData_SXP9[0x10];                                    // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        Mesh;                                                      // 0x0230(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ActivationDuration;                                        // 0x0238(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K1PK[0x4];                                     // 0x023C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMesh*                                 UnlockedMesh;                                              // 0x0240(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ActivateSound;                                             // 0x0248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADropZoneGameEvent*                          _gameEvent;                                                // 0x0250(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TJ1W[0x8];                                     // 0x0258(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DropZoneSlot"));
		return ptr;
	}



	void SetGameEvent(class ADropZoneGameEvent* gameEvent);
	void Server_Activate(class APrisoner* Prisoner);
	float GetOpeningDuration();
	class ADropZoneGameEvent* GetGameEvent();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DrunkennessSickness
// 0x0010 (FullSize[0x01C0] - InheritedSize[0x01B0])
class UDrunkennessSickness : public USickness
{
public:
	unsigned char                                      UnknownData_JRTX[0x10];                                    // 0x01B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DrunkennessSickness"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DummyCollisionCapsule
// 0x0010 (FullSize[0x0470] - InheritedSize[0x0460])
class UDummyCollisionCapsule : public UCapsuleComponent
{
public:
	struct FGameplayTag                                _attachment;                                               // 0x0460(0x0008) (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_627Q[0x8];                                     // 0x0468(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DummyCollisionCapsule"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.DysenteryDisease
// 0x0008 (FullSize[0x01B8] - InheritedSize[0x01B0])
class UDysenteryDisease : public UDisease
{
public:
	unsigned char                                      UnknownData_8ZY2[0x8];                                     // 0x01B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.DysenteryDisease"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.EffectOverTimeDealer
// 0x0050 (FullSize[0x0270] - InheritedSize[0x0220])
class AEffectOverTimeDealer : public AActor
{
public:
	TArray<struct FDamageOverTimeUpdateGroup>          _updateGroups;                                             // 0x0220(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	int                                                _actorLimitPerTick;                                        // 0x0230(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1YJQ[0x4];                                     // 0x0234(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _timeDilation;                                             // 0x0238(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WJ53[0x34];                                    // 0x023C(0x0034) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.EffectOverTimeDealer"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ElectricDoorAssetData
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UElectricDoorAssetData : public UAssetUserData
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ElectricDoorAssetData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ElectricianGlovesTag
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UElectricianGlovesTag : public UBaseItemTag
{
public:
	float                                              PrisonerDamageModifier;                                    // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0HYS[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ElectricianGlovesTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.EmblemData
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UEmblemData : public UDataAsset
{
public:
	TArray<class UTexture2D*>                          BackgroundTextures;                                        // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UTexture2D*>                          SymbolTextures;                                            // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FLinearColor>                        ColorPalette;                                              // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.EmblemData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.EnduranceSkill
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UEnduranceSkill : public UConstitutionSkill
{
public:
	struct FEnduranceSkillParametersPerSkillLevel      NoSkillParameters;                                         // 0x00B8(0x0008) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FEnduranceSkillParametersPerSkillLevel      BasicSkillParameters;                                      // 0x00C0(0x0008) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FEnduranceSkillParametersPerSkillLevel      MediumSkillParameters;                                     // 0x00C8(0x0008) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FEnduranceSkillParametersPerSkillLevel      AdvancedSkillParameters;                                   // 0x00D0(0x0008) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5S54[0x8];                                     // 0x00D8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.EnduranceSkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.EnergyDeficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UEnergyDeficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.EnergyDeficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.EngineeringSkill
// 0x00F0 (FullSize[0x0190] - InheritedSize[0x00A0])
class UEngineeringSkill : public UIntelligenceSkill
{
public:
	struct FEngineeringSkillExperienceAwards           NoSkillExperienceAwards;                                   // 0x00A0(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FEngineeringSkillExperienceAwards           BasicSkillExperienceAwards;                                // 0x00B0(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FEngineeringSkillExperienceAwards           MediumSkillExperienceAwards;                               // 0x00C0(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FEngineeringSkillExperienceAwards           AdvancedSkillExperienceAwards;                             // 0x00D0(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FEngineeringSkillExperienceAwards           AboveAdvancedSkillExperienceAwards;                        // 0x00E0(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FEngineeringSkillParametersPerSkillLevel    NoSkillParameters;                                         // 0x00F0(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FEngineeringSkillParametersPerSkillLevel    BasicSkillParameters;                                      // 0x0110(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FEngineeringSkillParametersPerSkillLevel    MediumSkillParameters;                                     // 0x0130(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FEngineeringSkillParametersPerSkillLevel    AdvancedSkillParameters;                                   // 0x0150(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FEngineeringSkillParametersPerSkillLevel    AboveAdvancedSkillParameters;                              // 0x0170(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.EngineeringSkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.EnvironmentDescriptionComponent
// 0x0010 (FullSize[0x04E0] - InheritedSize[0x04D0])
class UEnvironmentDescriptionComponent : public UStaticMeshComponent
{
public:
	ConZ_EEnvironmentClass                             EnvironmentClass;                                          // 0x04D0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsUnderground;                                             // 0x04D1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_78E0[0xE];                                     // 0x04D2(0x000E) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.EnvironmentDescriptionComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ObtainItemObjective
// 0x0048 (FullSize[0x0378] - InheritedSize[0x0330])
class AObtainItemObjective : public ARequirementObjective
{
public:
	unsigned char                                      _targetItems[0x10];                                        // 0x0330(0x0010) UNKNOWN PROPERTY: ArrayProperty
	bool                                               _itemInHands;                                              // 0x0340(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _itemInHolster;                                            // 0x0341(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _itemInInventory;                                          // 0x0342(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_U1PE[0x35];                                    // 0x0343(0x0035) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ObtainItemObjective"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.EquipItemObjective
// 0x0008 (FullSize[0x0380] - InheritedSize[0x0378])
class AEquipItemObjective : public AObtainItemObjective
{
public:
	unsigned char                                      UnknownData_Y0EG[0x8];                                     // 0x0378(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.EquipItemObjective"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.EquipmentItem
// 0x0018 (FullSize[0x0770] - InheritedSize[0x0758])
class AEquipmentItem : public AItem
{
public:
	uint32_t                                           MinRange;                                                  // 0x0758(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           MaxRange;                                                  // 0x075C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           MinDamage;                                                 // 0x0760(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           MaxDamage;                                                 // 0x0764(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           AP;                                                        // 0x0768(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6TQG[0x4];                                     // 0x076C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.EquipmentItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.EventInsertCartridge
// 0x0010 (FullSize[0x00A0] - InheritedSize[0x0090])
class UEventInsertCartridge : public UWeaponActionReloadSequence
{
public:
	struct FName                                       MontageEndSectionName;                                     // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R0X6[0x8];                                     // 0x0098(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.EventInsertCartridge"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.EventInsertMagazine
// 0x0000 (FullSize[0x0090] - InheritedSize[0x0090])
class UEventInsertMagazine : public UWeaponActionReloadSequence
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.EventInsertMagazine"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ExamineAction
// 0x0000 (FullSize[0x00A8] - InheritedSize[0x00A8])
class UExamineAction : public UInteractionAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ExamineAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ExamineAssetData
// 0x0208 (FullSize[0x0238] - InheritedSize[0x0030])
class UExamineAssetData : public UInteractionAssetData
{
public:
	bool                                               UsePresetBasedSpawning;                                    // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZODO[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FExamineItemSpawnerData                     ExamineData;                                               // 0x0038(0x00C0) (Edit, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StartExamineAudioEvent;                                    // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopExamineAudioEvent;                                     // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_ENoiseLevel                                   NoiseLevel;                                                // 0x0108(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZSOW[0x3];                                     // 0x0109(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                quantity;                                                  // 0x010C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MinQuantity;                                               // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxQuantity;                                               // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Probability;                                               // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2LXT[0x4];                                     // 0x011C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       ItemSpawnTypes;                                            // 0x0120(0x0020) (Edit, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              Items;                                                     // 0x0140(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UItemGroup*>                          ItemGroups;                                                // 0x0150(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<class UItemGroup*, struct FExamineDataPerItemGroup> DataPerItemGroup;                                          // 0x0160(0x0050) (Edit, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                       ItemsOwner;                                                // 0x01B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseItemZone;                                               // 0x01B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseItemRarity;                                             // 0x01B9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4RD2[0x2];                                     // 0x01BA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              InitialDamage;                                             // 0x01BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RandomizeDamage;                                           // 0x01C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InitialUsage;                                              // 0x01C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RandomizeUsage;                                            // 0x01C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InitialDirtiness;                                          // 0x01CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RandomizeDirtiness;                                        // 0x01D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DPWE[0x4];                                     // 0x01D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FPossibleItemSickness>               PossibleSicknesses;                                        // 0x01D8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                               CanStore;                                                  // 0x01E8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanSave;                                                   // 0x01E9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HasCustomExpirationTime;                                   // 0x01EA(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0M9U[0x5];                                     // 0x01EB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       Title;                                                     // 0x01F0(0x0018) (Edit, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_S8QH[0x30];                                    // 0x0208(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ExamineAssetData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ExamineObjectAction
// 0x0020 (FullSize[0x00C8] - InheritedSize[0x00A8])
class UExamineObjectAction : public UExamineAction
{
public:
	unsigned char                                      UnknownData_59U0[0x20];                                    // 0x00A8(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ExamineObjectAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ExaminePrisonerAction
// 0x0008 (FullSize[0x00B0] - InheritedSize[0x00A8])
class UExaminePrisonerAction : public UExamineAction
{
public:
	unsigned char                                      UnknownData_VCTF[0x8];                                     // 0x00A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ExaminePrisonerAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ExecuteInteractionAction
// 0x0098 (FullSize[0x0140] - InheritedSize[0x00A8])
class UExecuteInteractionAction : public UInteractionAction
{
public:
	unsigned char                                      UnknownData_KAIZ[0x98];                                    // 0x00A8(0x0098) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ExecuteInteractionAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ExplosionDamageType
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UExplosionDamageType : public UDamageType
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ExplosionDamageType"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FailurePenalty
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UFailurePenalty : public UObject
{
public:
	bool                                               _shouldExecuteOnClients;                                   // 0x0028(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VEKJ[0x7];                                     // 0x0029(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FailurePenalty"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ExplosionFailurePenalty
// 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
class UExplosionFailurePenalty : public UFailurePenalty
{
public:
	float                                              _explosionBaseDamage;                                      // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minimumDamage;                                            // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _damageInnerRadius;                                        // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _damageOuterRadius;                                        // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _damageFalloff;                                            // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HNTQ[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             _explosionPS;                                              // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _explosionAudioEvent;                                      // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ExplosionFailurePenalty"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ExplosiveProtectionItemComponent
// 0x00F0 (FullSize[0x01A0] - InheritedSize[0x00B0])
class UExplosiveProtectionItemComponent : public UItemComponent
{
public:
	unsigned char                                      UnknownData_Z0U6[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _minigameClass;                                            // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _minigameToolTag;                                          // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLockData                                   _lockData;                                                 // 0x00C8(0x0088) (Edit, NativeAccessSpecifierPrivate)
	class UParticleSystem*                             _explosionParticles;                                       // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _explosionParticlesLocation;                               // 0x0158(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_W3NC[0x4];                                     // 0x0164(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               _explosionAudioEvent;                                      // 0x0168(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _explosionBaseDamage;                                      // 0x0170(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _explosionMinimalDamage;                                   // 0x0174(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _explosionDamagePositionOffset;                            // 0x0178(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _explosionDamageFalloff;                                   // 0x017C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _explosionInnerRadius;                                     // 0x0180(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _explosionOuterRadius;                                     // 0x0184(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _hearingDamageRadius;                                      // 0x0188(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UTJC[0x4];                                     // 0x018C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _explosionCameraShakeClass;                                // 0x0190(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isArmed;                                                  // 0x0198(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PS6V[0x7];                                     // 0x0199(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ExplosiveProtectionItemComponent"));
		return ptr;
	}



	void NetMulticast_PlayDetonationEffects();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ExplosiveTrapItem
// 0x00D8 (FullSize[0x0970] - InheritedSize[0x0898])
class AExplosiveTrapItem : public ATrapItem
{
public:
	unsigned char                                      UnknownData_MMUC[0x4];                                     // 0x0898(0x0004) Fix Super Size
	struct FVector                                     _trapForwardVector;                                        // 0x089C(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _triggerSound;                                             // 0x08A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _detonationSound;                                          // 0x08B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                             _detonationParticles;                                      // 0x08B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTransform                                  _detonationParticlesTransform;                             // 0x08C0(0x0030) (Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                               _hasPrimaryExplosion;                                      // 0x08F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Q4G1[0x3];                                     // 0x08F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _primaryBaseDamage;                                        // 0x08F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _primaryMinimumDamage;                                     // 0x08F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _primaryDamageInnerRadius;                                 // 0x08FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _primaryDamageOuterRadius;                                 // 0x0900(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _primaryDamageMinAngleDeg;                                 // 0x0904(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _primaryDamageMaxAngleDeg;                                 // 0x0908(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _primaryDamageChanceMultiplier;                            // 0x090C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _primaryDamageMinChance;                                   // 0x0910(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _primaryDamageMaxChance;                                   // 0x0914(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _primaryDamageFalloff;                                     // 0x0918(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _primaryDamageAngleFalloff;                                // 0x091C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _hasSecondaryExplosion;                                    // 0x0920(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5VYT[0x3];                                     // 0x0921(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _secondaryBaseDamage;                                      // 0x0924(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _secondaryMinimumDamage;                                   // 0x0928(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _secondaryDamageInnerRadius;                               // 0x092C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _secondaryDamageOuterRadius;                               // 0x0930(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _secondaryDamageFalloff;                                   // 0x0934(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _instantlyDestroysStructures;                              // 0x0938(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_90ES[0x3];                                     // 0x0939(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _structureDestructionRadius;                               // 0x093C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minimalElementAreaCovered;                                // 0x0940(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _structureDestructionMinAngleDeg;                          // 0x0944(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _structureDestructionMaxAngleDeg;                          // 0x0948(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _explosionDamagePositionOffset;                            // 0x094C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDamageDescription                          _damageDescription;                                        // 0x0950(0x0004) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_72MV[0x1C];                                    // 0x0954(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ExplosiveTrapItem"));
		return ptr;
	}



	void Detonate();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ExteriorCharacterSpawnerComponent
// 0x0010 (FullSize[0x0240] - InheritedSize[0x0230])
class UExteriorCharacterSpawnerComponent : public UCharacterSpawnerComponent
{
public:
	ConZ_ECharacterSpawnerRange                        Range;                                                     // 0x0230(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X8CO[0xF];                                     // 0x0231(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ExteriorCharacterSpawnerComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FatDeficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UFatDeficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FatDeficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FiberDeficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UFiberDeficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FiberDeficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FillItemWithReplenishableResourceAssetData
// 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
class UFillItemWithReplenishableResourceAssetData : public UInteractionAssetData
{
public:
	struct FFillItemWithReplenishableResourceInteractionData InteractionData;                                           // 0x0030(0x0048) (Edit, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FillItemWithReplenishableResourceAssetData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FillWaterAction
// 0x0028 (FullSize[0x00D0] - InheritedSize[0x00A8])
class UFillWaterAction : public UInteractionAction
{
public:
	unsigned char                                      UnknownData_KLHP[0x28];                                    // 0x00A8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FillWaterAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FireItem
// 0x0068 (FullSize[0x07D8] - InheritedSize[0x0770])
class AFireItem : public AEquipmentItem
{
public:
	float                                              FuelCapacity;                                              // 0x0770(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FuelDuration;                                              // 0x0774(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BurningSpeed;                                              // 0x0778(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BurningSpeedRain;                                          // 0x077C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHeatSourceParameters                       HeatSourceParameters;                                      // 0x0780(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StartBurningAudioEvent;                                    // 0x07A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopBurningAudioEvent;                                     // 0x07A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkComponent*                                AudioComponent;                                            // 0x07B0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    FireComponent;                                             // 0x07B8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TouchDamage;                                               // 0x07C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               _isBurning;                                                // 0x07C4(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LB80[0xB];                                     // 0x07C5(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _burningStage;                                             // 0x07D0(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TX4P[0x4];                                     // 0x07D4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FireItem"));
		return ptr;
	}



	void SetBurning(bool burning);
	void OnRep_IsBurning();
	void OnRep_BurningStage();
	struct FDbIntegerId GetSourceId();
	int GetMaxBurningStage();
	int GetBurningStage();
	bool GetBurning();
	void CalculateBurningStage();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FireplaceItem
// 0x0040 (FullSize[0x0818] - InheritedSize[0x07D8])
class AFireplaceItem : public AFireItem
{
public:
	class USceneComponent*                             CookingComponent;                                          // 0x07D8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UStaticMesh*>                         FireplaceMesh;                                             // 0x07E0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	int                                                MaterialSwitchIndex;                                       // 0x07F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5SN7[0x4];                                     // 0x07F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          LitMaterial;                                               // 0x07F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          UnlitMaterial;                                             // 0x0800(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                            SphereCollider;                                            // 0x0808(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IntensityIncreasePeriod;                                   // 0x0810(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IntensityIncreaseDuration;                                 // 0x0814(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FireplaceItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FireworksItem
// 0x0020 (FullSize[0x0778] - InheritedSize[0x0758])
class AFireworksItem : public AItem
{
public:
	bool                                               _isFiring;                                                 // 0x0758(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SUFB[0x7];                                     // 0x0759(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _totalShells;                                              // 0x0760(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZCZW[0xC];                                     // 0x0764(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _secondsBetweenLaunches;                                   // 0x0770(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _noiseLoudnessOnLaunch;                                    // 0x0774(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FireworksItem"));
		return ptr;
	}



	void SetIsFiring(bool IsFiring);
	void OnRep_IsFiring();
	void LaunchShell();
	bool IsFiring();
	int GetTotalShells();
	float GetSecondsBetweenLaunches();
	bool CanStartFiring(class APrisoner* Prisoner);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FireworksTrapItem
// 0x0038 (FullSize[0x08D0] - InheritedSize[0x0898])
class AFireworksTrapItem : public ATrapItem
{
public:
	class UAkAudioEvent*                               _triggerSound;                                             // 0x0898(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _numShells;                                                // 0x08A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _shellLaunchPeriod;                                        // 0x08A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _detonationDelay;                                          // 0x08A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FAGE[0xD];                                     // 0x08AC(0x000D) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isFiring;                                                 // 0x08B9(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HCNQ[0x16];                                    // 0x08BA(0x0016) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FireworksTrapItem"));
		return ptr;
	}



	void OnRep_IsFiring();
	void LaunchShell();
	void Detonate();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Fish
// 0x0014 (FullSize[0x08E0] - InheritedSize[0x08CC])
class AFish : public AAnimal2
{
public:
	unsigned char                                      UnknownData_XT35[0x4];                                     // 0x08CC(0x0004) Fix Super Size
	unsigned char                                      UnknownData_M5WI[0x10];                                    // 0x08D0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Fish"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FishAIController
// 0x0060 (FullSize[0x0388] - InheritedSize[0x0328])
class AFishAIController : public AAIController
{
public:
	float                                              turnSpeed;                                                 // 0x0328(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FleeImpulse;                                               // 0x032C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StuckCheckTime;                                            // 0x0330(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FleeTime;                                                  // 0x0334(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FleeTurnSpeed;                                             // 0x0338(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FleeDistance;                                              // 0x033C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    FleeRotationRate;                                          // 0x0340(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WHLN[0x3C];                                    // 0x034C(0x003C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FishAIController"));
		return ptr;
	}



	void UpdatePerception(TArray<class AActor*> actorsPercepted);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FishSpawner
// 0x0160 (FullSize[0x0380] - InheritedSize[0x0220])
class AFishSpawner : public AActor
{
public:
	float                                              StartSpawningDistance;                                     // 0x0220(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinSpawnAnwayDistance;                                     // 0x0224(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      MaxFishesPerVolume;                                        // 0x0228(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      MinFishesPerVolume;                                        // 0x0229(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      BulkSpawnAtOnceMax;                                        // 0x022A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      WaterVolumeChecksPerFrame;                                 // 0x022B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RNMG[0x4];                                     // 0x022C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBillboardComponent*                         Sprite;                                                    // 0x0230(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UClass*, struct FFishSpawnInfo>         SpawnInfo;                                                 // 0x0238(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                              UpVertialExtent;                                           // 0x0288(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DownVertialExtent;                                         // 0x028C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LPHA[0xF0];                                    // 0x0290(0x00F0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FishSpawner"));
		return ptr;
	}



	void UpdateWaterVolumeAssignment();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FlagAreaVisualizer
// 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
class AFlagAreaVisualizer : public AActor
{
public:
	class UStaticMeshComponent*                        _staticMeshComponent;                                      // 0x0220(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RVCL[0x8];                                     // 0x0228(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FlagAreaVisualizer"));
		return ptr;
	}



	void DestroyVisualizer();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FlareItem
// 0x00A8 (FullSize[0x0800] - InheritedSize[0x0758])
class AFlareItem : public AItem
{
public:
	unsigned char                                      UnknownData_DF5S[0x1];                                     // 0x0758(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ConZ_EFlareIgniteState                             _repState;                                                 // 0x0759(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_P3R6[0x2];                                     // 0x075A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       _effectsSocket;                                            // 0x075C(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MC9X[0xC];                                     // 0x0764(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               _flareIgnitedAudioEvent;                                   // 0x0770(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _flareExtinguishedAudioEvent;                              // 0x0778(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _particlesLoopStartBlend;                                  // 0x0780(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _particlesLoopDuration;                                    // 0x0784(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                             _flareIgnitedParticle;                                     // 0x0788(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                             _flareLoopParticle;                                        // 0x0790(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                             _flareExtinguishedParticle;                                // 0x0798(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _autoDestroyTimeOnUse;                                     // 0x07A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _flareIgnitedParticlesDuration;                            // 0x07A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _flareExtinguishedParticleDuration;                        // 0x07A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _noiseLoudnessWhileIgnited;                                // 0x07AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _noiseLoudnessUpdateFrequencyPerHour;                      // 0x07B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _burningNoiseTag;                                          // 0x07B4(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JOE5[0xC];                                     // 0x07BC(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FLinearColor                                _pointLightColor;                                          // 0x07C8(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInterface*                          _pointLightFunctionMaterial;                               // 0x07D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1NJR[0x20];                                    // 0x07E0(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FlareItem"));
		return ptr;
	}



	void SwitchPointLight(bool turnOn);
	void SetState(ConZ_EFlareIgniteState State);
	void RequestPrisonerIgniteFlare(class APrisoner* Prisoner);
	void OnRep_State();
	bool IsBurning();
	void Ignite(class APrisoner* Prisoner);
	ConZ_EFlareIgniteState GetState();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FlareTrapItem
// 0x0048 (FullSize[0x08E0] - InheritedSize[0x0898])
class AFlareTrapItem : public ATrapItem
{
public:
	class UAkAudioEvent*                               _triggerSound;                                             // 0x0898(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _detonationDelay;                                          // 0x08A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BRHF[0x4];                                     // 0x08A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _projectileClass;                                          // 0x08A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _projectileLocation;                                       // 0x08B0(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                                    _projectileRotation;                                       // 0x08BC(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	float                                              _projectileMuzzleVelocity;                                 // 0x08C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _projectileLifetime;                                       // 0x08CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2VBC[0x10];                                    // 0x08D0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FlareTrapItem"));
		return ptr;
	}



	void Detonate();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GrenadeItem
// 0x0088 (FullSize[0x07E0] - InheritedSize[0x0758])
class AGrenadeItem : public AItem
{
public:
	class UAkAudioEvent*                               ExplosionAudioEvent;                                       // 0x0758(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              _explosionDamage;                                          // 0x0760(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _explosionOuterRadius;                                     // 0x0764(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _explosionInnerRadius;                                     // 0x0768(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _explosionFalloff;                                         // 0x076C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _explosionDelay;                                           // 0x0770(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDamageDescription                          _damageDescription;                                        // 0x0774(0x0004) (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              _explosionImpulse_OBSOLETE;                                // 0x0778(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WH7X[0xC];                                     // 0x077C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             _explosionParticle;                                        // 0x0788(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      _explosionCameraShakeClass;                                // 0x0790(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _hearingDamageRadius;                                      // 0x0798(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MBA4[0x4];                                     // 0x079C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMeshComponent*                      _skeletalMesh;                                             // 0x07A0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _grenadeLongThrowMontage;                                  // 0x07A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _grenadeLongThrowLoopMontage;                              // 0x07B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _grenadeShortThrowMontage;                                 // 0x07B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _grenadeThrowbackMontage;                                  // 0x07C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _leverReleasedSocketName;                                  // 0x07C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                             _leverReleasedPS;                                          // 0x07D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UL59[0x8];                                     // 0x07D8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GrenadeItem"));
		return ptr;
	}



	void Server_PullPin();
	void Multicast_PlayEffects(const struct FVector& zeroBasedLocation, const struct FRotator& Rotation);
	class UAnimMontage* GetArmingMontage(ConZ_EThrowingType throwingType);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FlashbangItem
// 0x0010 (FullSize[0x07F0] - InheritedSize[0x07E0])
class AFlashbangItem : public AGrenadeItem
{
public:
	class UClass*                                      FlashbangEffectsClass;                                     // 0x07E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GZ5P[0x8];                                     // 0x07E8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FlashbangItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FlashbangItemEffects
// 0x0050 (FullSize[0x0270] - InheritedSize[0x0220])
class AFlashbangItemEffects : public AActor
{
public:
	class UParticleSystem*                             ExplosionParticles;                                        // 0x0220(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ExplosionCameraShakeClass;                                 // 0x0228(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ExplosionAudioEvent;                                       // 0x0230(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StartStunnedSoundEffectsAudioEvent;                        // 0x0238(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopStunnedSoundEffectsAudioEvent;                         // 0x0240(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinFlashbangDurationToStartStunnedSoundEffects;            // 0x0248(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FullFlashDuration;                                         // 0x024C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlashFadeOutDuration;                                      // 0x0250(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlashRadius;                                               // 0x0254(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlashLineTraceDistance;                                    // 0x0258(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WAQL[0x14];                                    // 0x025C(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FlashbangItemEffects"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FogSphere
// 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
class AFogSphere : public AActor
{
public:
	bool                                               _shouldExistOnDedicatedServer;                             // 0x0220(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HTKR[0x7];                                     // 0x0221(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 _densityVersusTimeOfDay;                                   // 0x0228(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FogSphere"));
		return ptr;
	}



	void SetFogDensity(float Density);
	void OnTimeOfDayChanged(float TimeOfDay);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FoliageAssetData
// 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
class UFoliageAssetData : public UAssetUserData
{
public:
	struct FFoliageGeneralData                         GeneralData;                                               // 0x0028(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FFoliageEffectsData                         EffectsData;                                               // 0x0038(0x0018) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FFoliageAIPerceptionData                    AIPerceptionData;                                          // 0x0050(0x0002) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8JVI[0x6];                                     // 0x0052(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FoliageAssetData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FoliageInstancedBush
// 0x0000 (FullSize[0x06A0] - InheritedSize[0x06A0])
class UFoliageInstancedBush : public UFoliageInstancedStaticMeshComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FoliageInstancedBush"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FoliageInstancedGrass
// 0x0000 (FullSize[0x06A0] - InheritedSize[0x06A0])
class UFoliageInstancedGrass : public UFoliageInstancedStaticMeshComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FoliageInstancedGrass"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FoliageInstancedTree
// 0x0000 (FullSize[0x06A0] - InheritedSize[0x06A0])
class UFoliageInstancedTree : public UFoliageInstancedStaticMeshComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FoliageInstancedTree"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FollowsMouseActor
// 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
class AFollowsMouseActor : public AActor
{
public:
	float                                              DistanceFromCamera;                                        // 0x0220(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9MZA[0x4];                                     // 0x0224(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FollowsMouseActor"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ForceUnlockItemTag
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UForceUnlockItemTag : public UBaseItemTag
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ForceUnlockItemTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FortificationComponent
// 0x0030 (FullSize[0x0500] - InheritedSize[0x04D0])
class UFortificationComponent : public UStaticMeshComponent
{
public:
	unsigned char                                      UnknownData_LGL7[0x8];                                     // 0x04D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             _destructionParticles;                                     // 0x04D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _destructionAudio;                                         // 0x04E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ABuilding*                                   _parentBuilding;                                           // 0x04E8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _markerIndex;                                              // 0x04F0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _health;                                                   // 0x04F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6RMT[0x8];                                     // 0x04F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FortificationComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FoxglovePoisoning
// 0x0010 (FullSize[0x01C0] - InheritedSize[0x01B0])
class UFoxglovePoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData_IYER[0x10];                                    // 0x01B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FoxglovePoisoning"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FragGrenadeItem
// 0x0000 (FullSize[0x07E0] - InheritedSize[0x07E0])
class AFragGrenadeItem : public AGrenadeItem
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FragGrenadeItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.FuelCanister
// 0x0000 (FullSize[0x0770] - InheritedSize[0x0770])
class AFuelCanister : public AEquipmentItem
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.FuelCanister"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameEventBorder
// 0x0070 (FullSize[0x0290] - InheritedSize[0x0220])
class AGameEventBorder : public AActor
{
public:
	class UStaticMeshComponent*                        Mesh;                                                      // 0x0220(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    Material;                                                  // 0x0228(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UChildActorComponent*                        SoundSpline;                                               // 0x0230(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AudioEvent;                                                // 0x0238(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EGameEventBorderState                         _state;                                                    // 0x0240(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_I9YS[0x3];                                     // 0x0241(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _desiredRadius;                                            // 0x0244(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9F1G[0x4];                                     // 0x0248(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     _desiredOffset;                                            // 0x024C(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0HYX[0xC];                                     // 0x0258(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _desiredHeat;                                              // 0x0264(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZPC8[0x4];                                     // 0x0268(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _radiusChangeSpeed;                                        // 0x026C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _offsetChangeSpeed;                                        // 0x0270(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _heatChangeSpeed;                                          // 0x0274(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _collisionEnabled;                                         // 0x0278(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _blockPawns;                                               // 0x0279(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E0YW[0x16];                                    // 0x027A(0x0016) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameEventBorder"));
		return ptr;
	}



	void SetEnablePawnCollision(bool Value);
	void OnRep_Collision();
	void Multicast_SetRadius(float Radius);
	void Multicast_SetOffset(const struct FVector& Offset);
	bool IsActive();
	void HeatUpAndChangeArea(float Radius, const struct FVector& focus, float Duration, float heatUpDuration);
	ConZ_EGameEventBorderState GetState();
	float GetRadius();
	struct FVector GetOffset();
	struct FVector GetBorderCenter();
	void ChangeState(ConZ_EGameEventBorderState State, float Duration);
	void ChangeArea(float Radius, const struct FVector& focus, float Duration);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameEventCardWidget
// 0x0008 (FullSize[0x0280] - InheritedSize[0x0278])
class UGameEventCardWidget : public UDesignableUserWidget
{
public:
	class AGameEventBase*                              _gameEvent;                                                // 0x0278(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameEventCardWidget"));
		return ptr;
	}



	void UpdateStats();
	class AGameEventBase* GetGameEvent();
	class UGameEventCardWidget* Create(class AGameEventBase* gameEvent);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameEventInfoWidget
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
class UGameEventInfoWidget : public UDesignableUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameEventInfoWidget"));
		return ptr;
	}



	void UpdateStats(class AGameEventBase* _gameEvent);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameEventLeaderboardWidget
// 0x0030 (FullSize[0x02A8] - InheritedSize[0x0278])
class UGameEventLeaderboardWidget : public UDesignableUserWidget
{
public:
	TArray<struct FEventsRankingStatsItem>             TopPlayersStats;                                           // 0x0278(0x0010) (BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FEventsRankingStatsItem>             PlayerRankingStats;                                        // 0x0288(0x0010) (BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int                                                playerRank;                                                // 0x0298(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VCMC[0xC];                                     // 0x029C(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameEventLeaderboardWidget"));
		return ptr;
	}



	void UpdateTopPlayers();
	void UpdatePlayerRanking();
	void RequestTopPlayers(int count, ConZ_EEventsRankingStatsOrderByField orderByField, ConZ_ESortOrder sortOrder);
	void RequestPlayerRanking(int Pad, ConZ_EEventsRankingStatsOrderByField orderByField, ConZ_ESortOrder sortOrder);
	void CancelReqeusts();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameEventLoadoutMenuWidget
// 0x0008 (FullSize[0x0280] - InheritedSize[0x0278])
class UGameEventLoadoutMenuWidget : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData_N11S[0x8];                                     // 0x0278(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameEventLoadoutMenuWidget"));
		return ptr;
	}



	void SetGameEvent(class AGameEventBase* gameEvent);
	class AGameEventBase* GetGameEvent();
	void CreateLoadout(class UClass* primary, class UClass* secondary, class UClass* tertiary, TArray<class UClass*> outfit, TArray<class UClass*> support, class UPrisonerLoadout* loadout);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameEventPanelWidget
// 0x0008 (FullSize[0x0280] - InheritedSize[0x0278])
class UGameEventPanelWidget : public UDesignableUserWidget
{
public:
	class AGameEventManager*                           _GEManager;                                                // 0x0278(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameEventPanelWidget"));
		return ptr;
	}



	void UpdateLists();
	void OnUpdate();
	void OnOpened();
	void OnClosed();
	class AGameEventManager* GetGameEventManager();
	void EmptyLists();
	class UGameEventPanelWidget* Create(class AGameEventManager* GEManager);
	void AddEndedEvent(class AGameEventBase* gameEvent);
	void AddCurrentEvent(class AGameEventBase* gameEvent);
	void AddAnnouncedEvent(class AGameEventBase* gameEvent);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameEventParticipantInfoCardWidget
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
class UGameEventParticipantInfoCardWidget : public UDesignableUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameEventParticipantInfoCardWidget"));
		return ptr;
	}



	void UpdateStats(class APrisoner* Prisoner);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameEventParticipantStatsWidget
// 0x0020 (FullSize[0x0298] - InheritedSize[0x0278])
class UGameEventParticipantStatsWidget : public UDesignableUserWidget
{
public:
	class AGameEventBase*                              _gameEvent;                                                // 0x0278(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _index;                                                    // 0x0280(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TM2J[0x4];                                     // 0x0284(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UGameEventScoreboardWidget*                  _scoreboard;                                               // 0x0288(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _teamIndex;                                                // 0x0290(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BQIG[0x4];                                     // 0x0294(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameEventParticipantStatsWidget"));
		return ptr;
	}



	void UpdateStats();
	void UpdateColours();
	void SetTeamIndex(int Index);
	void SetColours(const struct FGameEventTeamColours& colours);
	bool IsValid();
	int GetTeamIndex();
	class UGameEventScoreboardWidget* GetScoreboard();
	int GetIndex();
	class AGameEventBase* GetGameEvent();
	void FillLabels();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameEventRoundInfoWidget
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
class UGameEventRoundInfoWidget : public UDesignableUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameEventRoundInfoWidget"));
		return ptr;
	}



	void SetGameEvent(class AGameEventBase* gameEvent);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameEventScoreboardWidget
// 0x0038 (FullSize[0x02B0] - InheritedSize[0x0278])
class UGameEventScoreboardWidget : public UDesignableUserWidget
{
public:
	class UClass*                                      RoundInfoWidgetClass;                                      // 0x0278(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      TeamHeaderWidgetClass;                                     // 0x0280(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      StatWidgetClass;                                           // 0x0288(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UGameEventParticipantStatsWidget*>    StatWidgets;                                               // 0x0290(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class AGameEventBase*                              _gameEvent;                                                // 0x02A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                _selected;                                                 // 0x02A8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TDCP[0x4];                                     // 0x02AC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameEventScoreboardWidget"));
		return ptr;
	}



	void SetSelectedIndex(int Index);
	void OnUpdate();
	void InitializeScoreboard();
	int GetSelectedIndex();
	class UGameEventScoreboardWidget* CreateMini(class AGameEventBase* gameEvent, class UClass* statClass, class UClass* teamHeaderClass);
	class UGameEventScoreboardWidget* Create(class AGameEventBase* gameEvent, class UClass* roundInfoClass, class UClass* teamHeaderClass, class UClass* statClass);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameEventTeamHeaderWidget
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
class UGameEventTeamHeaderWidget : public UDesignableUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameEventTeamHeaderWidget"));
		return ptr;
	}



	void SetGameEvent(class AGameEventBase* gameEvent);
	void ClearWinCounters();
	void AddWinCounter();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameEventTransport
// 0x0088 (FullSize[0x02A8] - InheritedSize[0x0220])
class AGameEventTransport : public AActor
{
public:
	class USphereComponent*                            Sphere;                                                    // 0x0220(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        PodMesh;                                                   // 0x0228(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        TargetMesh;                                                // 0x0230(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TravelSpeed;                                               // 0x0238(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TravelHeight;                                              // 0x023C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HoverHeight;                                               // 0x0240(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LargerRadius;                                              // 0x0244(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SmallerRadius;                                             // 0x0248(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EGameEventTransportState                      _state;                                                    // 0x024C(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UVSI[0x3];                                     // 0x024D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     _lastPosition;                                             // 0x0250(0x000C) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _targetPosition;                                           // 0x025C(0x000C) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _blend;                                                    // 0x0268(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HD83[0x3C];                                    // 0x026C(0x003C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameEventTransport"));
		return ptr;
	}



	void TravelToDestination(const struct FVector& Destination);
	void SkipToDestination();
	void ReserveForPrisoner(class APrisoner* Prisoner);
	void OnRep_TargetPosition();
	void OnRep_LastPosition();
	void OnOrderComplete();
	void LiftOff();
	void LeaveIsland();
	void LandAtLocation(const struct FVector& Destination);
	bool IsInteractable();
	class APrisoner* GetReservedParticipant();
	void CancelOrder();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameResourceContainer
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UGameResourceContainer : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameResourceContainer"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameResourceContainerProxyForReplenishableResourceRegistry
// 0x0050 (FullSize[0x0100] - InheritedSize[0x00B0])
class UGameResourceContainerProxyForReplenishableResourceRegistry : public UActorComponent
{
public:
	unsigned char                                      UnknownData_L1OD[0x50];                                    // 0x00B0(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameResourceContainerProxyForReplenishableResourceRegistry"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameResourceContainerProxyForReplenishableResource
// 0x0090 (FullSize[0x00B8] - InheritedSize[0x0028])
class UGameResourceContainerProxyForReplenishableResource : public UObject
{
public:
	unsigned char                                      UnknownData_HA7D[0x90];                                    // 0x0028(0x0090) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameResourceContainerProxyForReplenishableResource"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameResourceItemTag
// 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
class UGameResourceItemTag : public UBaseItemTag
{
public:
	class UClass*                                      ResourceType;                                              // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       SocketTypes;                                               // 0x0038(0x0020) (Edit, NativeAccessSpecifierPublic)
	float                                              ResourceAmountPerUse;                                      // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_09O8[0x4];                                     // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UBaseItemTag*>                        RequiredItemTagsForFueling;                                // 0x0060(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameResourceItemTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameResourceType
// 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
class UGameResourceType : public UObject
{
public:
	struct FString                                     ResourceName;                                              // 0x0028(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     ConfigSectionName;                                         // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsDrinkable;                                               // 0x0048(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanWashWith;                                               // 0x0049(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DPON[0x6];                                     // 0x004A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameResourceType"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameResourceType_Alcohol
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class UGameResourceType_Alcohol : public UGameResourceType
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameResourceType_Alcohol"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameResourceType_Liquid
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class UGameResourceType_Liquid : public UGameResourceType
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameResourceType_Liquid"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameResourceType_Water
// 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
class UGameResourceType_Water : public UGameResourceType_Liquid
{
public:
	float                                              salinity;                                                  // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PO4J[0x4];                                     // 0x0054(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameResourceType_Water"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameResourceType_SoftDrink
// 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
class UGameResourceType_SoftDrink : public UGameResourceType_Water
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameResourceType_SoftDrink"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GasMaskTag
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UGasMaskTag : public UBaseItemTag
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GasMaskTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GasPoisoning
// 0x0008 (FullSize[0x01B8] - InheritedSize[0x01B0])
class UGasPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData_JW34[0x8];                                     // 0x01B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GasPoisoning"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GhostTrailComponent
// 0x0000 (FullSize[0x00B0] - InheritedSize[0x00B0])
class UGhostTrailComponent : public UActorComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GhostTrailComponent"));
		return ptr;
	}



	void SetTrailActive(bool Active);
	bool GetTrailActive();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Gib
// 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
class AGib : public AActor
{
public:
	class UStaticMeshComponent*                        MeshComponent;                                             // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShrinkFactor;                                              // 0x0228(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ImpulseMultiplier;                                         // 0x022C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Gib"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GlobalAnimalSpawner
// 0x00D0 (FullSize[0x02F0] - InheritedSize[0x0220])
class AGlobalAnimalSpawner : public AActor
{
public:
	TMap<class UClass*, struct FGlobalAnimalSpawnInfo> SpawnInfo;                                                 // 0x0220(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<TEnumAsByte<PhysicsCore_EPhysicalSurface>>  AllowedSurfaces;                                           // 0x0270(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class AAnimalSpawner2*>                     AnimalSpawners;                                            // 0x0280(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, NativeAccessSpecifierPublic)
	class UBillboardComponent*                         Sprite;                                                    // 0x0290(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7BMZ[0x58];                                    // 0x0298(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GlobalAnimalSpawner"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GlobalBirdSpawner2
// 0x00D8 (FullSize[0x02F8] - InheritedSize[0x0220])
class AGlobalBirdSpawner2 : public AActor
{
public:
	int                                                MaxSpawnInstances;                                         // 0x0220(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxCoastalBirdSpawnPerPlayer;                              // 0x0224(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxContinentalBirdSpawnPerPlayer;                          // 0x0228(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VPXI[0x4];                                     // 0x022C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              CoastalBirds;                                              // 0x0230(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              ContinentalBirds;                                          // 0x0240(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                              FlyingBirdSpawnAwayDistanceMin;                            // 0x0250(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FlyingBirdSpawnAwayDistanceMax;                            // 0x0254(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GroundBirdSpawnAwayDistanceMin;                            // 0x0258(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GroundBirdSpawnAwayDistanceMax;                            // 0x025C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinSpawnInfrontDistance;                                   // 0x0260(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                BirdSpawnerMask;                                           // 0x0264(0x0008) (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     MapTopLeft;                                                // 0x026C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     MapBottomRight;                                            // 0x0278(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                BulkSpawn;                                                 // 0x0284(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TEnumAsByte<PhysicsCore_EPhysicalSurface>>  AllowedSurfaces;                                           // 0x0288(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UBillboardComponent*                         Sprite;                                                    // 0x0298(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DPXA[0x8];                                     // 0x02A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class ABird2*>                              _birds;                                                    // 0x02A8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FXAX[0x40];                                    // 0x02B8(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GlobalBirdSpawner2"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GlobalItemSpawner
// 0x0140 (FullSize[0x0168] - InheritedSize[0x0028])
class UGlobalItemSpawner : public UObject
{
public:
	unsigned char                                      UnknownData_QM2P[0x80];                                    // 0x0028(0x0080) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SpawnProbabilityMultiplier;                                // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RespawnInterval;                                           // 0x00AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RespawnDistanceSquared;                                    // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RespawnBatch;                                              // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RarityValues[0x6];                                         // 0x00B8(0x0018) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IYUZ[0x8];                                     // 0x00D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _itemClasses[0x10];                                        // 0x00D0(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      UnknownData_WOPG[0x10];                                    // 0x00E8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AItemSpawnerVolume*>                  _spawnerVolumes;                                           // 0x00F8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2XCQ[0x60];                                    // 0x0108(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GlobalItemSpawner"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GlobalUIData
// 0x0058 (FullSize[0x0080] - InheritedSize[0x0028])
class UGlobalUIData : public UObject
{
public:
	class UClass*                                      DefaultModularTooltipClass;                                // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UClass*, class UClass*>                 ModularTooltipElementClassMapping;                         // 0x0030(0x0050) (Edit, UObjectWrapper, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GlobalUIData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GloveStatsTag
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UGloveStatsTag : public UBaseItemTag
{
public:
	float                                              ElectricalDamageModifier;                                  // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LockpkickingPressureModifier;                              // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GloveStatsTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Graph2DWidget
// 0x00E8 (FullSize[0x01F0] - InheritedSize[0x0108])
class UGraph2DWidget : public UWidget
{
public:
	struct FSlateBrush                                 Brush;                                                     // 0x0108(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FScriptDelegate                             BrushDelegate;                                             // 0x0190(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	struct FLinearColor                                ColorAndOpacity;                                           // 0x01A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptDelegate                             ColorAndOpacityDelegate;                                   // 0x01B0(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	float                                              GraphLineThickness;                                        // 0x01C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   GraphSize;                                                 // 0x01C4(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               InitializeGraphWithDefaultValue;                           // 0x01CC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5UO2[0x3];                                     // 0x01CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SampleMax;                                                 // 0x01D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultSampleValue;                                        // 0x01D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseLineAntialiasing;                                       // 0x01D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_65Z9[0x17];                                    // 0x01D9(0x0017) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Graph2DWidget"));
		return ptr;
	}



	void AppendSamples(TArray<float> Values);
	void AppendSample(float Value);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GrenadeAnimInstance
// 0x0018 (FullSize[0x02D0] - InheritedSize[0x02B8])
class UGrenadeAnimInstance : public UAnimInstance
{
public:
	unsigned char                                      UnknownData_YG02[0x8];                                     // 0x02B8(0x0008) Fix Super Size
	ConZ_EPrisonerStance                               _owningPrisonerStance;                                     // 0x02C0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isOwningPrisonerInFirstPersonView;                        // 0x02C1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isPinPulled;                                              // 0x02C2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UEKR[0xD];                                     // 0x02C3(0x000D) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GrenadeAnimInstance"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HandgunSkill
// 0x0000 (FullSize[0x00E0] - InheritedSize[0x00E0])
class UHandgunSkill : public URangedWeaponsSkill
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HandgunSkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HandheldLightItem
// 0x0028 (FullSize[0x0780] - InheritedSize[0x0758])
class AHandheldLightItem : public AItem
{
public:
	int                                                _currentLightAngleIndex;                                   // 0x0758(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_O5L2[0x4];                                     // 0x075C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<float>                                      _possibleLightAngles;                                      // 0x0760(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UBasicGameResourceContainerComponent*        _resourceContainerComponent;                               // 0x0770(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _currentLightIntensity;                                    // 0x0778(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canChangeLightIntensity;                                  // 0x077C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_R1GJ[0x3];                                     // 0x077D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HandheldLightItem"));
		return ptr;
	}



	void OnRep_CurrentLightLightIntensity();
	void OnRep_CurrentLightAngleIndex();
	void OnComponentDeactivated(class UActorComponent* Component);
	void OnComponentActivated(class UActorComponent* Component, bool wasReset);
	float GetCurrentLightAngle();
	void BP_TurnOn();
	void BP_TurnOff();
	void BP_OnCurrentLightIntensityChanged(float NewValue);
	void BP_OnCurrentLightAngleChanged(float NewValue);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HandheldLightItemAnimInstance
// 0x0008 (FullSize[0x02C0] - InheritedSize[0x02B8])
class UHandheldLightItemAnimInstance : public UAnimInstance
{
public:
	unsigned char                                      UnknownData_P41T[0x8];                                     // 0x02B8(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HandheldLightItemAnimInstance"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HandheldSkeletalMeshLightItem
// 0x0008 (FullSize[0x0788] - InheritedSize[0x0780])
class AHandheldSkeletalMeshLightItem : public AHandheldLightItem
{
public:
	class USkeletalMeshComponent*                      SkeletalMesh;                                              // 0x0780(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HandheldSkeletalMeshLightItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HandPanel3
// 0x0018 (FullSize[0x0290] - InheritedSize[0x0278])
class UHandPanel3 : public UDesignableUserWidget
{
public:
	class UHandsHolstersWidget2*                       _handInventory;                                            // 0x0278(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHandsHolstersWidget2*                       _holsterInventory0;                                        // 0x0280(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHandsHolstersWidget2*                       _holsterInventory1;                                        // 0x0288(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HandPanel3"));
		return ptr;
	}



	class UQuickAccessItemSwitcher3* GetQuickAccessAt(int Index);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryContainerWidget2
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
class UInventoryContainerWidget2 : public UDesignableUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryContainerWidget2"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HandsHolstersWidget2
// 0x0070 (FullSize[0x02E8] - InheritedSize[0x0278])
class UHandsHolstersWidget2 : public UInventoryContainerWidget2
{
public:
	class UInventoryContainer2D*                       _container;                                                // 0x0278(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryContainerHandsHolsters*            _handsHolstersContainer;                                   // 0x0280(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _nameText;                                                 // 0x0288(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventorySlotUserWidget*                    _itemSlotWidget;                                           // 0x0290(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UItemWidget2*                                _itemWidget;                                               // 0x0298(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _inventoryGrid;                                            // 0x02A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventorySlotUserWidget*                    _attachmentSlotWidget;                                     // 0x02A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UInventorySlotUserWidget*>            _slotsWidgets;                                             // 0x02B0(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UItemWidget2*>                        _attachmentWidgets;                                        // 0x02C0(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	ConZ_EHandsHolstersType                            _type;                                                     // 0x02D0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_P8YO[0x7];                                     // 0x02D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TScriptInterface<class UInventoryNode>             _item;                                                     // 0x02D8(0x0010) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HandsHolstersWidget2"));
		return ptr;
	}



	void OnAttachmentRemoved(class AWeapon* Weapon, class AWeaponAttachment* attachment);
	void OnAttachmentDestroyed(class AActor* attachment);
	void OnAttachmentAdded(class AWeapon* Weapon, class AWeaponAttachment* attachment);
	void InitBlueprint(const TScriptInterface<class UInventoryNode>& Item);
	void Init(const TScriptInterface<class UInventoryNode>& Item, const TScriptInterface<class UInventoryContainer>& container);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HasCustomRadialDamageHandler
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UHasCustomRadialDamageHandler : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HasCustomRadialDamageHandler"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HasLadderMarkersInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UHasLadderMarkersInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HasLadderMarkersInterface"));
		return ptr;
	}



	void GetLadderMarkers(TArray<struct FLadderMarker>* Result);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HasOwningUser
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UHasOwningUser : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HasOwningUser"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HasProcessViewRotation
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UHasProcessViewRotation : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HasProcessViewRotation"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HasWindowMarkersInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UHasWindowMarkersInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HasWindowMarkersInterface"));
		return ptr;
	}



	void GetWindowMarkers(TArray<struct FWindowMarker>* Result);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HealingItem
// 0x0058 (FullSize[0x0080] - InheritedSize[0x0028])
class UHealingItem : public UObject
{
public:
	unsigned char                                      UnknownData_YM5U[0x58];                                    // 0x0028(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HealingItem"));
		return ptr;
	}



	float GetQuantity();
	int GetID();
	struct FString GetCaption();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HealthWidget
// 0x0000 (FullSize[0x0310] - InheritedSize[0x0310])
class UHealthWidget : public UWaypointWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HealthWidget"));
		return ptr;
	}



	void SetMaxHealthPercentage(float Value);
	void SetHealthPercentage(float Value);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HeartAttack
// 0x0048 (FullSize[0x01F8] - InheritedSize[0x01B0])
class UHeartAttack : public UDisease
{
public:
	unsigned char                                      UnknownData_8IL7[0x48];                                    // 0x01B0(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HeartAttack"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HeartbeatWidget
// 0x00D8 (FullSize[0x01E0] - InheritedSize[0x0108])
class UHeartbeatWidget : public UWidget
{
public:
	struct FSlateBrush                                 Brush;                                                     // 0x0108(0x0088) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FScriptDelegate                             BrushDelegate;                                             // 0x0190(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	struct FLinearColor                                ColorAndOpacity;                                           // 0x01A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptDelegate                             ColorAndOpacityDelegate;                                   // 0x01B0(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	float                                              Thickness;                                                 // 0x01C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Periods;                                                   // 0x01C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q2G5[0x10];                                    // 0x01C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrisonerLifeComponent*                      _prisonerLifeComponent;                                    // 0x01D8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HeartbeatWidget"));
		return ptr;
	}



	void SetPrisonerLifeComponent(class UPrisonerLifeComponent* Value);
	class UPrisonerLifeComponent* GetPrisonerLifeComponent();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HeatSourceManager
// 0x0070 (FullSize[0x0290] - InheritedSize[0x0220])
class AHeatSourceManager : public AActor
{
public:
	unsigned char                                      UnknownData_JOFH[0x70];                                    // 0x0220(0x0070) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HeatSourceManager"));
		return ptr;
	}



	void SetSourceParameters(const struct FDbIntegerId& ID, const struct FHeatSourceParameters& parameters);
	void SetSourceLocation(const struct FDbIntegerId& ID, const struct FVector& Location);
	void SetFuelDuration(const struct FDbIntegerId& ID, float Amount);
	void SetFuelCapacity(const struct FDbIntegerId& ID, float Amount);
	bool IsSourceValid(const struct FDbIntegerId& ID);
	bool GetSourceParameters(const struct FDbIntegerId& ID, struct FHeatSourceParameters* parameters);
	struct FVector GetSourceLocation(const struct FDbIntegerId& ID);
	float GetHeatTemperature(const struct FVector& Location);
	float GetFuelDuration(const struct FDbIntegerId& ID);
	float GetFuelCapacity(const struct FDbIntegerId& ID);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HeatstrokeDisease
// 0x0020 (FullSize[0x01D0] - InheritedSize[0x01B0])
class UHeatstrokeDisease : public UDisease
{
public:
	unsigned char                                      UnknownData_AQE2[0x20];                                    // 0x01B0(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HeatstrokeDisease"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HemlockPoisoning
// 0x0010 (FullSize[0x01C0] - InheritedSize[0x01B0])
class UHemlockPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData_9I4P[0x10];                                    // 0x01B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HemlockPoisoning"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HepatitisADisease
// 0x0008 (FullSize[0x01B8] - InheritedSize[0x01B0])
class UHepatitisADisease : public UDisease
{
public:
	unsigned char                                      UnknownData_G9E4[0x8];                                     // 0x01B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HepatitisADisease"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Highlightable
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UHighlightable : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Highlightable"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HitReactComponent
// 0x0120 (FullSize[0x01D0] - InheritedSize[0x00B0])
class UHitReactComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_XW0D[0x18];                                    // 0x00B0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UHitReactMapping*>                    HitReactMappings;                                          // 0x00C8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FPhysicalHitReactData                       PhysicalHitReactData;                                      // 0x00D8(0x0018) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FName                                       RagdollConstraintProfileName;                              // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollRestThresholdSingleBodyMax;                         // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollRestThresholdAverageBodyMax;                        // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_55JZ[0x28];                                    // 0x0100(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       _pelvisBoneName;                                           // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _rootBoneName;                                             // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _getUpFromFaceMontage;                                     // 0x0138(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _getUpFromBackMontage;                                     // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EZ58[0x72];                                    // 0x0148(0x0072) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ConZ_ERagdollTransitionState                       _ragdollTransitionState;                                   // 0x01BA(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9FKR[0x1];                                     // 0x01BB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     _serverRagollLocation;                                     // 0x01BC(0x000C) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IFK9[0x8];                                     // 0x01C8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HitReactComponent"));
		return ptr;
	}



	void RecoverFromRagdollImmediately();
	void RecoverFromRagdoll();
	void OnRep_ServerRagdollLocation();
	void OnRep_RagdollTransitionState();
	void OnMontageBlendingOut(class UAnimMontage* Montage, bool interrupted);
	void MoveRagdollMesh(class UPrimitiveComponent* MeshComponent, const struct FVector& currentLocation, const struct FVector& TargetLocation);
	bool IsRagdollAtRest();
	bool IsPlayingGetUpMontage();
	bool IsInRagdoll();
	bool IsCapsuleOverlapped();
	bool IsBlendingRagdoll();
	void GoToRagdoll();
	struct FName GetPelvisBoneName();
	bool CanRecoverFromRagdoll();
	void ApplyPhysicalAnimationData(const struct FPhysicalAnimationDesc& desc);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HitReactMapping
// 0x03B0 (FullSize[0x03E0] - InheritedSize[0x0030])
class UHitReactMapping : public UDataAsset
{
public:
	struct FGameplayTagContainer                       HitReactTypes;                                             // 0x0030(0x0020) (Edit, NativeAccessSpecifierPublic)
	float                                              RegainControlMultiplier;                                   // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DF5E[0x4];                                     // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FHitReactMagnitudeData                      HeadHit;                                                   // 0x0058(0x0120) (Edit, NativeAccessSpecifierPublic)
	struct FHitReactMagnitudeData                      BodyHit;                                                   // 0x0178(0x0120) (Edit, NativeAccessSpecifierPublic)
	struct FHitReactMagnitudeData                      LegsHit;                                                   // 0x0298(0x0120) (Edit, NativeAccessSpecifierPublic)
	struct FHitReactLandingData                        LandingHit;                                                // 0x03B8(0x0028) (Edit, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HitReactMapping"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HookwormsDisease
// 0x0008 (FullSize[0x01B8] - InheritedSize[0x01B0])
class UHookwormsDisease : public UDisease
{
public:
	unsigned char                                      UnknownData_10V4[0x8];                                     // 0x01B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HookwormsDisease"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HoverPanelWidget
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
class UHoverPanelWidget : public UDesignableUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HoverPanelWidget"));
		return ptr;
	}



	void SetWorldPosition(const struct FVector& position);
	void SetScreenPosition(const struct FVector2D& position);
	class UVerticalBox* GetContentBox();
	void ClearPanel();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HoverWidget
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
class UHoverWidget : public UDesignableUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HoverWidget"));
		return ptr;
	}



	void InitFromItem(class AItem* Item);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HUD_John
// 0x0050 (FullSize[0x0360] - InheritedSize[0x0310])
class AHUD_John : public AHUD
{
public:
	unsigned char                                      UnknownData_A69R[0x8];                                     // 0x0310(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFont*                                       NormalFont;                                                // 0x0318(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WXA8[0x40];                                    // 0x0320(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HUD_John"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HUDNotification
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UHUDNotification : public UConZNotification
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HUDNotification"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HUDNotificationDescription
// 0x0018 (FullSize[0x0058] - InheritedSize[0x0040])
class UHUDNotificationDescription : public UNotificationDescription
{
public:
	struct FString                                     Message;                                                   // 0x0040(0x0010) (ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               beep;                                                      // 0x0050(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SYM2[0x7];                                     // 0x0051(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HUDNotificationDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HudWidget
// 0x0088 (FullSize[0x0300] - InheritedSize[0x0278])
class UHudWidget : public UDesignableUserWidget
{
public:
	class UQuickAccessBarWidget*                       _quickAccessBar;                                           // 0x0278(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UThrowingQuickAccessItemWidget*              _throwingAccess;                                           // 0x0280(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UQuickAccessItemWidget*                      _handQuickAccessItemWidget;                                // 0x0288(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVicinityPanel3*                             _vicinityPanel;                                            // 0x0290(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVicinityContainer3*                         _vicinityContainer;                                        // 0x0298(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3OBU[0x18];                                    // 0x02A0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UObjectivesContainerWidget*                  _objectivesContainer;                                      // 0x02B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMissionResult*                              _missionResultWidget;                                      // 0x02C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDialogueContainerWidget*                    _dialogueContainerWidget;                                  // 0x02C8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UJournalPanelWidget*                         _journalPanelWidget;                                       // 0x02D0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USquadPanelWidget*                           _squadPanelWidget;                                         // 0x02D8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHandPanel3*                                 _handPanel;                                                // 0x02E0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScreenSpaceHealthWidget*                    _screenSpaceHealthWidget;                                  // 0x02E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UResourceIndicatorWidget*                    _nightVisionGogglesBatteryWidget;                          // 0x02F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UShotsFiredTrackerWidget*                    _shotsFiredTrackerWidget;                                  // 0x02F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HudWidget"));
		return ptr;
	}



	void UpdateUpdateableNotification(const struct FString& notificationName, const struct FString& Message);
	void UpdateAttributesHistory();
	void ToggleMonitorsVisibility();
	void SwitchTabMode(int Index);
	void StartUpdateableNotification(const struct FString& notificationName, const struct FString& Message, float Duration, bool ping);
	void ShowWarningMessage(const struct FString& Message, float Duration, const struct FLinearColor& TextColor);
	void ShowTrapsDetectedNotification();
	void ShowNotification(const struct FString& Message, float Duration, bool ping);
	void ShowLevelUpNotification(class USkill* Skill, ConZ_ESkillLevel skillLevel);
	void ShowKillFeedNotification(const struct FText& prefix, const struct FText& characterName, const struct FText& suffix, bool ping);
	bool ShouldSerializeWidgetLayout(class UWidget* Widget);
	void SetTabEnabled(ConZ_ETabMode Tab, bool Value);
	void SetPrisoner(class APrisoner* Prisoner);
	void SetMainCanvasVisibility(bool visible);
	bool SaveLayout();
	void ResetLayout();
	void RemoveTeammateName(const struct FString& Name);
	void OpenChat();
	void OnPrisonerChanged();
	bool LoadLayout();
	bool IsChatOpen();
	class UVicinityPanel3* GetVicinityPanel();
	class UPanelWidget* GetTopLevelPanelWidget();
	class UTabModeSwitcherWidget* GetTabModeSwitcherWidget();
	class USquadPanelWidget* GetSquadPanelWidget();
	class UScreenSpaceHealthWidget* GetScreenSpaceHealthWidget();
	class UPrisonerLifeIndicatorsSprite* GetPrisonerLifeIndicatorsSprite();
	class APrisoner* GetPrisoner();
	class UObjectivesContainerWidget* GetObjectivesContainer();
	class UMissionResult* GetMissionResultWidget();
	bool GetMainCanvasVisibility();
	class UJournalPanelWidget* GetJournalPanelWidget();
	class UInventoryPanelThirdIteration* GetInventoryPanel();
	class UHandPanel3* GetHandPanel();
	class UDialogueContainerWidget* GetDialogueContainerWidget();
	class UCraftingPanelWidget* GetCraftingPanel();
	class UCompassWidget* GetCompassWidget();
	class UChatWidget* GetChatWidget();
	class UBreathingBarLungsWidget* GetBreathingBarLungsWidget();
	class UUserWidget* GetBCURightPanel();
	class UUserWidget* GetBCULeftPanel();
	bool DumpStringToFile(const struct FString& stringToDump);
	void CloseChat();
	void ClearTeammateNames();
	void ClearNotifications();
	void ChangeChatType(ConZ_EChatType chatType);
	void CancelUpdateableNotification(const struct FString& notificationName);
	void AddWarning(ConZ_EWarningType warningType, bool playSounds);
	void AddTeammateName(const struct FString& Name);
	void AddMessageToScreen(const struct FText& Text, bool beep, const struct FLinearColor& Color);
	void AddChatLine(const struct FString& string, ConZ_EChatType chatType);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HyperthermiaDisease
// 0x0000 (FullSize[0x01B0] - InheritedSize[0x01B0])
class UHyperthermiaDisease : public UDisease
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HyperthermiaDisease"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HypothermiaDisease
// 0x0010 (FullSize[0x01C0] - InheritedSize[0x01B0])
class UHypothermiaDisease : public UDisease
{
public:
	unsigned char                                      UnknownData_NNB9[0x10];                                    // 0x01B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HypothermiaDisease"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InocybePatouillardiiPoisoning
// 0x0008 (FullSize[0x01B8] - InheritedSize[0x01B0])
class UInocybePatouillardiiPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData_POOV[0x8];                                     // 0x01B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InocybePatouillardiiPoisoning"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InsertCartridge
// 0x0010 (FullSize[0x00A0] - InheritedSize[0x0090])
class UInsertCartridge : public UWeaponActionReloadSequence
{
public:
	struct FName                                       MontageEndSectionName;                                     // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_O2RP[0x8];                                     // 0x0098(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InsertCartridge"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InsertCartridgeIntoMagazine
// 0x0010 (FullSize[0x00A0] - InheritedSize[0x0090])
class UInsertCartridgeIntoMagazine : public UWeaponActionReloadSequence
{
public:
	struct FName                                       MontageEndSectionName;                                     // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CBBY[0x8];                                     // 0x0098(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InsertCartridgeIntoMagazine"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InsertMagazine
// 0x0000 (FullSize[0x0090] - InheritedSize[0x0090])
class UInsertMagazine : public UWeaponActionReloadSequence
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InsertMagazine"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InsertMagazineInsertCartridge
// 0x0010 (FullSize[0x00A0] - InheritedSize[0x0090])
class UInsertMagazineInsertCartridge : public UWeaponActionReloadSequence
{
public:
	struct FName                                       MontageEndSectionName;                                     // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_79HQ[0x8];                                     // 0x0098(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InsertMagazineInsertCartridge"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InspectedItemWidget
// 0x0018 (FullSize[0x0290] - InheritedSize[0x0278])
class UInspectedItemWidget : public UDesignableUserWidget
{
public:
	class UItemClassWidget*                            ItemWidget;                                                // 0x0278(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                                  SkillText;                                                 // 0x0280(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                                  SkillLevelText;                                            // 0x0288(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InspectedItemWidget"));
		return ptr;
	}



	void SetIsToolForSomething(bool IsTool);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InstancedStaticMeshActor
// 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
class AInstancedStaticMeshActor : public AActor
{
public:
	class UStaticMeshComponent*                        MeshComponent;                                             // 0x0220(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InstancedStaticMeshActor"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InstrumentItem
// 0x01F8 (FullSize[0x0950] - InheritedSize[0x0758])
class AInstrumentItem : public AItem
{
public:
	unsigned char                                      UnknownData_TGYQ[0xC];                                     // 0x0758(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _numberOfOctaves;                                          // 0x0764(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _playInstrumentStartMontageFP;                             // 0x0768(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _playInstrumentStartMontageTP;                             // 0x0770(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _playInstrumentStopMontageFP;                              // 0x0778(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _playInstrumentStopMontageTP;                              // 0x0780(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _playInstrumentIdleAnimationFP;                            // 0x0788(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _playInstrumentPlayingAnimationFP;                         // 0x0790(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _playInstrumentIdleAnimationTP;                            // 0x0798(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _playInstrumentPlayingAnimationTP;                         // 0x07A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _playingPoseHoldTime;                                      // 0x07A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5GKD[0x4];                                     // 0x07AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UAkAudioEvent*>                       _noteCStart;                                               // 0x07B0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteCStop;                                                // 0x07C0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteDStart;                                               // 0x07D0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteDStop;                                                // 0x07E0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteDbStart;                                              // 0x07F0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteDbStop;                                               // 0x0800(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteEStart;                                               // 0x0810(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteEStop;                                                // 0x0820(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteEbStart;                                              // 0x0830(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteEbStop;                                               // 0x0840(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteFStart;                                               // 0x0850(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteFStop;                                                // 0x0860(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteGStart;                                               // 0x0870(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteGStop;                                                // 0x0880(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteGbStart;                                              // 0x0890(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteGbStop;                                               // 0x08A0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteAStart;                                               // 0x08B0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteAStop;                                                // 0x08C0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteAbStart;                                              // 0x08D0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteAbStop;                                               // 0x08E0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteBStart;                                               // 0x08F0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteBStop;                                                // 0x0900(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteBbStart;                                              // 0x0910(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteBbStop;                                               // 0x0920(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteC2Start;                                              // 0x0930(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _noteC2Stop;                                               // 0x0940(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InstrumentItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InteractableInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UInteractableInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InteractableInterface"));
		return ptr;
	}



	void OnHovered(class APrisoner* Prisoner);
	bool IsAbleToInteractWithItem(class AItem* Item);
	void InteractWithItem(class APlayerController* PlayerController, class AItem* Item, ConZ_EInteractionType interactionType, const struct FInteractionData& InteractionData);
	void Interact(class APrisoner* User, ConZ_EInteractionType interactionType, const struct FInteractionData& InteractionData);
	ConZ_EInteractionState GetStateForInteractionWithItem(class AItem* Item);
	TArray<struct FInteractionStruct> GetInteractionsWithItem(class UObject* User, class AItem* Item);
	TArray<struct FInteractionStruct> GetInteractions(class UObject* User, class UObject* creator, const struct FInteractionQueryParameters& Params);
	struct FText GetInteractionHint(class UObject* User);
	struct FInteractionStruct GetDefaultInteractionForPrisoner(class APrisoner* Prisoner, const struct FInteractionQueryParameters& Params);
	struct FInteractionStruct GetDefaultInteractionForDrone(class ADrone* Drone, const struct FInteractionQueryParameters& Params);
	bool CanInteract(class APrisoner* User);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InteractionComponent
// 0x0178 (FullSize[0x0228] - InheritedSize[0x00B0])
class UInteractionComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_FPP2[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ExamineChanceMultiplier;                                   // 0x00B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExamineActionDuration;                                     // 0x00BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExamineReplicationDelay;                                   // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PickupItemActionDuration;                                  // 0x00C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PickupItemReplicationDelay;                                // 0x00C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StoreItemActionDuration;                                   // 0x00CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TickFrequency;                                             // 0x00D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinLandscapeInteractionDistanceSquared;                    // 0x00D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SavedGroundSearchLocationsCount;                           // 0x00D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5CO7[0x1C];                                    // 0x00DC(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UInteractionAction*>                  _actions;                                                  // 0x00F8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JOKI[0xB8];                                    // 0x0108(0x00B8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSpawnedItems                               _replicatedExamineSpawnedItems;                            // 0x01C0(0x0018) (Net, RepNotify, NativeAccessSpecifierPrivate)
	struct FSpawnedItems                               _replicatedPickupSpawnedItem;                              // 0x01D8(0x0018) (Net, RepNotify, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7V6C[0x2C];                                    // 0x01F0(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _drinkAllowedThreshold;                                    // 0x021C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _reexamineFrequency;                                       // 0x0220(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CO6G[0x4];                                     // 0x0224(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InteractionComponent"));
		return ptr;
	}



	void UseItemOnServer(class AItem* Item, int usage, float usageWeight, bool Eat);
	void UpdateItemDataOnServer(class AItem* Item);
	void UpdateExistenceOnClient(bool exists);
	void UnspawnExaminedItemsOnServer(bool destroyItems);
	void UnexamineItemOnServer(class AItem* Item);
	void UnexamineItemOnClient(class AItem* Item);
	void UncraftItemOnServer(class AItem* Item);
	void StoreItemsOnServer(class UMeshComponent* MeshComponent, const struct FMeshInstanceId& InstanceId, const struct FVector& instanceLocation, TArray<class AItem*> storeItems);
	void StopExamining();
	void Server_UpdateLockHPOnServer(class UObject* Lockpickable, float LockHP);
	void Server_RemoveLockOnServer(class UObject* Lockpickable);
	void PickupItemOnServer(class UMeshComponent* MeshComponent, const struct FMeshInstanceId& InstanceId, class UStaticMesh* StaticMesh, const struct FVector& pickupLocation, ConZ_EPickupItemOperation Operation);
	void PickupItemOnClients(class UMeshComponent* MeshComponent, const struct FMeshInstanceId& InstanceId, class UStaticMesh* StaticMesh, const struct FVector& pickupLocation);
	void OpenItemOnServer(class AFoodItem* FoodItem, class AItem* openingItem);
	void OnRep_PickupSpawnedItem();
	void OnRep_ExamineSpawnedItems();
	void NetMulticast_UpdateLockHPOnClients(class UObject* Lockpickable, float LockHP);
	void InteractWithBaseElement(ConZ_EInteractionType interactionType, const struct FConZBaseInteractionData& baseData, const struct FConZBaseElementInteractionData& elementData);
	void FinishPickupItemOnServer();
	void FinishExaminePrisonerOnServer(class APrisoner* Prisoner);
	void FinishExamineObjectOnServer();
	void FillWaterOnServer(class AItem* Item, float Ratio, float salinity);
	void ExecuteInteractionOnServer(class AItem* interactionItem, ConZ_EInteractionType Interaction, const struct FServerCraftableItem& CraftableItem);
	void ExaminePrisonerOnServer(class APrisoner* Prisoner);
	void ExamineObjectOnServer(class UMeshComponent* MeshComponent, const struct FMeshInstanceId& InstanceId, const struct FVector& instanceLocation);
	void DestroyItemOnServer(class AItem* Item);
	void DestroyActorOnServer(class AActor* Actor);
	void CutObjectOnServer(class AActor* Actor, class UMeshComponent* MeshComponent, const struct FMeshInstanceId& InstanceId, const struct FVector& Location, bool collectOnly);
	void CutObjectOnClients(class UMeshComponent* MeshComponent, const struct FMeshInstanceId& InstanceId);
	void CraftItemOnServer(const struct FServerCraftableItem& CraftableItem);
	void Client_SendGroundSearchLocation(const struct FVector& Location);
	void ChopOnServer(class UObject* choppedObject);
	void CheckExistenceOnServer(class UMeshComponent* MeshComponent, const struct FMeshInstanceId& InstanceId);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InteractionContainerUserWidget
// 0x0048 (FullSize[0x02C0] - InheritedSize[0x0278])
class UInteractionContainerUserWidget : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData_HXYM[0x18];                                    // 0x0278(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UVerticalBox*                                _actionContainer;                                          // 0x0290(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6WC4[0xC];                                     // 0x0298(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AActor>                       _underlyingInteractableActor;                              // 0x02A4(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JMSW[0x14];                                    // 0x02AC(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InteractionContainerUserWidget"));
		return ptr;
	}



	void RemoveActiveInteractionWidget(class APlayerController* PlayerController);
	void InteractableDestroyed(class AActor* interactable);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InteractionGroupUserWidget
// 0x0020 (FullSize[0x0298] - InheritedSize[0x0278])
class UInteractionGroupUserWidget : public UDesignableUserWidget
{
public:
	class UTextBlock*                                  _groupText;                                                // 0x0278(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                     _groupBorder;                                              // 0x0280(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PZ35[0x10];                                    // 0x0288(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InteractionGroupUserWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InteractionObject
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UInteractionObject : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InteractionObject"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InteractionUserWidget
// 0x0070 (FullSize[0x02E8] - InheritedSize[0x0278])
class UInteractionUserWidget : public UDesignableUserWidget
{
public:
	class UTextBlock*                                  _actionText;                                               // 0x0278(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                                     _actionButton;                                             // 0x0280(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H8F3[0x60];                                    // 0x0288(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InteractionUserWidget"));
		return ptr;
	}



	void Interact();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InteriorCharacterSpawnerComponent
// 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
class UInteriorCharacterSpawnerComponent : public UCharacterSpawnerComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InteriorCharacterSpawnerComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InteriorStaticMeshComponent
// 0x0000 (FullSize[0x04D0] - InheritedSize[0x04D0])
class UInteriorStaticMeshComponent : public UStaticMeshComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InteriorStaticMeshComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.IntestinalCryptosporidiosisPoisoning
// 0x0008 (FullSize[0x01B8] - InheritedSize[0x01B0])
class UIntestinalCryptosporidiosisPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData_A3OL[0x8];                                     // 0x01B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.IntestinalCryptosporidiosisPoisoning"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryPositionData
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UInventoryPositionData : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryPositionData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryContainer
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UInventoryContainer : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryContainer"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventorySizeData
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UInventorySizeData : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventorySizeData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventorySizeData2D
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UInventorySizeData2D : public UInventorySizeData
{
public:
	int                                                SizeX;                                                     // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SizeY;                                                     // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                       Bitmask;                                                   // 0x0030(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventorySizeData2D"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryPositionData2D
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UInventoryPositionData2D : public UInventoryPositionData
{
public:
	int                                                PositionX;                                                 // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                PositionY;                                                 // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Rotation;                                                  // 0x0030(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsLoading;                                                 // 0x0031(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J44P[0x6];                                     // 0x0032(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryPositionData2D"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryContainer2D
// 0x00B8 (FullSize[0x00E0] - InheritedSize[0x0028])
class UInventoryContainer2D : public UObject
{
public:
	unsigned char                                      UnknownData_72CF[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FInventoryContainer2DRepData                _data;                                                     // 0x0030(0x0028) (Net, RepNotify, NativeAccessSpecifierPrivate)
	struct FInventoryContainer2DRepData                _oldData;                                                  // 0x0058(0x0028) (NativeAccessSpecifierPrivate)
	TArray<struct FInventoryContainer2DRepData>        _dataPredictionSnapshots;                                  // 0x0080(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UInventoryContainerWidget2*>          _widgets;                                                  // 0x0090(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TScriptInterface<class UInventoryNode>             _parent;                                                   // 0x00A0(0x0010) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class UInventoryContainerWidget2*                  _widget;                                                   // 0x00B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<bool>                                       _grid;                                                     // 0x00B8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<bool>                                       _gridDamaged;                                              // 0x00C8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1REB[0x8];                                     // 0x00D8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryContainer2D"));
		return ptr;
	}



	void OnRep_Parent();
	void OnRep_Items(TArray<class UObject*> _oldItems);
	void OnRep_Data();
	void OnActorItemDestroyed(class AActor* Actor);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryContainer2DLight
// 0x0000 (FullSize[0x00E0] - InheritedSize[0x00E0])
class UInventoryContainer2DLight : public UInventoryContainer2D
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryContainer2DLight"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryPositionDataClothes
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UInventoryPositionDataClothes : public UInventoryPositionData
{
public:
	unsigned char                                      UnknownData_84F4[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryPositionDataClothes"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryContainerClothes
// 0x0068 (FullSize[0x0090] - InheritedSize[0x0028])
class UInventoryContainerClothes : public UObject
{
public:
	unsigned char                                      UnknownData_WZKD[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UInventoryContainerWidget2*                  _widget;                                                   // 0x0030(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_H0UP[0x10];                                    // 0x0038(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FInventoryContainerClothesData              _data;                                                     // 0x0048(0x0020) (Net, RepNotify, NativeAccessSpecifierPrivate)
	struct FInventoryContainerClothesData              _oldData;                                                  // 0x0068(0x0020) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RD65[0x8];                                     // 0x0088(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryContainerClothes"));
		return ptr;
	}



	void OnRep_Data();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryPositionDataHandsHolsters
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UInventoryPositionDataHandsHolsters : public UInventoryPositionData
{
public:
	unsigned char                                      UnknownData_LGE0[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryPositionDataHandsHolsters"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryContainerHandsHolsters
// 0x0080 (FullSize[0x00A8] - InheritedSize[0x0028])
class UInventoryContainerHandsHolsters : public UObject
{
public:
	unsigned char                                      UnknownData_4H3G[0x10];                                    // 0x0028(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UInventoryContainerWidget2*                  _handWidget;                                               // 0x0038(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryContainerWidget2*                  _shoulderLeftWidget;                                       // 0x0040(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryContainerWidget2*                  _shoulderRightWidget;                                      // 0x0048(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Z2Q5[0x10];                                    // 0x0050(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FInventoryContainerHandsHolstersData        _data;                                                     // 0x0060(0x0020) (Net, RepNotify, NativeAccessSpecifierPrivate)
	struct FInventoryContainerHandsHolstersData        _oldData;                                                  // 0x0080(0x0020) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OTBA[0x8];                                     // 0x00A0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryContainerHandsHolsters"));
		return ptr;
	}



	void OnRep_Data();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryPositionDataSelection
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UInventoryPositionDataSelection : public UInventoryPositionData
{
public:
	int                                                position;                                                  // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6JJJ[0x4];                                     // 0x002C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryPositionDataSelection"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryContainerSelection
// 0x0090 (FullSize[0x00B8] - InheritedSize[0x0028])
class UInventoryContainerSelection : public UObject
{
public:
	unsigned char                                      UnknownData_Q173[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _maxNumOfItems;                                            // 0x0030(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6H4V[0x14];                                    // 0x0034(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UObject*>                             _itemsRep;                                                 // 0x0048(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MNH1[0x10];                                    // 0x0058(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UObject*                                     _parentRep;                                                // 0x0068(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FInventoryContainerSelectionRepData         _data;                                                     // 0x0070(0x0028) (Net, RepNotify, NativeAccessSpecifierPrivate)
	TArray<class UInventoryContainerWidget2*>          _widgets;                                                  // 0x0098(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UInventoryContainerWidget2*                  _widget;                                                   // 0x00A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2CM8[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryContainerSelection"));
		return ptr;
	}



	void OnRep_Parent();
	void OnRep_Items(TArray<class UObject*> _oldItems);
	void OnRep_Data(const struct FInventoryContainerSelectionRepData& OldData);
	void OnItemDestroyed(class AActor* Actor);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryItemWidget2Test
// 0x0010 (FullSize[0x0270] - InheritedSize[0x0260])
class UInventoryItemWidget2Test : public UUserWidget
{
public:
	class UImage*                                      _itemIcon;                                                 // 0x0260(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _itemCaption;                                              // 0x0268(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryItemWidget2Test"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryContainerWidget2Test
// 0x0078 (FullSize[0x02F0] - InheritedSize[0x0278])
class UInventoryContainerWidget2Test : public UInventoryContainerWidget2
{
public:
	class UImage*                                      _itemIcon;                                                 // 0x0278(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _itemCaption;                                              // 0x0280(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                                _itemContainer;                                            // 0x0288(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_P8QM[0x60];                                    // 0x0290(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryContainerWidget2Test"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryPanelWidget2Test
// 0x0058 (FullSize[0x02D0] - InheritedSize[0x0278])
class UInventoryPanelWidget2Test : public UInventoryContainerWidget2
{
public:
	class UScrollBox*                                  _itemContainer;                                            // 0x0278(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VZ3P[0x50];                                    // 0x0280(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryPanelWidget2Test"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryGridWidget
// 0x0008 (FullSize[0x0280] - InheritedSize[0x0278])
class UInventoryGridWidget : public UDesignableUserWidget
{
public:
	class UImage*                                      _image;                                                    // 0x0278(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryGridWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryItemData
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UInventoryItemData : public UDataAsset
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryItemData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryItemDataDescription
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UInventoryItemDataDescription : public UInventoryItemData
{
public:
	struct FText                                       Name;                                                      // 0x0030(0x0018) (Edit, NativeAccessSpecifierPublic)
	struct FText                                       Description;                                               // 0x0048(0x0018) (Edit, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryItemDataDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryItemDataIcon
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UInventoryItemDataIcon : public UInventoryItemData
{
public:
	class UTexture2D*                                  Icon;                                                      // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryItemDataIcon"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryItemData2D
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UInventoryItemData2D : public UInventoryItemData
{
public:
	int                                                SizeX;                                                     // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SizeY;                                                     // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryItemData2D"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryItem
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UInventoryItem : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryNode
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UInventoryNode : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryNode"));
		return ptr;
	}



	void IncrementUIDisplayStateVersion();
	struct FText GetInventoryNodeName();
	class UTexture2D* GetInventoryNodeIcon();
	struct FText GetInventoryNodeDescription();
	bool CanBeEverDropped();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryPanelSideLayerWidget
// 0x0008 (FullSize[0x0280] - InheritedSize[0x0278])
class UInventoryPanelSideLayerWidget : public UDesignableUserWidget
{
public:
	class UItemWidget2*                                _itemWidget;                                               // 0x0278(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryPanelSideLayerWidget"));
		return ptr;
	}



	void Init(const TScriptInterface<class UInventoryNode>& Item);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryPanelThirdIteration
// 0x0118 (FullSize[0x0390] - InheritedSize[0x0278])
class UInventoryPanelThirdIteration : public UDesignableUserWidget
{
public:
	TWeakObjectPtr<class ACharacter>                   _displayedCharacter;                                       // 0x0278(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScrollBox*                                  _inventoriesScrollBox;                                     // 0x0280(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                                _nonContainerBox;                                          // 0x0288(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UObject*, class UItemInventoryWidget2*> _inventories;                                              // 0x0290(0x0050) (ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<class UObject*, class UInventoryPanelSideLayerWidget*> _sideLayers;                                               // 0x02E0(0x0050) (ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<class UObject*, class UItemWidget2*>          _nonContainerItems;                                        // 0x0330(0x0050) (ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FMargin                                     _nonContainerItemsPadding;                                 // 0x0380(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryPanelThirdIteration"));
		return ptr;
	}



	void UpdateItemWidgetHighlightings();
	void UpdateContainerForItem(class AItem* Item);
	void SetDisplayedCharacterName(const struct FString& Name);
	void RemoveContainerForItem(class AItem* Item);
	void AddContainerForItem(class AItem* Item);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventoryPanelWidget2
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
class UInventoryPanelWidget2 : public UDesignableUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventoryPanelWidget2"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InventorySlotUserWidget
// 0x0020 (FullSize[0x0298] - InheritedSize[0x0278])
class UInventorySlotUserWidget : public UDesignableUserWidget
{
public:
	bool                                               HasItem;                                                   // 0x0278(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HBJ9[0x7];                                     // 0x0279(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UImage*                                      ImageWidget;                                               // 0x0280(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USizeBox*                                    SizeBoxWrapper;                                            // 0x0288(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBaseItemContainerWidget*                    ParentContainerWidget;                                     // 0x0290(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InventorySlotUserWidget"));
		return ptr;
	}



	void OnDraggedItemPreRotated(class UItemWidget2* Widget);
	void OnDraggedItemPostRotated(class UItemWidget2* Widget);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.IronDeficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UIronDeficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.IronDeficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemClassWidget
// 0x0008 (FullSize[0x0280] - InheritedSize[0x0278])
class UItemClassWidget : public UDesignableUserWidget
{
public:
	class UClass*                                      _itemClass;                                                // 0x0278(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemClassWidget"));
		return ptr;
	}



	void InteractWith(class APrisoner* Prisoner);
	void Init(class UClass* ItemClass, class UTexture2D* Texture);
	void Examine();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemContainer
// 0x0100 (FullSize[0x0320] - InheritedSize[0x0220])
class AItemContainer : public AActor
{
public:
	unsigned char                                      UnknownData_5AXW[0x30];                                    // 0x0220(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneComponent*                             _rootComponent;                                            // 0x0250(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _forceUnlockTime;                                          // 0x0258(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RB9S[0x4];                                     // 0x025C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FUnlockLocation                             _unlockPositionMarker;                                     // 0x0260(0x0030) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6Q2M[0x8];                                     // 0x0290(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              _upgradeItemsClasses;                                      // 0x0298(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FLockData>                           _lockData;                                                 // 0x02A8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UClass*>                              _originalUpgradeItemClasses;                               // 0x02B8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FLockData>                           _originalLockData;                                         // 0x02C8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RH29[0x29];                                    // 0x02D8(0x0029) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _disableSerialization;                                     // 0x0301(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldBeResetOnNewSession;                                // 0x0302(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6MGP[0x1D];                                    // 0x0303(0x001D) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemContainer"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemContainerManager
// 0x0188 (FullSize[0x03A8] - InheritedSize[0x0220])
class AItemContainerManager : public AActor
{
public:
	unsigned char                                      UnknownData_9TCE[0x48];                                    // 0x0220(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class AItemContainer*, struct FBox2D>         _itemContainers;                                           // 0x0268(0x0050) (NativeAccessSpecifierPrivate)
	TMap<struct FDbIntegerId, struct FItemContainersArray> _itemContainersOwned;                                      // 0x02B8(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_13MX[0x8];                                     // 0x0308(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FItemContainersReplicationHelper            _itemContainersDataRepHelper;                              // 0x0310(0x0070) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FJXZ[0x28];                                    // 0x0380(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemContainerManager"));
		return ptr;
	}



	void NetMulticast_UpdateItemContainerData(int dataVersion, const struct FString& runtimeId, const struct FItemContainerRepData& ItemContainerData);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemDropPlaceholder
// 0x0028 (FullSize[0x0248] - InheritedSize[0x0220])
class AItemDropPlaceholder : public AActor
{
public:
	class UBoxComponent*                               BoxCollisionComponent;                                     // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        StaticMeshComponent;                                       // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      SkeletalMeshComponent;                                     // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3QNT[0x8];                                     // 0x0238(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneComponent*                             _rootComponent;                                            // 0x0240(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemDropPlaceholder"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemGroup
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UItemGroup : public UDataAsset
{
public:
	TArray<class UClass*>                              Items;                                                     // 0x0030(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemGroup"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemInventoryWidget2
// 0x0068 (FullSize[0x02E0] - InheritedSize[0x0278])
class UItemInventoryWidget2 : public UInventoryContainerWidget2
{
public:
	TScriptInterface<class UInventoryNode>             _item;                                                     // 0x0278(0x0010) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class UInventoryContainer2D*                       _container;                                                // 0x0288(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _nameText;                                                 // 0x0290(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UItemWidget2*                                _itemWidget;                                               // 0x0298(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _inventoryGrid;                                            // 0x02A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryGridWidget*                        _inventoryGridWidget;                                      // 0x02A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCanvasPanel*                                _inventoryCanvas;                                          // 0x02B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                              _contentBox;                                               // 0x02B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCheckBox*                                   _expandToggle;                                             // 0x02C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UInventorySlotUserWidget*>            _slotsWidgets;                                             // 0x02C8(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	bool                                               _canMinimize;                                              // 0x02D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8G9H[0x7];                                     // 0x02D9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemInventoryWidget2"));
		return ptr;
	}



	void OnExpandToggleClicked(bool checked);
	void InitBlueprint(const TScriptInterface<class UInventoryNode>& Item);
	void Init(const TScriptInterface<class UInventoryNode>& Item, const TScriptInterface<class UInventoryContainer>& container);
	void Blink();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemObstructionTestCapsuleComponent
// 0x0000 (FullSize[0x0460] - InheritedSize[0x0460])
class UItemObstructionTestCapsuleComponent : public UCapsuleComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemObstructionTestCapsuleComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemObstructionStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UItemObstructionStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemObstructionStatics"));
		return ptr;
	}



	bool OverlapClosestBlocking(class ACharacter* Character, const struct FTransform& obstructionTestCapsulesWorldTransform, TArray<struct FItemObstructionTestCapsule> obstructionTestCapsules, struct FHitResult* HitResult, float* PenetrationDepth);
	bool OverlapBlocking(class ACharacter* Character, const struct FTransform& obstructionTestCapsuleWorldTransform, const struct FItemObstructionTestCapsule& obstructionTestCapsule, struct FHitResult* HitResult, float* PenetrationDepth);
	float ChooseItemObstructionSide(class ACharacter* Character, float existingSide);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemRegistry
// 0x0050 (FullSize[0x0100] - InheritedSize[0x00B0])
class UItemRegistry : public UActorComponent
{
public:
	unsigned char                                      UnknownData_CW2K[0x50];                                    // 0x00B0(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemRegistry"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemSelection
// 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
class UItemSelection : public UDataAsset
{
public:
	class UClass*                                      MainItem;                                                  // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              SupportItems;                                              // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              Attachments;                                               // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UTexture2D*                                  UnselectedIcon;                                            // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  SelectedIcon;                                              // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  DisabledIcon;                                              // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       SelectionName;                                             // 0x0070(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                              SizeX;                                                     // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SizeY;                                                     // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TeamIndex;                                                 // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9H1E[0x4];                                     // 0x0094(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemSelection"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemSelectionSlotWidget
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
class UItemSelectionSlotWidget : public UDesignableUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemSelectionSlotWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemSpawnerComponent
// 0x0028 (FullSize[0x0220] - InheritedSize[0x01F8])
class UItemSpawnerComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData_GHW9[0x8];                                     // 0x01F8(0x0008) Fix Super Size
	TArray<struct FItemSpawnerMarker>                  SpawnerMarkers;                                            // 0x0200(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FString                                     SpawnerGroupName;                                          // 0x0210(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemSpawnerComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemSpawnerGroup
// 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
class AItemSpawnerGroup : public AActor
{
public:
	class UItemSpawnerComponent*                       SpawnerComponent;                                          // 0x0220(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemSpawnerGroup"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemSpawnerVolume
// 0x0020 (FullSize[0x0278] - InheritedSize[0x0258])
class AItemSpawnerVolume : public AVolume
{
public:
	struct FItemLocation                               zone;                                                      // 0x0258(0x000E) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LNGS[0x2];                                     // 0x0266(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ItemHealthMultiplier;                                      // 0x0268(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProbabilityMultiplier;                                     // 0x026C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExamineProbabilityMultiplier;                              // 0x0270(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZD8V[0x4];                                     // 0x0274(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemSpawnerVolume"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemSpawningManager
// 0x1700 (FullSize[0x1920] - InheritedSize[0x0220])
class AItemSpawningManager : public AActor
{
public:
	unsigned char                                      UnknownData_3BIN[0x16A8];                                  // 0x0220(0x16A8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _referencedItemClasses[0x50];                              // 0x0220(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      UnknownData_HZ9V[0x8];                                     // 0x1918(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemSpawningManager"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PostItemsSpawnedActions
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UPostItemsSpawnedActions : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PostItemsSpawnedActions"));
		return ptr;
	}



	void Execute(TArray<class AItem*> SpawnedItems);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemSpawnerPreset
// 0x0078 (FullSize[0x00A0] - InheritedSize[0x0028])
class UItemSpawnerPreset : public UObject
{
public:
	struct FItemSpawnerData                            SpawnerData;                                               // 0x0028(0x0078) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemSpawnerPreset"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemStatusWidget
// 0x0000 (FullSize[0x0310] - InheritedSize[0x0310])
class UItemStatusWidget : public UWaypointWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemStatusWidget"));
		return ptr;
	}



	void SetTitleText(const struct FString& Text);
	void SetNameText(const struct FString& Text);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemTooltipTab
// 0x0010 (FullSize[0x0148] - InheritedSize[0x0138])
class UItemTooltipTab : public UWidgetSwitcher
{
public:
	TArray<class UPanelWidget*>                        _panels;                                                   // 0x0138(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemTooltipTab"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemTooltip
// 0x0048 (FullSize[0x02C0] - InheritedSize[0x0278])
class UItemTooltip : public UDesignableUserWidget
{
public:
	class UItemTooltipPanel*                           _mainPanel;                                                // 0x0278(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UItemTooltipTab*                             _overviewPanels;                                           // 0x0280(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UItemTooltipTab*                             _additionalPanels;                                         // 0x0288(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _pageIndicatorBar;                                         // 0x0290(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _expandHintText;                                           // 0x0298(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                                  _pageIndicatorGrid;                                        // 0x02A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6CCL[0x18];                                    // 0x02A8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemTooltip"));
		return ptr;
	}



	void UpdateVisuals(TArray<struct FInventoryNodeWidgetData> widgetData);
	void Init(const TScriptInterface<class UInventoryNode>& Item, const TScriptInterface<class UInventoryContainer>& container);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ExtendedRichTextBlock
// 0x0000 (FullSize[0x0678] - InheritedSize[0x0678])
class UExtendedRichTextBlock : public URichTextBlock
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ExtendedRichTextBlock"));
		return ptr;
	}



	void SetTextStyle(struct FTextBlockStyle* Style);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemTooltipPanelElement
// 0x0008 (FullSize[0x0280] - InheritedSize[0x0278])
class UItemTooltipPanelElement : public UDesignableUserWidget
{
public:
	struct FName                                       _elementName;                                              // 0x0278(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemTooltipPanelElement"));
		return ptr;
	}



	void OnTextDataChanged(const struct FText& Value);
	void OnNumberDataChanged(float Value);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemTooltipPanel
// 0x0050 (FullSize[0x02C8] - InheritedSize[0x0278])
class UItemTooltipPanel : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData_QE8L[0x50];                                    // 0x0278(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemTooltipPanel"));
		return ptr;
	}



	void UpdateVisuals(TArray<struct FInventoryNodeWidgetData> widgetData);
	void Init(const TScriptInterface<class UInventoryNode>& Item, const TScriptInterface<class UInventoryContainer>& container);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.BaseItemWidget
// 0x0020 (FullSize[0x0298] - InheritedSize[0x0278])
class UBaseItemWidget : public UDesignableUserWidget
{
public:
	class UBaseItemContainerWidget*                    ParentInventory;                                           // 0x0278(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q7S9[0x8];                                     // 0x0280(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                Width;                                                     // 0x0288(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Height;                                                    // 0x028C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                      _imageWidget;                                              // 0x0290(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.BaseItemWidget"));
		return ptr;
	}



	void SetStacksCount(int count);
	int GetStacksCount();
	void GetDragImage(const struct FGeometry& Geometry, class UInventorySlotUserWidget* widgetImage);
	void DragCancelled();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemUserWidget
// 0x0020 (FullSize[0x02B8] - InheritedSize[0x0298])
class UItemUserWidget : public UBaseItemWidget
{
public:
	struct FScriptMulticastDelegate                    OnClicked;                                                 // 0x0298(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UUserWidget*                                 _uiBorder;                                                 // 0x02A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isSelected;                                               // 0x02B0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isHovered;                                                // 0x02B1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3C9Q[0x6];                                     // 0x02B2(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemUserWidget"));
		return ptr;
	}



	void UpdateHighlightStatus();
	void SetItem(class AItem* Item);
	void SetImage(class UTexture2D* Image);
	void OnItemSelectionChanged(bool Selected);
	void OnClicked__DelegateSignature(class UItemUserWidget* clickedWidget);
	void MarkAsWeaponWidget();
	void ItemPickedUpStateChanged(class AItem* Item, bool pickedUp);
	void InteractableDestroyed(class AActor* interactable);
	class AItem* GetItem();
	class UItemUserWidget* CreateFromItem(class AItem* Item);
	void BlinkItemContainer();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemVirtualizationManager
// 0x0120 (FullSize[0x0340] - InheritedSize[0x0220])
class AItemVirtualizationManager : public AActor
{
public:
	unsigned char                                      UnknownData_4DWI[0x120];                                   // 0x0220(0x0120) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemVirtualizationManager"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VirtualizedItemUserData
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UVirtualizedItemUserData : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VirtualizedItemUserData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemWidget2
// 0x0198 (FullSize[0x0410] - InheritedSize[0x0278])
class UItemWidget2 : public UDesignableUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnRightClicked;                                            // 0x0278(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RTLD[0x20];                                    // 0x0288(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TScriptInterface<class UInventoryNode>             _item;                                                     // 0x02A8(0x0010) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TScriptInterface<class UInventoryContainer>        _container;                                                // 0x02B8(0x0010) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class UClass*                                      _itemClass;                                                // 0x02C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _icon;                                                     // 0x02D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                                    _iconSizeBox;                                              // 0x02D8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _background;                                               // 0x02E0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInvalidationBox*                            _mainInvalidationBox;                                      // 0x02E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUniformGridPanel*                           _backgroundGrid;                                           // 0x02F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUniformGridPanel*                           _foregroundGrid;                                           // 0x02F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                                    _selectionOverlay;                                         // 0x0300(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EInventoryNodeWidgetType                      _widgetType;                                               // 0x0308(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9XD3[0x7];                                     // 0x0309(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, float>                          _numberData;                                               // 0x0310(0x0050) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	bool                                               _isVicinityContainer;                                      // 0x0360(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3K7C[0x3];                                     // 0x0361(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FLinearColor                                _defaultBackgroundColour;                                  // 0x0364(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _hoveredBackgroundColour;                                  // 0x0374(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _selectedBackgroundColour;                                 // 0x0384(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _selectedHoveredBackgroundColour;                          // 0x0394(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2K9F[0xE];                                     // 0x03A4(0x000E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _shouldUpdateVisuals;                                      // 0x03B2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_N15W[0x15];                                    // 0x03B3(0x0015) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UHorizontalBox*                              _lowerLeftBox;                                             // 0x03C8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _additionalIcon;                                           // 0x03D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                                    _additionalIconSizeBox;                                    // 0x03D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YOKX[0x30];                                    // 0x03E0(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemWidget2"));
		return ptr;
	}



	void UpdateVisuals();
	void OnRotated__DelegateSignature(class UItemWidget2* Widget);
	void OnRightClicked__DelegateSignature();
	void OnLowerLeftBoxFadeOutAnimationFinished();
	void OnDropOperation(class UDragDropOperation* Operation);
	void OnDragOperationCancelled(class UDragDropOperation* Operation);
	void Init(const TScriptInterface<class UInventoryNode>& Item, const TScriptInterface<class UInventoryContainer>& container, bool temporary);
	class UWidgetAnimation* GetLowerLeftBoxFadeOutAnimation();
	class UWidgetAnimation* GetLowerLeftBoxFadeInAnimation();
	class UWidgetAnimation* GetAdditionalIconFadeOutAnimation();
	class UWidgetAnimation* GetAdditionalIconFadeInAnimation();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemWithText
// 0x0050 (FullSize[0x07A8] - InheritedSize[0x0758])
class AItemWithText : public AItem
{
public:
	unsigned char                                      UnknownData_865M[0x8];                                     // 0x0758(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MaxTextCharactersPerRow;                                   // 0x0760(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxTextRows;                                               // 0x0764(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetComponent*                            _textWidgetComponent;                                      // 0x0768(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     _text;                                                     // 0x0770(0x0010) (Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDbIntegerId                                _owningUserProfileId;                                      // 0x0780(0x0008) (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZXUX[0x20];                                    // 0x0788(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemWithText"));
		return ptr;
	}



	void OnTextAccepted(class APrisoner* User, const struct FText& Text);
	void OnRep_Text();
	void OnLocalPrisonerPanelsClosed_ItemWithText();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.JournalMissionContainer
// 0x00C8 (FullSize[0x0328] - InheritedSize[0x0260])
class UJournalMissionContainer : public UUserWidget
{
public:
	class UVerticalBox*                                _missionItemWidgetsContainer;                              // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                                _completedMissionItemWidgetsContainer;                     // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                                    _completedMissionsOverlay;                                 // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _noContentText;                                            // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_I0QU[0x8];                                     // 0x0280(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UClass*, TWeakObjectPtr<class UMissionItemWidget>> _missionItemWidgets;                                       // 0x0288(0x0050) (ExportObject, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<class UClass*, TWeakObjectPtr<class UMissionItemWidget>> _completedMissionItemWidgets;                              // 0x02D8(0x0050) (ExportObject, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.JournalMissionContainer"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.JournalObjectiveContainer
// 0x00E0 (FullSize[0x0340] - InheritedSize[0x0260])
class UJournalObjectiveContainer : public UUserWidget
{
public:
	class UVerticalBox*                                _objectiveContainer;                                       // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                              _rewardContainer;                                          // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _headerNameText;                                           // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _missionDescriptionText;                                   // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _missionBanner;                                            // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _noDescriptionText;                                        // 0x0288(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _noRewardsText;                                            // 0x0290(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UButton*                                     _activateMissionButton;                                    // 0x0298(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UButton*                                     _untrackMissionButton;                                     // 0x02A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UButton*                                     _resetMissionButton;                                       // 0x02A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UButton*                                     _restartMissionButton;                                     // 0x02B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                                    _activateButtonOverlay;                                    // 0x02B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                                    _untrackButtonOverlay;                                     // 0x02C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                                    _resetButtonOverlay;                                       // 0x02C8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                                    _restartButtonOverlay;                                     // 0x02D0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _objectiveItemBottomPadding;                               // 0x02D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _objectiveItemFontSize;                                    // 0x02DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8AAR[0x10];                                    // 0x02E0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FString, TWeakObjectPtr<class UObjectiveItemWidget>> _objectiveItemWidgets;                                     // 0x02F0(0x0050) (ExportObject, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.JournalObjectiveContainer"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.JournalPanelWidget
// 0x0090 (FullSize[0x02F0] - InheritedSize[0x0260])
class UJournalPanelWidget : public UUserWidget
{
public:
	class UWidgetSwitcher*                             _journalWidgetSwitcher;                                    // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UJournalMissionContainer*                    _mainStoryContainerWidget;                                 // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UJournalMissionContainer*                    _sideStoryContainerWidget;                                 // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UJournalMissionContainer*                    _tutorialContainerWidget;                                  // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UJournalObjectiveContainer*                  _objectivesContainerWidget;                                // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMissionTabWidget*                           _mainStoryTab;                                             // 0x0288(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMissionTabWidget*                           _sideStoryTab;                                             // 0x0290(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMissionTabWidget*                           _tutorialTab;                                              // 0x0298(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _firstTabDivider;                                          // 0x02A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _secondTabDivider;                                         // 0x02A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_S2TH[0x40];                                    // 0x02B0(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.JournalPanelWidget"));
		return ptr;
	}



	void OnUntrackMissionButton();
	void OnTutorialButtonClicked();
	void OnSideStoryButtonClicked();
	void OnRestartMissionButton();
	void OnResetMissionButton();
	void OnMissionItemExpanded(class UMissionItemWidget* MissionItemWidget);
	void OnMissionItemClicked(class UMissionItemWidget* MissionItemWidget, const struct FMissionData& MissionData);
	void OnMainStoryButtonClicked();
	void OnActivateMissionButton();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.KeyboardIllumination
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UKeyboardIllumination : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.KeyboardIllumination"));
		return ptr;
	}



	void PrintSCUM(const struct FColor& Color);
	void InitIllumination();
	void FlashAllKeys(const struct FColor& Color, float Duration, float Interval);
	void DeInitIllumination();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.KillBoxC4SpawnPoint
// 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
class AKillBoxC4SpawnPoint : public AActor
{
public:
	TArray<class UClass*>                              _possibleSpawnClasses;                                     // 0x0220(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.KillBoxC4SpawnPoint"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PlaceableActorBlocker
// 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
class APlaceableActorBlocker : public AActor
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PlaceableActorBlocker"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.KillBoxDetectionField
// 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
class AKillBoxDetectionField : public APlaceableActorBlocker
{
public:
	class UBoxComponent*                               BoxCollisionComponent;                                     // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.KillBoxDetectionField"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.CharacterActionComponent
// 0x0010 (FullSize[0x00C0] - InheritedSize[0x00B0])
class UCharacterActionComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_VF8N[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _shouldStopMontageOnEnd;                                   // 0x00B8(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PCDO[0x7];                                     // 0x00B9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.CharacterActionComponent"));
		return ptr;
	}



	void Server_NotifyReadyToDestroy();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.KillBoxEntranceComponent
// 0x0008 (FullSize[0x00C8] - InheritedSize[0x00C0])
class UKillBoxEntranceComponent : public UCharacterActionComponent
{
public:
	class AKillBoxManager*                             _killBoxManager;                                           // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.KillBoxEntranceComponent"));
		return ptr;
	}



	void SetKillBoxManager(class AKillBoxManager* KillBoxManager);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.KillBoxManager
// 0x0298 (FullSize[0x04B8] - InheritedSize[0x0220])
class AKillBoxManager : public AActor
{
public:
	bool                                               _isActivated;                                              // 0x0220(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isFinale;                                                 // 0x0221(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1JWF[0x2];                                     // 0x0222(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _killBoxDuration;                                          // 0x0224(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _lockdownDuration;                                         // 0x0228(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _killBoxResetDelay;                                        // 0x022C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _reductionTimeCap;                                         // 0x0230(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _reductionTimePenalty;                                     // 0x0234(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _saveStateInterval;                                        // 0x0238(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _gasEntranceTime;                                          // 0x023C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _panicModeTimeCut;                                         // 0x0240(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _laserEntranceTime;                                        // 0x0244(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _difficultyCalibrationTime;                                // 0x0248(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _calibrationPrisonerThreshold;                             // 0x024C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _zapperDamageModifierPerPrisoner;                          // 0x0250(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxZapperDamageModifier;                                  // 0x0254(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FRoomDifficultyConfiguration>        _availableDifficultyConfigurations;                        // 0x0258(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	float                                              _laserGadgetsTopPosition;                                  // 0x0268(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _laserGadgetsBottomPosition;                               // 0x026C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _laserMovingSpeed;                                         // 0x0270(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _maxSpawnedZombies;                                        // 0x0274(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _maxSpawnedZombiesPerMistake;                              // 0x0278(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _prisonerNumPerGoldDoorZapper;                             // 0x027C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _maxGoldDoorZappers;                                       // 0x0280(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _specialPauseCountdownDuration;                            // 0x0284(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _pauseMaxPrisonerCount;                                    // 0x0288(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _spawnMinPrisonerCount;                                    // 0x028C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _specialEventInterval;                                     // 0x0290(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _laserQuoteTimeRemainingTrigger;                           // 0x0294(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _gasQuoteTimeRemainingTrigger;                             // 0x0298(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _randomQuoteInterval;                                      // 0x029C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _timedHostBlockTime;                                       // 0x02A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HCUH[0x4];                                     // 0x02A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UAkAudioEvent*>                       _killBoxOpeningQuotes;                                     // 0x02A8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _killBoxLaserAnnouncementQuotes;                           // 0x02B8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _killBoxDescriptionQuotes;                                 // 0x02C8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _killBoxRandomnQuotes;                                     // 0x02D8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _killBoxFailureQuotes;                                     // 0x02E8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _killBoxGasAnnouncementQuotes;                             // 0x02F8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _killBoxZombieSpawnQuotes;                                 // 0x0308(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _killBoxTimePauseQuotes;                                   // 0x0318(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UAkAudioEvent*>                       _difficultyCalibrationQuote;                               // 0x0328(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               KillBoxMusicStart;                                         // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _killBoxMusicStop;                                         // 0x0340(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _killBoxGasSound;                                          // 0x0348(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               KillBox30SecondsMark;                                      // 0x0350(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               KillBox10SecondsMark;                                      // 0x0358(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               KillBox5SecondsMark;                                       // 0x0360(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               KillBox4SecondsMark;                                       // 0x0368(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               KillBox3SecondsMark;                                       // 0x0370(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               KillBox2SecondsMark;                                       // 0x0378(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               KillBox1SecondsMark;                                       // 0x0380(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               KillBoxBuzzerSound;                                        // 0x0388(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADoor*                                       _killBoxEntrance;                                          // 0x0390(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AKillBoxDetectionField*                      _detectionField;                                           // 0x0398(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _laserDevices;                                             // 0x03A0(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _laserGrid;                                                // 0x03A8(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AKillBoxSpawnPoint*>                  _spawnPoints;                                              // 0x03B0(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AKillBoxSpawnPoint*>                  _hardSpawnPoints;                                          // 0x03C0(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AZombie2*>                            _spawnedZombies;                                           // 0x03D0(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	class UAkComponent*                                _currentAudioComponent;                                    // 0x03E0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkComponent*                                _currentMusicComponent;                                    // 0x03E8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _remainingTime;                                            // 0x03F0(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _unlockFailureAssistanceBonus;                             // 0x03F4(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HK2F[0x50];                                    // 0x03F8(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UAkAudioEvent*>                       _queuedQuotes;                                             // 0x0448(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class ADoor*>                               _electricalDoors;                                          // 0x0458(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FRoomDefinition>                     _roomDefinitions;                                          // 0x0468(0x0010) (Net, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UKillBoxTimerWidget*>                 _timerWidgets;                                             // 0x0478(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UParticleSystemComponent*>            _gasEmitters;                                              // 0x0488(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*                    _gasMist;                                                  // 0x0498(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASwitch*                                     _panicButton;                                              // 0x04A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_17KX[0x10];                                    // 0x04A8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.KillBoxManager"));
		return ptr;
	}



	void SetPanicbutton(class ASwitch* panicButton);
	void SetLaserGrid(class UStaticMeshComponent* laserGrid);
	void SetLaserDevices(class UStaticMeshComponent* laserDevices);
	void SetKillBoxEntrance(class ADoor* entrance);
	void SetDetectionField(class AKillBoxDetectionField* detectionField);
	void OnRep_KillBoxActivation();
	void OnLaserOverlap(class UPrimitiveComponent* activatedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnKillBoxSetup();
	void OnEntranceUnlockedDelegate(class ADoor* Door);
	void OnElectricDoorsDefusedDelegate(class ADoor* Door);
	void NetMulticast_StopMusic();
	void NetMulticast_StopAllQuotes();
	void NetMulticast_ResetRoomAssets();
	void NetMulticast_ReportKillBoxDeactivation();
	void NetMulticast_ReportKillActivation();
	void NetMulticast_RemoveEntranceHardLock();
	void NetMulticast_QueueHostQuote(class UAkAudioEvent* Sound, bool playOnlyIfInstant, bool stopPreviousQuote);
	void NetMulticast_PlaySound(class UAkAudioEvent* Sound);
	void NetMulticast_HardLockEntrance();
	void NetMulticast_ActivateLasers(bool IsActive);
	void NetMulticast_ActivateGasSound();
	void NetMulticast_ActivateGasParticles(bool Activate);
	void InitiatePanicMode();
	void InitiateKillBoxFailure();
	void AddTimerWidget(class UKillBoxTimerWidget* timerWidget);
	void AddSpawnPoint(class ADoor* holeDoor, class AKillBoxSpawnPoint* Spawner);
	void AddRoomDefinition(class ADoor* RoomDoor, class UStaticMeshComponent* Locker, class AKillBoxC4SpawnPoint* C4);
	void AddHardSpawnPoint(class ADoor* holeDoor, class AKillBoxSpawnPoint* Spawner);
	void AddGasMist(class UParticleSystemComponent* gasMist);
	void AddGasEmitter(class UParticleSystemComponent* gasEmitter);
	void AddElectricalDoor(class ADoor* electricalDoor);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.KillBoxSpawnPoint
// 0x0040 (FullSize[0x0260] - InheritedSize[0x0220])
class AKillBoxSpawnPoint : public AActor
{
public:
	float                                              _openDelay;                                                // 0x0220(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _closeDelay;                                               // 0x0224(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UClass*>                              _zombieList;                                               // 0x0228(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class ADoor*                                       _door;                                                     // 0x0238(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JN34[0x18];                                    // 0x0240(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _stableZombieProbability;                                  // 0x0258(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E2FL[0x4];                                     // 0x025C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.KillBoxSpawnPoint"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.KillBoxTimerWidget
// 0x0020 (FullSize[0x0298] - InheritedSize[0x0278])
class UKillBoxTimerWidget : public UDesignableUserWidget
{
public:
	class UTextBlock*                                  _remainingTimeMinutes1;                                    // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _remainingTimeMinutes2;                                    // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _remainingTimeSeconds1;                                    // 0x0288(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _remainingTimeSeconds2;                                    // 0x0290(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.KillBoxTimerWidget"));
		return ptr;
	}



	void SetTime(int Minutes, int Seconds);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.KillFeedNotification
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UKillFeedNotification : public UConZNotification
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.KillFeedNotification"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.KillFeedNotificationDescription
// 0x0038 (FullSize[0x0078] - InheritedSize[0x0040])
class UKillFeedNotificationDescription : public UNotificationDescription
{
public:
	struct FString                                     prefix;                                                    // 0x0040(0x0010) (ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     characterName;                                             // 0x0050(0x0010) (ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     suffix;                                                    // 0x0060(0x0010) (ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ping;                                                      // 0x0070(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GJUS[0x7];                                     // 0x0071(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.KillFeedNotificationDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LadderMarkersComponent
// 0x0028 (FullSize[0x0220] - InheritedSize[0x01F8])
class ULadderMarkersComponent : public USceneComponent
{
public:
	TArray<struct FLadderMarker>                       _ladderMarkers;                                            // 0x01F8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HF5G[0x18];                                    // 0x0208(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LadderMarkersComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LadderMarkersRegistry
// 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
class ALadderMarkersRegistry : public AActor
{
public:
	unsigned char                                      UnknownData_5RON[0x10];                                    // 0x0220(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LadderMarkersRegistry"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LadderMarkersReplicator
// 0x0098 (FullSize[0x02B8] - InheritedSize[0x0220])
class ALadderMarkersReplicator : public AActor
{
public:
	unsigned char                                      UnknownData_69O5[0x98];                                    // 0x0220(0x0098) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LadderMarkersReplicator"));
		return ptr;
	}



	void NetMulticast_UnregisterLadderMarker(int dataVersion, const struct FLadderMarker& marker);
	void NetMulticast_RegisterLadderMarker(int dataVersion, const struct FLadderMarker& marker);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LandingDamageType
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class ULandingDamageType : public UDamageType
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LandingDamageType"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LandingEffects
// 0x0708 (FullSize[0x0738] - InheritedSize[0x0030])
class ULandingEffects : public UDataAsset
{
public:
	float                                              MinImpactSpeedForLightEffects;                             // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinImpactSpeedForMediumEffects;                            // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinImpactSpeedForHeavyEffects;                             // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KXVC[0x4];                                     // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               ImpactAudioEvent;                                          // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Default;                                                   // 0x0048(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        grass;                                                     // 0x0078(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        ForrestGroundCoastal;                                      // 0x00A8(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        ForrestGroundContinental;                                  // 0x00D8(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Rock;                                                      // 0x0108(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Stone;                                                     // 0x0138(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Gravel;                                                    // 0x0168(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        GravelBeach;                                               // 0x0198(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Pebbles;                                                   // 0x01C8(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Snow;                                                      // 0x01F8(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Ice;                                                       // 0x0228(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Sand;                                                      // 0x0258(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Asphalt;                                                   // 0x0288(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Dirt;                                                      // 0x02B8(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Water;                                                     // 0x02E8(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        WaterOcean;                                                // 0x0318(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Cloth;                                                     // 0x0348(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Metal;                                                     // 0x0378(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Aluminium;                                                 // 0x03A8(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Concrete;                                                  // 0x03D8(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Brick;                                                     // 0x0408(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Wood;                                                      // 0x0438(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Plastic;                                                   // 0x0468(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Rubber;                                                    // 0x0498(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Glass;                                                     // 0x04C8(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Folliage;                                                  // 0x04F8(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Bark;                                                      // 0x0528(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Flesh;                                                     // 0x0558(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        RoofTile;                                                  // 0x0588(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        CeramicsTiles;                                             // 0x05B8(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Scrap;                                                     // 0x05E8(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Trunk;                                                     // 0x0618(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Leaves;                                                    // 0x0648(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Plaster;                                                   // 0x0678(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        Kevlar;                                                    // 0x06A8(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        ForceField;                                                // 0x06D8(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FLandingEffectDataPerPhysicalSurface        NoEffect;                                                  // 0x0708(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LandingEffects"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LaserTriggerComponent
// 0x0078 (FullSize[0x0520] - InheritedSize[0x04A8])
class ULaserTriggerComponent : public UTriggerComponent
{
public:
	class UBoxComponent*                               BoxCollisionComponent;                                     // 0x04A8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        VisualizationMeshComponent;                                // 0x04B0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     _laserDirection;                                           // 0x04B8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxLaserLength;                                           // 0x04C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _laserThickness;                                           // 0x04C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _laserHeight;                                              // 0x04CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMesh*                                 _visualizationMesh;                                        // 0x04D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LDE0[0x8];                                     // 0x04D8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  _laserMeshTransform;                                       // 0x04E0(0x0030) (Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5HJE[0x10];                                    // 0x0510(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LaserTriggerComponent"));
		return ptr;
	}



	void BoxComponent_OnComponentEndOverlap(class UPrimitiveComponent* activatedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void BoxComponent_OnComponentBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LeptospirosisDisease
// 0x0010 (FullSize[0x01C0] - InheritedSize[0x01B0])
class ULeptospirosisDisease : public UDisease
{
public:
	unsigned char                                      UnknownData_JVKJ[0x10];                                    // 0x01B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LeptospirosisDisease"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LevelMarkers
// 0x0030 (FullSize[0x0250] - InheritedSize[0x0220])
class ALevelMarkers : public AActor
{
public:
	TArray<struct FLadderMarker>                       LadderMarkers;                                             // 0x0220(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FWindowMarker>                       WindowMarkers;                                             // 0x0230(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D37D[0x10];                                    // 0x0240(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LevelMarkers"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LevelUpNotification
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class ULevelUpNotification : public UConZNotification
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LevelUpNotification"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LevelUpNotificationDescription
// 0x0010 (FullSize[0x0050] - InheritedSize[0x0040])
class ULevelUpNotificationDescription : public UNotificationDescription
{
public:
	class UClass*                                      Skill;                                                     // 0x0040(0x0008) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_ESkillLevel                                   skillLevel;                                                // 0x0048(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WQIB[0x7];                                     // 0x0049(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LevelUpNotificationDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LevelUpNotificationWidget
// 0x0068 (FullSize[0x02E0] - InheritedSize[0x0278])
class ULevelUpNotificationWidget : public UDesignableUserWidget
{
public:
	class UOverlay*                                    _overlay;                                                  // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _backgroundImage;                                          // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _arrowImage;                                               // 0x0288(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _skillLevelText;                                           // 0x0290(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _skillNameText;                                            // 0x0298(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _levelUpNotificationAudioEvent;                            // 0x02A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OCN0[0x4];                                     // 0x02A8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _displayTime;                                              // 0x02AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _slideInTime;                                              // 0x02B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _slideOutTime;                                             // 0x02B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HXZ5[0x28];                                    // 0x02B8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LevelUpNotificationWidget"));
		return ptr;
	}



	void QueueNotification(class USkill* Skill, ConZ_ESkillLevel skillLevel);
	class UWidgetAnimation* GetLevelUpAnimation();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LoadingIconWidget
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
class ULoadingIconWidget : public UDesignableUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LoadingIconWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LoadingScreen
// 0x0008 (FullSize[0x0280] - InheritedSize[0x0278])
class ULoadingScreen : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData_LGSE[0x8];                                     // 0x0278(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LoadingScreen"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LocationMarker
// 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
class ALocationMarker : public AActor
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LocationMarker"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LocationObjective
// 0x0050 (FullSize[0x0370] - InheritedSize[0x0320])
class ALocationObjective : public AObjective
{
public:
	unsigned char                                      _locationTrigger[0x28];                                    // 0x0320(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	class UClass*                                      _locationMarkerClass;                                      // 0x0348(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldRemoveObjectiveItem;                                // 0x0350(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8ZDU[0x7];                                     // 0x0351(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _objectiveItemToRemove;                                    // 0x0358(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                      _locationMarker;                                           // 0x0360(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_H39Q[0x8];                                     // 0x0368(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LocationObjective"));
		return ptr;
	}



	void OnRep_LocationMarker();
	void OnLocationEnter(class AActor* OverlapedActor, class AActor* OtherActor);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LocationTrigger
// 0x0038 (FullSize[0x0260] - InheritedSize[0x0228])
class ALocationTrigger : public ATriggerBox
{
public:
	unsigned char                                      UnknownData_HSXY[0x8];                                     // 0x0228(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  _markerTransform;                                          // 0x0230(0x0030) (Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LocationTrigger"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LockBombDefusalMinigame
// 0x0218 (FullSize[0x04F8] - InheritedSize[0x02E0])
class ALockBombDefusalMinigame : public AMinigame
{
public:
	unsigned char                                      UnknownData_Q9HQ[0x18];                                    // 0x02E0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _bombClass;                                                // 0x02F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3L3N[0x10];                                    // 0x0300(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMeshComponent*                      _defusalTool;                                              // 0x0310(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _toolMovementSensitivity;                                  // 0x0318(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _minDefusingToolOffsetFromCenter;                          // 0x031C(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _maxDefusingToolOffsetFromCenter;                          // 0x0328(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OME6[0x4];                                     // 0x0334(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        _timeBomb;                                                 // 0x0338(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMesh*                                 _splineConnectorMesh;                                      // 0x0340(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9XGR[0x8];                                     // 0x0348(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     _wireButtonsSize;                                          // 0x0350(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IHJZ[0x4];                                     // 0x035C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               _bombDefusalTimerStartSound;                               // 0x0360(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _bombDefusalTimerStopSound;                                // 0x0368(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _cutWireSound;                                             // 0x0370(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _bombDefusedSound;                                         // 0x0378(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInterface*                          _greenLedLight;                                            // 0x0380(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInterface*                          _redLedLight;                                              // 0x0388(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInterface*                          _yellowLedLight;                                           // 0x0390(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UStaticMeshComponent*>                _ledLights;                                                // 0x0398(0x0010) (Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UStaticMesh*                                 _ledLightMesh;                                             // 0x03A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QURG[0x8];                                     // 0x03B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMesh*                                 _wireMesh;                                                 // 0x03B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<ConZ_EWireType>                             _wiresEndPositions;                                        // 0x03C0(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FWireDescription>                    _wires;                                                    // 0x03D0(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ORFT[0x10];                                    // 0x03E0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FSplineDescription>                  _splines;                                                  // 0x03F0(0x0010) (ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UXLZ[0x10];                                    // 0x0400(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _numberOfWires;                                            // 0x0410(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _numberOfWirePoints;                                       // 0x0414(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _wiresShuffleIntensity;                                    // 0x0418(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _minWiresComplexity;                                       // 0x041C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_ESplineAxis                                   _wiresForwardAxis;                                         // 0x0420(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FUKL[0x3];                                     // 0x0421(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _wiresStartSmoothness;                                     // 0x0424(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _wiresEndSmoothness;                                       // 0x0428(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _wiresMiddleSmoothness;                                    // 0x042C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _wiresSharpCornerSmoothness;                               // 0x0430(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxSegmentSize;                                           // 0x0434(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _wirePointsSpreadPositive;                                 // 0x0438(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _wirePointsSpreadNegative;                                 // 0x043C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _wireHeight;                                               // 0x0440(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _wireVerticalSpacing;                                      // 0x0444(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _wirePointsOffset;                                         // 0x0448(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _wireEndOffset;                                            // 0x0454(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _additionalWireEndPointOffset;                             // 0x0458(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_30IV[0x4];                                     // 0x0464(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        _cutWireSegment0;                                          // 0x0468(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _cutWireSegment1;                                          // 0x0470(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _cutWireSegment2;                                          // 0x0478(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _cutWireSegment3;                                          // 0x0480(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _cutWireSegment4;                                          // 0x0488(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _cutWireSegment5;                                          // 0x0490(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _uncutWireSegment0;                                        // 0x0498(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _uncutWireSegment1;                                        // 0x04A0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _uncutWireSegment2;                                        // 0x04A8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _uncutWireSegment3;                                        // 0x04B0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _uncutWireSegment4;                                        // 0x04B8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _uncutWireSegment5;                                        // 0x04C0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                               _wireBox1;                                                 // 0x04C8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                               _wireBox2;                                                 // 0x04D0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                               _wireBox3;                                                 // 0x04D8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                               _wireBox4;                                                 // 0x04E0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                               _wireBox5;                                                 // 0x04E8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                               _wireBox6;                                                 // 0x04F0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LockBombDefusalMinigame"));
		return ptr;
	}



	void PlayCutWireMontage();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Lockpickable
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class ULockpickable : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Lockpickable"));
		return ptr;
	}



	void OnLockNeutralized();
	bool HasLocks();
	bool CanInitiateLockpickingFor(class APrisoner* Prisoner);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LockpickableLocksVisualComponent
// 0x0048 (FullSize[0x0240] - InheritedSize[0x01F8])
class ULockpickableLocksVisualComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData_VJC4[0x8];                                     // 0x01F8(0x0008) Fix Super Size
	unsigned char                                      UnknownData_Y5UY[0x8];                                     // 0x0200(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             _lockStaticMeshComponentNames;                             // 0x0208(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UStaticMesh*                                 _lockMeshPerLockDifficulty[0x4];                           // 0x0218(0x0020) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EURL[0x8];                                     // 0x0238(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LockpickableLocksVisualComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LockpickingMinigame
// 0x01A0 (FullSize[0x0480] - InheritedSize[0x02E0])
class ALockpickingMinigame : public AMinigame
{
public:
	class UStaticMeshComponent*                        _outerRing;                                                // 0x02E0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _movableRing;                                              // 0x02E8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                             _lockpickingSetAnchor;                                     // 0x02F0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                             _lockpickManipulator;                                      // 0x02F8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                             _lockpickAnchor;                                           // 0x0300(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _lockpick;                                                 // 0x0308(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                             _tensionToolManipulator;                                   // 0x0310(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                             _tensionToolAnchor;                                        // 0x0318(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _tensionTool;                                              // 0x0320(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _zoomStartLocation;                                        // 0x0328(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _zoomEndLocation;                                          // 0x0334(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTransform                                  _protectionParticlesTransform;                             // 0x0340(0x0030) (Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 _zoomCurve;                                                // 0x0370(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 _fadeCurve;                                                // 0x0378(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _pickBreakingMultiplierForMediumDifficulty;                // 0x0380(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _pickBreakingMultiplierForHardDifficulty;                  // 0x0384(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6M1X[0x30];                                    // 0x0388(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               _lockpickingLockpickMovementStartAudioEvent;               // 0x03B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _lockpickingLockpickMovementStopAudioEvent;                // 0x03C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _lockpickingLockTensionStartAudioEvent;                    // 0x03C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _lockpickingLockTensionStopAudioEvent;                     // 0x03D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _lockpickingLockTurningStartAudioEvent;                    // 0x03D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _lockpickingLockTurningStopAudioEvent;                     // 0x03E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _lockpickingSuccessAudioEvent;                             // 0x03E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _lockpickingFailedAudioEvent;                              // 0x03F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _lockpickingResetAudioEvent;                               // 0x03F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IROJ[0x4];                                     // 0x0400(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _rotatingStartAngle;                                       // 0x0404(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _duration;                                                 // 0x0408(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _angleTolerance;                                           // 0x040C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _pickBreakingMultiplier;                                   // 0x0410(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_H6S8[0x6C];                                    // 0x0414(0x006C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LockpickingMinigame"));
		return ptr;
	}



	void OnTensionToolDestroyed(class AActor* tensionTool);
	void OnLockpickDestroyed(class AActor* lockpick);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LockpickingMinigameConfiguration
// 0x00C0 (FullSize[0x0118] - InheritedSize[0x0058])
class ULockpickingMinigameConfiguration : public UMinigameConfiguration
{
public:
	unsigned char                                      UnknownData_SMTA[0xC0];                                    // 0x0058(0x00C0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LockpickingMinigameConfiguration"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.UpgradeItemTag
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UUpgradeItemTag : public UBaseItemTag
{
public:
	int                                                Price;                                                     // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5HPQ[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.UpgradeItemTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LockItemTag
// 0x0088 (FullSize[0x00C0] - InheritedSize[0x0038])
class ULockItemTag : public UUpgradeItemTag
{
public:
	struct FLockData                                   LockData;                                                  // 0x0038(0x0088) (Edit, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LockItemTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LockProtectionTag
// 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
class ULockProtectionTag : public UUpgradeItemTag
{
public:
	class UParticleSystem*                             FailureParticles;                                          // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               FailureAudio;                                              // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             FailureParticlesInWorld;                                   // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               FailureAudioInWorld;                                       // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     FailureParticlesScaleInWorld;                              // 0x0058(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              _baseDamage;                                               // 0x0064(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_N21C[0x8];                                     // 0x0068(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LockProtectionTag"));
		return ptr;
	}



	void SetModifiedDamage(float Damage);
	void ResetDamage();
	float GetTotalDamage();
	float GetBaseDamage();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LockpickingTensionToolItemTag
// 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
class ULockpickingTensionToolItemTag : public UBaseItemTag
{
public:
	class UStaticMesh*                                 Mesh;                                                      // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L87C[0x8];                                     // 0x0038(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  TensionToolTransform;                                      // 0x0040(0x0030) (Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LockpickingTensionToolItemTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LockpickingWidget
// 0x0028 (FullSize[0x02B8] - InheritedSize[0x0290])
class ULockpickingWidget : public UMinigameWidget
{
public:
	TArray<class AItem*>                               _lockpicks;                                                // 0x0290(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AItem*>                               _tensionTools;                                             // 0x02A0(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_S3H8[0x8];                                     // 0x02B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LockpickingWidget"));
		return ptr;
	}



	void ShowInfo();
	void SetLockPickingDifficulty(ConZ_ELockPickingDifficulty Value);
	void OnSuccess();
	void OnFailure();
	void HideInfo();
	int GetTensionToolCount();
	float GetRemainingTime();
	int GetLockpicksCount();
	int GetFamePoints();
	float GetDuration();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LockpickItemTag
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class ULockpickItemTag : public UBaseItemTag
{
public:
	class UStaticMesh*                                 Mesh;                                                      // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LockpickingDurability;                                     // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_572X[0x4];                                     // 0x003C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LockpickItemTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ChestItem
// 0x0088 (FullSize[0x07E0] - InheritedSize[0x0758])
class AChestItem : public AItem
{
public:
	unsigned char                                      UnknownData_O76T[0x10];                                    // 0x0758(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _capacityX;                                                // 0x0768(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _capacityY;                                                // 0x076C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JKVF[0x18];                                    // 0x0770(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int64_t                                            _decayInDays;                                              // 0x0788(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _decayedChestClass;                                        // 0x0790(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canBeBuried;                                              // 0x0798(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canContainChestItem;                                      // 0x0799(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VDXQ[0x2];                                     // 0x079A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _containedItemsWeight;                                     // 0x079C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDbIntegerId                                _owningUserProfileId;                                      // 0x07A0(0x0008) (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UClass*>                              _lockItemsClasses;                                         // 0x07A8(0x0010) (Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FLockData>                           _lockData;                                                 // 0x07B8(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QMFI[0x10];                                    // 0x07C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ConZ_EAccessLevel                                  _activeAccessLevel;                                        // 0x07D8(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EWMM[0x7];                                     // 0x07D9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ChestItem"));
		return ptr;
	}



	void OnRep_LockData();
	void NetMulticast_TriggerLockNeutralizationFailurePenalty(class AActor* triggeringActor);
	void NetMulticast_PlayLockAddedEffects();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LogShedItem
// 0x0000 (FullSize[0x07E0] - InheritedSize[0x07E0])
class ALogShedItem : public AChestItem
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LogShedItem"));
		return ptr;
	}



	void BP_OnItemRemoved(int numContainedItems);
	void BP_OnItemAdded(int numContainedItems);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.LookoutItem
// 0x0000 (FullSize[0x0758] - InheritedSize[0x0758])
class ALookoutItem : public AItem
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.LookoutItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MagnesiumDeficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UMagnesiumDeficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MagnesiumDeficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MainMenuGameMode
// 0x0068 (FullSize[0x0370] - InheritedSize[0x0308])
class AMainMenuGameMode : public AGameMode
{
public:
	class UClass*                                      MainMenuClass;                                             // 0x0308(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      _widgetClass;                                              // 0x0310(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UUserWidget>                  _currentWidget;                                            // 0x0318(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ENAA[0x50];                                    // 0x0320(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MainMenuGameMode"));
		return ptr;
	}



	void UpdatePreviewPrisoner(class APrisoner* Prisoner, class UUserProfile* profile);
	void UITransition(class UClass** newWidget);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MakeConsciousAction
// 0x0000 (FullSize[0x00A8] - InheritedSize[0x00A8])
class UMakeConsciousAction : public UMedicalAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MakeConsciousAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MakeUnconsciousAction
// 0x0000 (FullSize[0x00A8] - InheritedSize[0x00A8])
class UMakeUnconsciousAction : public UMedicalAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MakeUnconsciousAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MalariaDisease
// 0x0030 (FullSize[0x01E0] - InheritedSize[0x01B0])
class UMalariaDisease : public UDisease
{
public:
	unsigned char                                      UnknownData_4WO6[0x30];                                    // 0x01B0(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MalariaDisease"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MalfunctionsContainerWidget
// 0x0008 (FullSize[0x0280] - InheritedSize[0x0278])
class UMalfunctionsContainerWidget : public UDesignableUserWidget
{
public:
	class UCircularMenuWidget*                         _malfunctionsCircularMenu;                                 // 0x0278(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MalfunctionsContainerWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MalfunctionWidget
// 0x0010 (FullSize[0x0288] - InheritedSize[0x0278])
class UMalfunctionWidget : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData_RHXN[0x8];                                     // 0x0278(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTextBlock*                                  _descriptionWidget;                                        // 0x0280(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MalfunctionWidget"));
		return ptr;
	}



	void ExecuteAction();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ManganeseDeficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UManganeseDeficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ManganeseDeficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MathStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMathStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MathStatics"));
		return ptr;
	}



	struct FRotator NormalizeRotator(const struct FRotator& Rotator);
	bool LineBoxIntersection(struct FVector* HitLocation, const struct FBox& Box, const struct FVector& Start, const struct FVector& End, const struct FVector& startToEnd);
	bool IsPointWithinCircle(const struct FVector2D& Point, const struct FVector2D& circleCenter, float circleRadius);
	struct FVector2D GetRandomPointWithinTwoCircles(const struct FVector2D& centerA, float radiusA, const struct FVector2D& centerB, float radiusB);
	struct FVector2D GetRandomPointWithinCircle(const struct FVector2D& Center, float Radius);
	float GetCircleYForX(float X, const struct FVector2D& Center, float Radius, bool Up);
	bool AreCirclesIntersecting(const struct FVector2D& centerA, float radiusA, const struct FVector2D& centerB, float radiusB, bool onlyEdge);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MechanoidsManager
// 0x0058 (FullSize[0x0278] - InheritedSize[0x0220])
class AMechanoidsManager : public AActor
{
public:
	class UClass*                                      DroneSpawnClass;                                           // 0x0220(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DroneSpawnDistance;                                        // 0x0228(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DroneSpawnHeight;                                          // 0x022C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DroneCheckForNearbyPlayerDistance;                         // 0x0230(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   DronePatrolDistanceRange;                                  // 0x0234(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_727R[0x24];                                    // 0x023C(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _minDroneTargetInitialVisitTime;                           // 0x0260(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxDroneTargetInitialVisitTime;                           // 0x0264(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minDroneTargetRevisitTime;                                // 0x0268(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxDroneTargetRevisitTime;                                // 0x026C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _droneVisitClusterRadius;                                  // 0x0270(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9X1V[0x4];                                     // 0x0274(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MechanoidsManager"));
		return ptr;
	}



	void Drone_OnDestroyed(class AActor* sender);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MedicalBonusAction
// 0x0010 (FullSize[0x00B8] - InheritedSize[0x00A8])
class UMedicalBonusAction : public UMedicalAction
{
public:
	unsigned char                                      UnknownData_375R[0x10];                                    // 0x00A8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MedicalBonusAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MedicalDiagnosisAction
// 0x0008 (FullSize[0x00B0] - InheritedSize[0x00A8])
class UMedicalDiagnosisAction : public UMedicalAction
{
public:
	unsigned char                                      UnknownData_9FID[0x8];                                     // 0x00A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MedicalDiagnosisAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MedicalItemTag
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UMedicalItemTag : public UBaseItemTag
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MedicalItemTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MedicalSkill
// 0x0070 (FullSize[0x0110] - InheritedSize[0x00A0])
class UMedicalSkill : public UIntelligenceSkill
{
public:
	class UMedicalItemTag*                             PatchLightWoundsTag;                                       // 0x00A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMedicalItemTag*                             PatchSevereWoundsTag;                                      // 0x00A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMedicalItemTag*                             ImmobilizeLimbsTag;                                        // 0x00B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMedicalItemTag*                             MendBonesTag;                                              // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMedicalItemTag*                             PullToothTag;                                              // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMedicalItemTag*                             PerformLocalAnesthesiaTag;                                 // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMedicalItemTag*                             PerformGeneralAnesthesiaTag;                               // 0x00D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMedicalItemTag*                             PerformSurgeryTag;                                         // 0x00D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YR5Z[0x30];                                    // 0x00E0(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MedicalSkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MedicationItem
// 0x0020 (FullSize[0x0778] - InheritedSize[0x0758])
class AMedicationItem : public AItem
{
public:
	ConZ_EMedicationUsage                              usage;                                                     // 0x0758(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EMedicationType                               Type;                                                      // 0x0759(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6E8H[0x2];                                     // 0x075A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DailyDoses;                                                // 0x075C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeToAbsorbSeconds;                                       // 0x0760(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EffectTimeMultiplier;                                      // 0x0764(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReuseEffectTimeIncrease;                                   // 0x0768(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxEffectTime;                                             // 0x076C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EMedicationRepeatedAbuseReaction              RepeatedAbuseReaction;                                     // 0x0770(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R0LC[0x7];                                     // 0x0771(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MedicationItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MeleeAttackCollisionCapsule
// 0x0040 (FullSize[0x04A0] - InheritedSize[0x0460])
class UMeleeAttackCollisionCapsule : public UCapsuleComponent
{
public:
	struct FGameplayTag                                _attachment;                                               // 0x0460(0x0008) (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FMeleeWeaponDesc                            _weaponDesc;                                               // 0x0468(0x0038) (Edit, NoDestructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MeleeAttackCollisionCapsule"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MeleeCombatComponent
// 0x0108 (FullSize[0x01B8] - InheritedSize[0x00B0])
class UMeleeCombatComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_RIWE[0x108];                                   // 0x00B0(0x0108) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MeleeCombatComponent"));
		return ptr;
	}



	void ToggleCombatMode();
	void SetIsInCombatMode(bool Value);
	void Server_StartMeleeAttack(const struct FMeleeAction& Action);
	void Server_EnablePendingBlockOrDodge(bool Value);
	void Server_Dodge(const struct FMeleeAction& Action);
	void NetMulticast_ExecuteMeleeAction(const struct FMeleeAction& Action);
	bool IsHoldingBlock();
	bool GetIsInCombatMode();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MeleeDamageType
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UMeleeDamageType : public UDamageType
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MeleeDamageType"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MeleeDetectHitCollisionCapsule
// 0x0010 (FullSize[0x0470] - InheritedSize[0x0460])
class UMeleeDetectHitCollisionCapsule : public UCapsuleComponent
{
public:
	ConZ_EDetectHitCollisionType                       DetectHitCollisionType;                                    // 0x0460(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HD4V[0xF];                                     // 0x0461(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MeleeDetectHitCollisionCapsule"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MeleeInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMeleeInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MeleeInterface"));
		return ptr;
	}



	void OnBeingAttackedByMelee(const struct FAttackedByMeleeData& Data);
	bool CheckMeleeAttackCapsuleCollision(const struct FCheckMeleeAttackCapsuleCollisionData& Data);
	bool CanHoldBlock();
	bool CanBeAttackedByMelee();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MeleeSkillAnimationsPreset
// 0x04C0 (FullSize[0x04F0] - InheritedSize[0x0030])
class UMeleeSkillAnimationsPreset : public UDataAsset
{
public:
	struct FMeleeSkillAnimations                       NoSkillAnimations;                                         // 0x0030(0x0098) (Edit, NativeAccessSpecifierPublic)
	struct FMeleeSkillAnimations                       BasicSkillAnimations;                                      // 0x00C8(0x0098) (Edit, NativeAccessSpecifierPublic)
	struct FMeleeSkillAnimations                       MediumSkillAnimations;                                     // 0x0160(0x0098) (Edit, NativeAccessSpecifierPublic)
	struct FMeleeSkillAnimations                       AdvancedSkillAnimations;                                   // 0x01F8(0x0098) (Edit, NativeAccessSpecifierPublic)
	struct FMeleeSkillParametersPerSkillLevel          NoSkillParameters;                                         // 0x0290(0x0098) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMeleeSkillParametersPerSkillLevel          BasicSkillParameters;                                      // 0x0328(0x0098) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMeleeSkillParametersPerSkillLevel          MediumSkillParameters;                                     // 0x03C0(0x0098) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMeleeSkillParametersPerSkillLevel          AdvancedSkillParameters;                                   // 0x0458(0x0098) (Edit, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MeleeSkillAnimationsPreset"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MeleeStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMeleeStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MeleeStatics"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MeleeWeaponItemTag
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UMeleeWeaponItemTag : public UBaseItemTag
{
public:
	float                                              CombatAnimationPlayRateModifier;                           // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StrengthBelowWhichCombatPerformanceBeginsToDrop;           // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MeleeWeaponItemTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MeleeWeaponsSkill
// 0x0000 (FullSize[0x00F8] - InheritedSize[0x00F8])
class UMeleeWeaponsSkill : public UMeleeSkill
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MeleeWeaponsSkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MeningitisDisease
// 0x0000 (FullSize[0x01B0] - InheritedSize[0x01B0])
class UMeningitisDisease : public UDisease
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MeningitisDisease"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MenuHelpers
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
class UMenuHelpers : public UDataAsset
{
public:
	class UClass*                                      MainMenuClass;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ServerBrowserClass;                                        // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      OptionsClass;                                              // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      AdvancedOptionsClass;                                      // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CharacterCreationClass;                                    // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CharacterSelectionClass;                                   // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CharacterCreationSecondIterationClass;                     // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MenuHelpers"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MenuPlayerController
// 0x0000 (FullSize[0x0570] - InheritedSize[0x0570])
class AMenuPlayerController : public APlayerController
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MenuPlayerController"));
		return ptr;
	}



	void InputComponent_MouseReleased();
	void InputComponent_MousePressed();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MeshHitZones
// 0x0020 (FullSize[0x00D0] - InheritedSize[0x00B0])
class UMeshHitZones : public UActorComponent
{
public:
	unsigned char                                      UnknownData_1VM3[0x10];                                    // 0x00B0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          _deactivationMaterial;                                     // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_G3VJ[0x8];                                     // 0x00C8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MeshHitZones"));
		return ptr;
	}



	bool IsHitZoneActive(int zoneIndex);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Metabolism_BCU_ICU_StatsPanel
// 0x0028 (FullSize[0x0288] - InheritedSize[0x0260])
class UMetabolism_BCU_ICU_StatsPanel : public UUserWidget
{
public:
	class UMetabolism_ICU_EKG_Stats*                   _stats_EKG;                                                // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMetabolism_ICU_ST_Stats*                    _stats_ST;                                                 // 0x0268(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMetabolism_ICU_SPO2_Stats*                  _stats_SPO2;                                               // 0x0270(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMetabolism_ICU_RR_Stats*                    _stats_RR;                                                 // 0x0278(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMetabolism_ICU_TEMP_Stats*                  _stats_TEMP;                                               // 0x0280(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Metabolism_BCU_ICU_StatsPanel"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Metabolism_BCU_ICU_Monitor
// 0x0020 (FullSize[0x0280] - InheritedSize[0x0260])
class UMetabolism_BCU_ICU_Monitor : public UUserWidget
{
public:
	class UCheckBox*                                   _chbSwitchICUState;                                        // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                             _icu_Switcher;                                             // 0x0268(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMetabolism_BCU_ICU_StatsPanel*              _icu_Collapsed;                                            // 0x0270(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMetabolism_BCU_ICU_StatsPanel*              _icu_Expanded;                                             // 0x0278(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Metabolism_BCU_ICU_Monitor"));
		return ptr;
	}



	void OnICUStateChanged(bool isCollapsed);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Metabolism_ICU_EKG_Stats
// 0x0000 (FullSize[0x0260] - InheritedSize[0x0260])
class UMetabolism_ICU_EKG_Stats : public UUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Metabolism_ICU_EKG_Stats"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Metabolism_ICU_ST_Stats
// 0x0000 (FullSize[0x0260] - InheritedSize[0x0260])
class UMetabolism_ICU_ST_Stats : public UUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Metabolism_ICU_ST_Stats"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Metabolism_ICU_SPO2_Stats
// 0x0000 (FullSize[0x0260] - InheritedSize[0x0260])
class UMetabolism_ICU_SPO2_Stats : public UUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Metabolism_ICU_SPO2_Stats"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Metabolism_ICU_RR_Stats
// 0x0000 (FullSize[0x0260] - InheritedSize[0x0260])
class UMetabolism_ICU_RR_Stats : public UUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Metabolism_ICU_RR_Stats"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Metabolism_ICU_TEMP_Stats
// 0x0000 (FullSize[0x0260] - InheritedSize[0x0260])
class UMetabolism_ICU_TEMP_Stats : public UUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Metabolism_ICU_TEMP_Stats"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MetabolismAdvancedProgressBar
// 0x00A0 (FullSize[0x0300] - InheritedSize[0x0260])
class UMetabolismAdvancedProgressBar : public UUserWidget
{
public:
	class URetainerBox*                                _progressBarEffect;                                        // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  _valueText;                                                // 0x0268(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                _normalBackgroundColor;                                    // 0x0270(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                _normalForegroundColor;                                    // 0x0280(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                _alertedBackgroundColor;                                   // 0x0290(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                _alertedForegroundColor;                                   // 0x02A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                _normalTextColorEmpty;                                     // 0x02B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                _normalTextColorFilled;                                    // 0x02C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                _alertedTextColorEmpty;                                    // 0x02D0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                _alertedTextColorFilled;                                   // 0x02E0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AH24[0x10];                                    // 0x02F0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MetabolismAdvancedProgressBar"));
		return ptr;
	}



	void UpdateAndRenderAPBVisuals();
	void SetTextForValueText(const struct FText& Value);
	void SetProgressPercentage(float Value);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MetabolismBasicInfoPanel
// 0x0008 (FullSize[0x0268] - InheritedSize[0x0260])
class UMetabolismBasicInfoPanel : public UUserWidget
{
public:
	unsigned char                                      UnknownData_9RB0[0x8];                                     // 0x0260(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MetabolismBasicInfoPanel"));
		return ptr;
	}



	class UUserWidget* FindOrCreateAttributeTooltip(ConZ_EPrisonerUIAttribute Attribute);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MetabolismBodyStatsPanel
// 0x0008 (FullSize[0x0268] - InheritedSize[0x0260])
class UMetabolismBodyStatsPanel : public UUserWidget
{
public:
	unsigned char                                      UnknownData_Y3CO[0x8];                                     // 0x0260(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MetabolismBodyStatsPanel"));
		return ptr;
	}



	class UUserWidget* FindOrCreateAttributeTooltip(ConZ_EPrisonerUIAttribute Attribute);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MetabolismLeftPanel
// 0x0020 (FullSize[0x0280] - InheritedSize[0x0260])
class UMetabolismLeftPanel : public UUserWidget
{
public:
	class UTabRowWidget*                               _mainPanelTabs;                                            // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                             _mainTabSwitcher;                                          // 0x0268(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMetabolismStatsPanel*                       _statsPanel;                                               // 0x0270(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JI1J[0x8];                                     // 0x0278(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MetabolismLeftPanel"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MetabolismRadialAttributeProgressBar
// 0x0030 (FullSize[0x0290] - InheritedSize[0x0260])
class UMetabolismRadialAttributeProgressBar : public UUserWidget
{
public:
	class UImage*                                      _coloredBackground;                                        // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      _radialProgressBar;                                        // 0x0268(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URetainerBox*                                _fontEffectPass1;                                          // 0x0270(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URetainerBox*                                _fontEffectPass2;                                          // 0x0278(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  _attributeValueTextBlock;                                  // 0x0280(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_W01M[0x8];                                     // 0x0288(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MetabolismRadialAttributeProgressBar"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MetabolismStatsPanel
// 0x0048 (FullSize[0x02A8] - InheritedSize[0x0260])
class UMetabolismStatsPanel : public UUserWidget
{
public:
	class UMetabolismRadialAttributeProgressBar*       _str_progressWidget;                                       // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMetabolismRadialAttributeProgressBar*       _con_progressWidget;                                       // 0x0268(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMetabolismRadialAttributeProgressBar*       _dex_progressWidget;                                       // 0x0270(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMetabolismRadialAttributeProgressBar*       _int_progressWidget;                                       // 0x0278(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMetabolismBasicInfoPanel*                   _basicInfoPanel;                                           // 0x0280(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMetabolismBodyStatsPanel*                   _bodyStatsPanel;                                           // 0x0288(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3HBR[0x18];                                    // 0x0290(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MetabolismStatsPanel"));
		return ptr;
	}



	class UUserWidget* FindOrCreateAttributeTooltip(ConZ_EPrisonerUIAttribute Attribute);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MetalDetector
// 0x0048 (FullSize[0x07A0] - InheritedSize[0x0758])
class AMetalDetector : public AItem
{
public:
	class UBasicGameResourceContainerComponent*        _resourceContainerComponent;                               // 0x0758(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minDetectionRadius;                                       // 0x0760(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxDetectionRadius;                                       // 0x0764(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _updatePeriod;                                             // 0x0768(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _detectionFactor;                                          // 0x076C(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               StartEvent;                                                // 0x0770(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               StopEvent;                                                 // 0x0778(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       RTPCName;                                                  // 0x0780(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _soundInterpolationTimeMs;                                 // 0x0788(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CJGM[0xC];                                     // 0x078C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       DetectionSourceSocketName;                                 // 0x0798(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MetalDetector"));
		return ptr;
	}



	void SetDetectionFactor_OnRep();
	void Server_ToggleTurnedOn();
	void Server_SetDetectionFactor_Implementation(float newDetectionFactor);
	void Server_SetDetectionFactor(float newDetectionFactor);
	void OnResourceComponentDeactivated(class UActorComponent* Component);
	void OnResourceComponentActivated(class UActorComponent* Component, bool wasReset);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MiscStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMiscStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MiscStatics"));
		return ptr;
	}



	struct FDateTime UtcToLocalDateTime(const struct FDateTime& utc);
	void SortSkillsByLevelAndExperience(TArray<class USkill*>* Skills);
	void SendChatLineToAll(class UObject* WorldContextObject, const struct FString& Text);
	struct FSoftObjectPath ResolveObjectPathForPIE(class UObject* WorldContext);
	bool PasteLocationAndRotationFromClipboard(struct FVector* Location, struct FRotator* Rotation);
	bool ParseTransformFromString(const struct FString& string, struct FTransform* Transform);
	struct FDateTime LocalToUtcDateTime(const struct FDateTime& Local);
	bool IsUserDeveloper(const struct FString& UserId);
	bool IsDeluxeVersionInstalled();
	class ULineBatchComponent* GetLineBatcher(class UObject* WorldContextObject, bool bPersistentLines, float LifeTime, bool bDepthIsForeground);
	struct FString GetGameVersion();
	void GetDeveloperUsers();
	class UObject* GetClassDefaultObject(class UClass* ObjectClass);
	void DrawLine(class UObject* WorldContextObject, const struct FVector& LineStart, const struct FVector& LineEnd, const struct FColor& Color, bool bPersistentLines, float LifeTime, unsigned char DepthPriority, float Thickness);
	void CopyLocationAndRotationToClipboard(const struct FVector& Location, const struct FRotator& Rotation);
	void AddChatLine(class UObject* WorldContextObject, const struct FString& Text);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Mission
// 0x0248 (FullSize[0x0468] - InheritedSize[0x0220])
class AMission : public AActor
{
public:
	unsigned char                                      UnknownData_GD8X[0x90];                                    // 0x0220(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AObjective*                                  _activeObjective;                                          // 0x02B0(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UClass*>                              _missionObjectiveClasses;                                  // 0x02B8(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<struct FString, class AObjective*>            _missionObjectiveAssets;                                   // 0x02C8(0x0050) (NativeAccessSpecifierPrivate)
	TArray<class AObjective*>                          _missionObjectives;                                        // 0x0318(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	struct FText                                       _missionName;                                              // 0x0328(0x0018) (Edit, NativeAccessSpecifierPrivate)
	struct FText                                       _missionCategory;                                          // 0x0340(0x0018) (Edit, NativeAccessSpecifierPrivate)
	struct FText                                       _missionDescription;                                       // 0x0358(0x0018) (Edit, NativeAccessSpecifierPrivate)
	ConZ_EMissionType                                  _missionType;                                              // 0x0370(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GOHK[0x3];                                     // 0x0371(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _missionOrdinalNumber;                                     // 0x0374(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EMissionState                                 _missionState;                                             // 0x0378(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EFaction                                      _missionFaction;                                           // 0x0379(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JIEL[0x6];                                     // 0x037A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _missionLevel[0x28];                                       // 0x037A(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	struct FMissionReward                              _missionRewards;                                           // 0x03A8(0x0018) (Edit, NativeAccessSpecifierPrivate)
	class UTexture2D*                                  _missionBannerImage;                                       // 0x03C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _missionStartingLocations[0x10];                           // 0x03C8(0x0010) UNKNOWN PROPERTY: ArrayProperty
	int                                                _intendedNumberOfPlayers;                                  // 0x03D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _missionCooldownTime;                                      // 0x03DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X30Y[0x8];                                     // 0x03E0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _missionItemSpawnerClass;                                  // 0x03E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FDialogueInfo>                       _missionIntroDialogues;                                    // 0x03F0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FDialogueInfo>                       _missionOutroSuccessDialogues;                             // 0x0400(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FDialogueInfo>                       _missionOutroFailDialogues;                                // 0x0410(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FDialogueInfo>                       _missionOutroBelatedDialogues;                             // 0x0420(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                               _canInterruptDialogue;                                     // 0x0430(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SUZ6[0x37];                                    // 0x0431(0x0037) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Mission"));
		return ptr;
	}



	void Server_NotifyObjectiveWidgetInitialized();
	void Server_NotifyObjectivesFinished();
	void Server_NotifyObjectiveDone(class AObjective* Objective, ConZ_EObjectiveState ObjectiveState);
	void OnRep_MissionStateChanged();
	void OnRep_MissionObjectives();
	void OnRep_ActiveObjectiveChanged();
	void OnMissionUnavailable();
	void OnMissionStarted();
	void OnMissionLevelLoaded();
	void OnMissionFailed();
	void OnMissionCompleted();
	void OnMissionBelated();
	void OnMissionAvailable();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MissionContainerWidget
// 0x0028 (FullSize[0x0288] - InheritedSize[0x0260])
class UMissionContainerWidget : public UUserWidget
{
public:
	class USizeBox*                                    _missionObjectivesSizeBox;                                 // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _missionName;                                              // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                                _objectivesWidgets;                                        // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JB1C[0x10];                                    // 0x0278(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MissionContainerWidget"));
		return ptr;
	}



	void StartObjectiveAnimation(ConZ_EObjectiveAnimationState AnimationState);
	class UWidgetAnimation* GetStartObjectiveAnimation();
	class UWidgetAnimation* GetCompleteObjectiveAnimation();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MissionDataGroup
// 0x0130 (FullSize[0x0160] - InheritedSize[0x0030])
class UMissionDataGroup : public UDataAsset
{
public:
	struct FString                                     MissionRootPath;                                           // 0x0030(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               MissionStartedSound;                                       // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               MissionCompletedSound;                                     // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               MissionFailedSound;                                        // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ObjectiveStartedSound;                                     // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ObjectiveCompletedSound;                                   // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ObjectiveFailedSound;                                      // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UClass*, struct FMissionData>           MainStoryMissions;                                         // 0x0070(0x0050) (Edit, EditConst, NativeAccessSpecifierPublic)
	TMap<class UClass*, struct FMissionData>           SideStoryMissions;                                         // 0x00C0(0x0050) (Edit, EditConst, NativeAccessSpecifierPublic)
	TMap<class UClass*, struct FMissionData>           TutorialMissions;                                          // 0x0110(0x0050) (Edit, EditConst, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MissionDataGroup"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MissionDialogueManager
// 0x0030 (FullSize[0x0250] - InheritedSize[0x0220])
class AMissionDialogueManager : public AActor
{
public:
	unsigned char                                      UnknownData_HHWJ[0x1C];                                    // 0x0220(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _lineDurationModifier;                                     // 0x023C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _delayBetweenDialogues;                                    // 0x0240(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4M63[0xC];                                     // 0x0244(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MissionDialogueManager"));
		return ptr;
	}



	void StopAllDialogue();
	void PlayNextDialogue();
	void OnJournalTabModeOpened(ConZ_ETabMode tabMode);
	void OnJournalTabModeClosed();
	void AddToQueue(TArray<struct FDialogueInfo> missionDialogue, bool interrupt);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MissionItemSpawner
// 0x0060 (FullSize[0x0280] - InheritedSize[0x0220])
class AMissionItemSpawner : public AActor
{
public:
	TArray<struct FMissionItemInfo>                    _missionItemsInfo;                                         // 0x0220(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UMLQ[0x50];                                    // 0x0230(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MissionItemSpawner"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MissionItemWidget
// 0x01E8 (FullSize[0x0448] - InheritedSize[0x0260])
class UMissionItemWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData_4I7O[0x30];                                    // 0x0260(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTextBlock*                                  _missionItemName;                                          // 0x0290(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _missionItemCategory;                                      // 0x0298(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                                    _selectionBorder;                                          // 0x02A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _stateImageIcon;                                           // 0x02A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UButton*                                     _expandButton;                                             // 0x02B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                                    _objectiveContentOverlay;                                  // 0x02B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                                _objectiveContainer;                                       // 0x02C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture2D*                                  _availableMissionIcon;                                     // 0x02C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture2D*                                  _startedMissionIcon;                                       // 0x02D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture2D*                                  _completedMissionIcon;                                     // 0x02D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture2D*                                  _failedMissionIcon;                                        // 0x02E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _widgetNormalColor;                                        // 0x02E8(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _widgetCompletedColor;                                     // 0x02F8(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _activeTextFontSize;                                       // 0x0308(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _inactiveTextFontSize;                                     // 0x030C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _expandButtonOpenSound;                                    // 0x0310(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _expandButtonClosedSound;                                  // 0x0318(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0BSF[0xC8];                                    // 0x0320(0x00C8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FString, TWeakObjectPtr<class UObjectiveItemWidget>> _objectiveItemWidgets;                                     // 0x03E8(0x0050) (ExportObject, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VUDU[0x10];                                    // 0x0438(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MissionItemWidget"));
		return ptr;
	}



	void OnExpandButtonClicked();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MissionLevelManager
// 0x0058 (FullSize[0x0278] - InheritedSize[0x0220])
class AMissionLevelManager : public AActor
{
public:
	unsigned char                                      UnknownData_8H6W[0x58];                                    // 0x0220(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MissionLevelManager"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MissionManager
// 0x0180 (FullSize[0x03A0] - InheritedSize[0x0220])
class AMissionManager : public AActor
{
public:
	unsigned char                                      UnknownData_FIDM[0x20];                                    // 0x0220(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UClass*, struct FMissionData>           _mainStoryMissions;                                        // 0x0240(0x0050) (NativeAccessSpecifierPrivate)
	TMap<class UClass*, struct FMissionData>           _sideStoryMissions;                                        // 0x0290(0x0050) (NativeAccessSpecifierPrivate)
	TMap<class UClass*, struct FMissionData>           _tutorialMissions;                                         // 0x02E0(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_B87R[0x1B];                                    // 0x0330(0x001B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _tutorialEnabled;                                          // 0x034B(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _tutorialDelay;                                            // 0x034C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EH9U[0x8];                                     // 0x0350(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AMission*                                    _activeMainStoryMission;                                   // 0x0358(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AMission*                                    _activeSideStoryMission;                                   // 0x0360(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AMission*                                    _activeTutorialMission;                                    // 0x0368(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AMission*                                    _availableMission;                                         // 0x0370(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EMissionManagerState                          _missionManagerState;                                      // 0x0378(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HICC[0x27];                                    // 0x0379(0x0027) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MissionManager"));
		return ptr;
	}



	void UntrackMission(ConZ_EMissionType MissionType);
	void SwitchActiveMission(class UClass* missionClass);
	void Server_SendMissionInvitation(class AMissionManager* manager, class AMission* Mission);
	void Server_RewardsAccepted();
	void Server_DestroyCompletedMission(class AMission* Mission);
	void Server_AcceptMissionInvitation(class AMission* Mission, bool accepted);
	void OnRep_MissionManagerStateChanged();
	void OnRep_AvailableMissionChanged();
	void OnRep_ActiveTutorialMissionChanged();
	void OnRep_ActiveSideStoryMissionChanged();
	void OnRep_ActiveMainStoryMissionChanged();
	bool IsMissionInvitationReceived();
	void Client_UpdateMissionsData(class UClass* missionClass, const struct FMissionData& MissionData);
	void Client_StartTutorial();
	void Client_ShowMissionResultWidget(class AMission* Mission, bool completed);
	void Client_SendMissionInvitation(class AMissionManager* manager, class AMission* Mission);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MissionPrompt
// 0x0018 (FullSize[0x0278] - InheritedSize[0x0260])
class UMissionPrompt : public UUserWidget
{
public:
	class UTextBlock*                                  _description;                                              // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KFSU[0x10];                                    // 0x0268(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MissionPrompt"));
		return ptr;
	}



	void OnYesClicked();
	void OnNoClicked();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MissionResult
// 0x0020 (FullSize[0x0280] - InheritedSize[0x0260])
class UMissionResult : public UUserWidget
{
public:
	class UOverlay*                                    _resultTitleOverlay;                                       // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _resultTitleDescription;                                   // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                                    _resultRewardContainerOverlay;                             // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                                _resultRewardContainer;                                    // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MissionResult"));
		return ptr;
	}



	void PlayShowMissionResultAnimation();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MissionRewardWidget
// 0x0010 (FullSize[0x0270] - InheritedSize[0x0260])
class UMissionRewardWidget : public UUserWidget
{
public:
	class UImage*                                      _rewardImage;                                              // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _rewardAmount;                                             // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MissionRewardWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MissionScheduler
// 0x01C0 (FullSize[0x03E0] - InheritedSize[0x0220])
class AMissionScheduler : public AActor
{
public:
	bool                                               _missionSchedulerEnabled;                                  // 0x0220(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FO3I[0x7];                                     // 0x0221(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UClass*, struct FMissionData>           _availableMainStoryMissions;                               // 0x0228(0x0050) (NativeAccessSpecifierPrivate)
	TMap<class UClass*, struct FMissionData>           _availableSideStoryMissions;                               // 0x0278(0x0050) (NativeAccessSpecifierPrivate)
	TMap<class UClass*, struct FMissionData>           _availableTutorialMissions;                                // 0x02C8(0x0050) (NativeAccessSpecifierPrivate)
	float                                              _missionQueuingInterval;                                   // 0x0318(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_88HE[0xC4];                                    // 0x031C(0x00C4) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MissionScheduler"));
		return ptr;
	}



	void OnLocationEnter(class AActor* OverlapedActor, class AActor* OtherActor);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MissionTabWidget
// 0x0090 (FullSize[0x02F0] - InheritedSize[0x0260])
class UMissionTabWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData_I9SN[0x18];                                    // 0x0260(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTextBlock*                                  _tabNameText;                                              // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _backgroundImage;                                          // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                                    _sizeBox;                                                  // 0x0288(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FText                                       _tabName;                                                  // 0x0290(0x0018) (Edit, NativeAccessSpecifierPrivate)
	float                                              _activeTabHeight;                                          // 0x02A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _inactiveTabHeight;                                        // 0x02AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _activeFontSize;                                           // 0x02B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _inactiveFontSize;                                         // 0x02B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture2D*                                  _activeBackgroundTexture;                                  // 0x02B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture2D*                                  _inactiveBackgroundTexture;                                // 0x02C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _activeFontColor;                                          // 0x02C8(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _inactiveFontColor;                                        // 0x02D8(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9AL7[0x8];                                     // 0x02E8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MissionTabWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ModularTooltip
// 0x0020 (FullSize[0x0280] - InheritedSize[0x0260])
class UModularTooltip : public UUserWidget
{
public:
	class UClass*                                      _sectionClass;                                             // 0x0260(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _descriptionTextBlock;                                     // 0x0268(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                                _sectionsVerticalBox;                                      // 0x0270(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _advancedDisplayHintTextBlock;                             // 0x0278(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ModularTooltip"));
		return ptr;
	}



	void PrisonerHUD_OnShouldShowExtendedWidgetTooltipChanged(bool Value);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ModularTooltipElement
// 0x0008 (FullSize[0x0268] - InheritedSize[0x0260])
class UModularTooltipElement : public UUserWidget
{
public:
	class UModularTooltipElementData*                  _data;                                                     // 0x0260(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ModularTooltipElement"));
		return ptr;
	}



	void UpdateWidgetsDisposition(ConZ_EDisposition disposition);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ModularTooltipElement_Value
// 0x0010 (FullSize[0x0278] - InheritedSize[0x0268])
class UModularTooltipElement_Value : public UModularTooltipElement
{
public:
	class UTextBlock*                                  _nameTextBlock;                                            // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _valueTextBlock;                                           // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ModularTooltipElement_Value"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ModularTooltipElement_Timer
// 0x0010 (FullSize[0x0278] - InheritedSize[0x0268])
class UModularTooltipElement_Timer : public UModularTooltipElement
{
public:
	class UProgressBar*                                _remainingTimeProgressBar;                                 // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _remainingTimeTextBlock;                                   // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ModularTooltipElement_Timer"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ModularTooltipElement_Modifier
// 0x0020 (FullSize[0x0288] - InheritedSize[0x0268])
class UModularTooltipElement_Modifier : public UModularTooltipElement
{
public:
	class UTextBlock*                                  _modifierTextBlock;                                        // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                                    _remainingTimeSizeBox;                                     // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProgressBar*                                _remainingTimeProgressBar;                                 // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _remainingTimeTextBlock;                                   // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ModularTooltipElement_Modifier"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ModularTooltipElement_ValueWithModifier
// 0x0028 (FullSize[0x0290] - InheritedSize[0x0268])
class UModularTooltipElement_ValueWithModifier : public UModularTooltipElement
{
public:
	class UTextBlock*                                  _nameTextBlock;                                            // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _currentValueTextBlock;                                    // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _baseValueTextBlock;                                       // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _modifierSignTextBlock;                                    // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _modifierTextBlock;                                        // 0x0288(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ModularTooltipElement_ValueWithModifier"));
		return ptr;
	}



	ConZ_EDisposition GetModifierDisposition();
	ConZ_EDisposition GetBaseValueDisposition();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ModularTooltipElement_AffectedBy
// 0x0010 (FullSize[0x0278] - InheritedSize[0x0268])
class UModularTooltipElement_AffectedBy : public UModularTooltipElement
{
public:
	class UTextBlock*                                  _sourceTextBlock;                                          // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                                    _affectElementOverlay;                                     // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ModularTooltipElement_AffectedBy"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ModularTooltipElement_Affects
// 0x0010 (FullSize[0x0278] - InheritedSize[0x0268])
class UModularTooltipElement_Affects : public UModularTooltipElement
{
public:
	class UTextBlock*                                  _targetTextBlock;                                          // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                                    _affectElementOverlay;                                     // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ModularTooltipElement_Affects"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ModularTooltipElementData
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UModularTooltipElementData : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ModularTooltipElementData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ModularTooltipElementData_Value
// 0x0038 (FullSize[0x0060] - InheritedSize[0x0028])
class UModularTooltipElementData_Value : public UModularTooltipElementData
{
public:
	unsigned char                                      UnknownData_JURB[0x38];                                    // 0x0028(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ModularTooltipElementData_Value"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ModularTooltipElementData_Timer
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UModularTooltipElementData_Timer : public UModularTooltipElementData
{
public:
	unsigned char                                      UnknownData_BDQB[0x10];                                    // 0x0028(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ModularTooltipElementData_Timer"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ModularTooltipElementData_Modifier
// 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
class UModularTooltipElementData_Modifier : public UModularTooltipElementData
{
public:
	unsigned char                                      UnknownData_VG9P[0x30];                                    // 0x0028(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ModularTooltipElementData_Modifier"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ModularTooltipElementData_ValueWithModifier
// 0x0070 (FullSize[0x0098] - InheritedSize[0x0028])
class UModularTooltipElementData_ValueWithModifier : public UModularTooltipElementData
{
public:
	unsigned char                                      UnknownData_KPF5[0x70];                                    // 0x0028(0x0070) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ModularTooltipElementData_ValueWithModifier"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ModularTooltipElementData_ValueWithModifier_Small
// 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
class UModularTooltipElementData_ValueWithModifier_Small : public UModularTooltipElementData_ValueWithModifier
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ModularTooltipElementData_ValueWithModifier_Small"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ModularTooltipElementData_ValueWithModifier_Large
// 0x0000 (FullSize[0x0098] - InheritedSize[0x0098])
class UModularTooltipElementData_ValueWithModifier_Large : public UModularTooltipElementData_ValueWithModifier
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ModularTooltipElementData_ValueWithModifier_Large"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ModularTooltipElementData_AffectedBy
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
class UModularTooltipElementData_AffectedBy : public UModularTooltipElementData
{
public:
	unsigned char                                      UnknownData_7FNP[0x18];                                    // 0x0028(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UModularTooltipElementData*                  Affect;                                                    // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ModularTooltipElementData_AffectedBy"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ModularTooltipElementData_Affects
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
class UModularTooltipElementData_Affects : public UModularTooltipElementData
{
public:
	unsigned char                                      UnknownData_ZF74[0x18];                                    // 0x0028(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UModularTooltipElementData*                  Affect;                                                    // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ModularTooltipElementData_Affects"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ModularTooltipSection
// 0x0030 (FullSize[0x0290] - InheritedSize[0x0260])
class UModularTooltipSection : public UUserWidget
{
public:
	struct FMargin                                     _sectionElementsPadding;                                   // 0x0260(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	class UImage*                                      _sectionSeparatorImage;                                    // 0x0270(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _sectionNameTextBlock;                                     // 0x0278(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                                _sectionElementsVerticalBox;                               // 0x0280(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2HDW[0x8];                                     // 0x0288(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ModularTooltipSection"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MoundItem
// 0x0058 (FullSize[0x07B0] - InheritedSize[0x0758])
class AMoundItem : public AItem
{
public:
	unsigned char                                      UnknownData_RKJE[0x8];                                     // 0x0758(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDbIntegerId                                _userProfileId;                                            // 0x0760(0x0008) (Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _moundItemClass;                                           // 0x0768(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialBillboardComponent*                 _spriteMarkerBillboard;                                    // 0x0770(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*                    _distanceBasedDynMat;                                      // 0x0778(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TEnumAsByte<PhysicsCore_EPhysicalSurface>          _surfaceType;                                              // 0x0780(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8XOR[0x7];                                     // 0x0781(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int64_t                                            _timeToDecay;                                              // 0x0788(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minStartFadeDistance;                                     // 0x0790(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxStartFadeDistance;                                     // 0x0794(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minEndFadeDistance;                                       // 0x0798(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxEndFadeDistance;                                       // 0x079C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _startFadeDistance;                                        // 0x07A0(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _endFadeDistance;                                          // 0x07A4(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _burriedClass;                                             // 0x07A8(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MoundItem"));
		return ptr;
	}



	void OnRep_SurfaceType();
	void OnRep_StartFadeDistance();
	void OnRep_OwnerProfileId();
	void OnRep_EndFadeDistance();
	void OnRep_BuriedClass();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Mountable
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMountable : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Mountable"));
		return ptr;
	}



	void GetMountSlots(TArray<TScriptInterface<class UMountSlot>>* Result);
	bool CanBeCameraViewTarget();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Mountee
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMountee : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Mountee"));
		return ptr;
	}



	bool Unmount(bool teleportOutside);
	bool Mount(const TScriptInterface<class UMountSlot>& Value);
	struct FTransform GetMounteeTransform();
	float GetMounteeMass();
	TScriptInterface<class UMountSlot> GetMountedSlot();
	bool CanUnmount();
	bool CanMount(const TScriptInterface<class UMountSlot>& Slot);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.NativeWindowsContent
// 0x0008 (FullSize[0x0280] - InheritedSize[0x0278])
class UNativeWindowsContent : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData_NOTO[0x8];                                     // 0x0278(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.NativeWindowsContent"));
		return ptr;
	}



	void TestText();
	void SetParentWindow(class UUserWidget* _parentWindow);
	class UUserWidget* GetParentWindow();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.NetworkDataIdAsset
// 0x00A0 (FullSize[0x00D0] - InheritedSize[0x0030])
class UNetworkDataIdAsset : public UDataAsset
{
public:
	TMap<uint32_t, struct FPrimaryAssetId>             IdToAssetMap;                                              // 0x0030(0x0050) (Edit, NativeAccessSpecifierPublic)
	TMap<struct FPrimaryAssetId, uint32_t>             AssetToIdMap;                                              // 0x0080(0x0050) (Edit, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.NetworkDataIdAsset"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.NetworkStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UNetworkStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.NetworkStatics"));
		return ptr;
	}



	void SetComponentNetAddressable(class UActorComponent* Component);
	bool ParseServerIpAndPort(const struct FString& Text, struct FString* ip, int* Port);
	struct FString MakeAuthTokenForUser(class UUser* User, const struct FString& password);
	struct FString MakeAuthTokenForCurrentUser(class UObject* WorldContextObject, const struct FString& password);
	struct FString MakeAuthToken(const struct FString& UserId, const struct FString& password);
	int GetDefaultDedicatedServerResponsePort();
	struct FString GetAuthTokenForUser(class UUser* User, const struct FString& ServerIp, int ServerResponsePort);
	struct FString GetAuthTokenForCurrentUser(class UObject* WorldContextObject, const struct FString& ServerIp, int ServerResponsePort);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ClothesItem
// 0x00C0 (FullSize[0x0818] - InheritedSize[0x0758])
class AClothesItem : public AItem
{
public:
	class UStaticMesh*                                 FemaleEquippedStaticMesh;                                  // 0x0758(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 MaleEquippedStaticMesh;                                    // 0x0760(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               FemaleEquippedSkeletalMesh;                                // 0x0768(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               MaleEquippedSkeletalMesh;                                  // 0x0770(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstance*>                   FemaleEquippedMaterialsOverride;                           // 0x0778(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstance*>                   MaleEquippedMaterialsOverride;                             // 0x0788(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	ConZ_EClothesType                                  ClothesType;                                               // 0x0798(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      EquipmentLayer;                                            // 0x0799(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B7Z9[0x2];                                     // 0x079A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint32_t                                           Warmth;                                                    // 0x079C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           Armor;                                                     // 0x07A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CoversBodyArmor;                                           // 0x07A4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CoversWrists;                                              // 0x07A5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HidesHair;                                                 // 0x07A6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HidesFacialHair;                                           // 0x07A7(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxFemaleHairLength;                                       // 0x07A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxMaleHairLength;                                         // 0x07AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxFacialHairLength;                                       // 0x07B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BellyJiggleMultiplier;                                     // 0x07B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BreastJiggleMultiplier;                                    // 0x07B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectileHitEnergyAbsorption;                             // 0x07BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectileHitEnergyDamagedAbsorption;                      // 0x07C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EnergyThroughputRatio;                                     // 0x07C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TotalEnergyAbsorption;                                     // 0x07C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SharpMeleeDamageReduction;                                 // 0x07CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BluntMeleeDamageReduction;                                 // 0x07D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           CapacityX;                                                 // 0x07D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           CapacityY;                                                 // 0x07D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           WaterResistance;                                           // 0x07DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InwardsWaterPropagationFactor;                             // 0x07E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OutwardsWaterPropagationFactor;                            // 0x07E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CamouflageBonus;                                           // 0x07E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageWhenEquipped;                                        // 0x07EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DirtinessWhenEquipped;                                     // 0x07F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThermalConductivityFactor;                                 // 0x07F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CSJZ[0x1];                                     // 0x07F8(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _canBeEquipped;                                            // 0x07F9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3QB4[0x2];                                     // 0x07FA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _dirtiness;                                                // 0x07FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _smallMaterialDamageLimit;                                 // 0x0800(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _bigMaterialDamageLimit;                                   // 0x0804(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _materialParametersReplicated;                             // 0x0808(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_O36Q[0xF];                                     // 0x0809(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ClothesItem"));
		return ptr;
	}



	void UpdateMaterialParamsOnClients();
	void SetDirtiness(float dirtiness);
	void OnRep_MaterialParameters();
	int GetWarmth();
	int GetCapacityY();
	int GetCapacityX();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.NightVisionGogglesItem
// 0x0038 (FullSize[0x0850] - InheritedSize[0x0818])
class ANightVisionGogglesItem : public AClothesItem
{
public:
	class UStaticMesh*                                 EquippedStaticMeshWhenActivated;                           // 0x0818(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ActivatedSound;                                            // 0x0820(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               DeactivatedSound;                                          // 0x0828(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    ActivatedChanged;                                          // 0x0830(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QU65[0x8];                                     // 0x0840(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBasicGameResourceContainerComponent*        _resourceContainerComponent;                               // 0x0848(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.NightVisionGogglesItem"));
		return ptr;
	}



	void OnComponentDeactivated(class UActorComponent* Component);
	void OnComponentActivated(class UActorComponent* Component, bool wasReset);
	void ActivatedChangedEvent__DelegateSignature(class ANightVisionGogglesItem* sender);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.NotificationsManager
// 0x00A8 (FullSize[0x02C8] - InheritedSize[0x0220])
class ANotificationsManager : public AActor
{
public:
	TMap<struct FDbIntegerId, class UNotificationDescription*> _queuedNotifications;                                      // 0x0220(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Y3LL[0x50];                                    // 0x0270(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int64_t                                            _notificationTimeout;                                      // 0x02C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.NotificationsManager"));
		return ptr;
	}



	void OnPlayerReadyToPlay(class AConZPlayerController* PlayerController);
	void NetMulticast_RequestNotification(const struct FNotificationDescriptionReplicationHelper& Description);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.NotificationWidget
// 0x0008 (FullSize[0x0280] - InheritedSize[0x0278])
class UNotificationWidget : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData_LOIT[0x8];                                     // 0x0278(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.NotificationWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.NotificationPanelWidget
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
class UNotificationPanelWidget : public UDesignableUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.NotificationPanelWidget"));
		return ptr;
	}



	void ShowNotification(class UNotificationWidget* notification);
	void ClearAllNotifications();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ObjectiveItemWidget
// 0x0078 (FullSize[0x02D8] - InheritedSize[0x0260])
class UObjectiveItemWidget : public UUserWidget
{
public:
	class UTextBlock*                                  _objectiveItemText;                                        // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _bullet;                                                   // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _bulletCompleted;                                          // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _objectiveActiveColor;                                     // 0x0278(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _objectiveCompletedColor;                                  // 0x0288(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _objectiveFailedColor;                                     // 0x0298(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GMQ5[0x30];                                    // 0x02A8(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ObjectiveItemWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ObjectivesContainerWidget
// 0x0018 (FullSize[0x0278] - InheritedSize[0x0260])
class UObjectivesContainerWidget : public UUserWidget
{
public:
	class UMissionContainerWidget*                     _mainMissionContainerWidget;                               // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMissionContainerWidget*                     _sideMissionContainerWidget;                               // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMissionContainerWidget*                     _tutorialMissionContainerWidget;                           // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ObjectivesContainerWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ObjectivesWidget
// 0x0060 (FullSize[0x02C0] - InheritedSize[0x0260])
class UObjectivesWidget : public UUserWidget
{
public:
	class UTextBlock*                                  _objectiveDescription;                                     // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                              _amountTracker;                                            // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _currentAmount;                                            // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _totalAmount;                                              // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                activeObjectiveFontColor;                                  // 0x0280(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                inctiveObjectiveFontColor;                                 // 0x0290(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                activeObjectiveFontSize;                                   // 0x02A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                inactiveObjectiveFontSize;                                 // 0x02A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YV0H[0x18];                                    // 0x02A8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ObjectivesWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ObjectStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UObjectStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ObjectStatics"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.OpenItemAction
// 0x0010 (FullSize[0x00B8] - InheritedSize[0x00A8])
class UOpenItemAction : public UInteractionAction
{
public:
	unsigned char                                      UnknownData_L8LI[0x10];                                    // 0x00A8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.OpenItemAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.InputDataAsset
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UInputDataAsset : public UDataAsset
{
public:
	TArray<struct FInputActionKeyMapping>              ActionMappings;                                            // 0x0030(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FInputAxisKeyMapping>                AxisMappings;                                              // 0x0040(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.InputDataAsset"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.OptionsWidget
// 0x0020 (FullSize[0x0298] - InheritedSize[0x0278])
class UOptionsWidget : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData_LI00[0x20];                                    // 0x0278(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.OptionsWidget"));
		return ptr;
	}



	void SetThirdPersonFOVMultiplier(float Value);
	void SetThirdPersonDrivingFOVMultiplier(float Value);
	void SetRestartNeeded(bool Value);
	void SetMouseSensitivity(ConZ_EMouseSensitivityMode Mode, float Value);
	void SetInvertMouseY(bool Invert);
	void SetFirstPersonFOVMultiplier(float Value);
	void SetFirstPersonDrivingFOVMultiplier(float Value);
	void RevertControlChanges();
	void ResetControlsToDefault();
	bool IsRestartNeeded();
	float GetThirdPersonFOVMultiplier();
	float GetThirdPersonDrivingFOVMultiplier();
	struct FString GetResolutionStringFormatted(const struct FString& string);
	float GetMouseSensitivity(ConZ_EMouseSensitivityMode Mode);
	float GetFirstPersonFOVMultiplier();
	float GetFirstPersonDrivingFOVMultiplier();
	struct FString GetCurrentAudioDeviceName();
	TArray<struct FInputAxisKeyMapping> GetAxisMappings();
	struct FInputAxisKeyMapping GetAxisMappingForAxisName(const struct FName& AxisName, float Scale);
	TArray<struct FInputActionKeyMapping> GetActionMappings();
	struct FInputActionKeyMapping GetActionMappingForActionName(const struct FName& ActionName);
	void ChangeAxisMapping(const struct FName& AxisName, const struct FKey& Key, float Scale);
	void ChangeActionMapping(const struct FName& ActionName, const struct FKey& Key);
	void ApplyControlChanges();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.OverdoseSickness
// 0x0008 (FullSize[0x01B8] - InheritedSize[0x01B0])
class UOverdoseSickness : public USickness
{
public:
	unsigned char                                      UnknownData_8YLH[0x8];                                     // 0x01B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.OverdoseSickness"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.OvereatingSickness
// 0x0030 (FullSize[0x01E0] - InheritedSize[0x01B0])
class UOvereatingSickness : public USickness
{
public:
	unsigned char                                      UnknownData_D289[0x30];                                    // 0x01B0(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.OvereatingSickness"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PatchWoundsAction
// 0x0010 (FullSize[0x00B8] - InheritedSize[0x00A8])
class UPatchWoundsAction : public UMedicalAction
{
public:
	unsigned char                                      UnknownData_UK66[0x10];                                    // 0x00A8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PatchWoundsAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.GameEventManager
// 0x0040 (FullSize[0x0260] - InheritedSize[0x0220])
class AGameEventManager : public AActor
{
public:
	int                                                EventHistoryLimit;                                         // 0x0220(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NT7S[0x4];                                     // 0x0224(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AGameEventBase*>                      _announcedGameEvents;                                      // 0x0228(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TArray<class AGameEventBase*>                      _currentGameEvents;                                        // 0x0238(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TArray<class AGameEventBase*>                      _endedGameEvents;                                          // 0x0248(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	class UGameEventPanelWidget*                       _panelWidget;                                              // 0x0258(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.GameEventManager"));
		return ptr;
	}



	class AGameEventBase* TrySchedulingNextEvent();
	class AGameEventLocationMarker* PickRandomMarker(class UClass* markerType, bool preferUnused, bool forcePick);
	void OnRep_EndedGameEvents();
	void OnRep_CurrentGameEvents();
	void OnRep_AnnouncedGameEvents();
	bool IsEventLocationFree(struct FText* Location);
	class AGameEventBase* GetPrisonerRegisteredGameEvent(class APrisoner* Prisoner);
	class UGameEventPanelWidget* GetPanelWidget();
	TArray<class AGameEventBase*> GetEndedEvents();
	TArray<class AGameEventBase*> GetCurrentEvents();
	TArray<class AGameEventBase*> GetAnnouncedEvents();
	class AGameEventBase* CreateGameEvent(class AGameEventLocationMarker* marker, float StartDelay);
	void CancelAllGameEvents();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PAX_GameEventManager
// 0x0048 (FullSize[0x02A8] - InheritedSize[0x0260])
class APAX_GameEventManager : public AGameEventManager
{
public:
	class AGameEventLocationMarker*                    EventMarker;                                               // 0x0260(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeBetweenEvents;                                         // 0x0268(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ForceJoinOnEventStart;                                     // 0x026C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_STLY[0x3];                                     // 0x026D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      ShootingRangeTableClass;                                   // 0x0270(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADropZoneEquipmentTable*                     ShootingRangeTable;                                        // 0x0278(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ShootingRangeTableOffset;                                  // 0x0280(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0SCH[0x1C];                                    // 0x028C(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PAX_GameEventManager"));
		return ptr;
	}



	void ForceUnjoinedParticipantsIntoEvent();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PerformAnesthesiaAction
// 0x0008 (FullSize[0x00B0] - InheritedSize[0x00A8])
class UPerformAnesthesiaAction : public UMedicalAction
{
public:
	unsigned char                                      UnknownData_AAQB[0x8];                                     // 0x00A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PerformAnesthesiaAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PerformSurgeryAction
// 0x0000 (FullSize[0x00A8] - InheritedSize[0x00A8])
class UPerformSurgeryAction : public UMedicalAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PerformSurgeryAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PhosphorusDeficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UPhosphorusDeficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PhosphorusDeficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PhysicalSurfacesData
// 0x0270 (FullSize[0x02A0] - InheritedSize[0x0030])
class UPhysicalSurfacesData : public UDataAsset
{
public:
	struct FPhysicalSurfaceData                        Default;                                                   // 0x0030(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        grass;                                                     // 0x0040(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        ForrestGroundCoastal;                                      // 0x0050(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        ForrestGroundContinental;                                  // 0x0060(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Rock;                                                      // 0x0070(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Stone;                                                     // 0x0080(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Gravel;                                                    // 0x0090(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        GravelBeach;                                               // 0x00A0(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Pebbles;                                                   // 0x00B0(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Snow;                                                      // 0x00C0(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Ice;                                                       // 0x00D0(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Sand;                                                      // 0x00E0(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Asphalt;                                                   // 0x00F0(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Dirt;                                                      // 0x0100(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Water;                                                     // 0x0110(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        WaterOcean;                                                // 0x0120(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Cloth;                                                     // 0x0130(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Metal;                                                     // 0x0140(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Aluminium;                                                 // 0x0150(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Concrete;                                                  // 0x0160(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Brick;                                                     // 0x0170(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Wood;                                                      // 0x0180(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Plastic;                                                   // 0x0190(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Rubber;                                                    // 0x01A0(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Glass;                                                     // 0x01B0(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Foliage;                                                   // 0x01C0(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Bark;                                                      // 0x01D0(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Flesh;                                                     // 0x01E0(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        RoofTile;                                                  // 0x01F0(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        CeramicTiles;                                              // 0x0200(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Scrap;                                                     // 0x0210(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Trunk;                                                     // 0x0220(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Leaves;                                                    // 0x0230(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Fruit;                                                     // 0x0240(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Cardboard;                                                 // 0x0250(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Plaster;                                                   // 0x0260(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        Kevlar;                                                    // 0x0270(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        ForceField;                                                // 0x0280(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceData                        NoEffect;                                                  // 0x0290(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PhysicalSurfacesData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PhysicalSurfacesEffectsData
// 0x04E0 (FullSize[0x0510] - InheritedSize[0x0030])
class UPhysicalSurfacesEffectsData : public UDataAsset
{
public:
	struct FPhysicalSurfaceEffectsData                 Default;                                                   // 0x0030(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 grass;                                                     // 0x0050(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 ForrestGroundCoastal;                                      // 0x0070(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 ForrestGroundContinental;                                  // 0x0090(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Rock;                                                      // 0x00B0(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Stone;                                                     // 0x00D0(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Gravel;                                                    // 0x00F0(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 GravelBeach;                                               // 0x0110(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Pebbles;                                                   // 0x0130(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Snow;                                                      // 0x0150(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Ice;                                                       // 0x0170(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Sand;                                                      // 0x0190(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Asphalt;                                                   // 0x01B0(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Dirt;                                                      // 0x01D0(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Water;                                                     // 0x01F0(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 WaterOcean;                                                // 0x0210(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Cloth;                                                     // 0x0230(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Metal;                                                     // 0x0250(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Aluminium;                                                 // 0x0270(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Concrete;                                                  // 0x0290(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Brick;                                                     // 0x02B0(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Wood;                                                      // 0x02D0(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Plastic;                                                   // 0x02F0(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Rubber;                                                    // 0x0310(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Glass;                                                     // 0x0330(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Foliage;                                                   // 0x0350(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Bark;                                                      // 0x0370(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Flesh;                                                     // 0x0390(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 RoofTile;                                                  // 0x03B0(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 CeramicTiles;                                              // 0x03D0(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Scrap;                                                     // 0x03F0(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Trunk;                                                     // 0x0410(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Leaves;                                                    // 0x0430(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Fruit;                                                     // 0x0450(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Cardboard;                                                 // 0x0470(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Plaster;                                                   // 0x0490(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 Kevlar;                                                    // 0x04B0(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 ForceField;                                                // 0x04D0(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPhysicalSurfaceEffectsData                 NoEffect;                                                  // 0x04F0(0x0020) (Edit, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PhysicalSurfacesEffectsData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PhysicsStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UPhysicsStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PhysicsStatics"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PickupItemAction
// 0x0000 (FullSize[0x00A8] - InheritedSize[0x00A8])
class UPickupItemAction : public UInteractionAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PickupItemAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PickupItemAssetData
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPickupItemAssetData : public UInteractionAssetData
{
public:
	class UClass*                                      Item;                                                      // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PickupItemAssetData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PlaceableActorBaseReplicatedState
// 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
class UPlaceableActorBaseReplicatedState : public UObject
{
public:
	unsigned char                                      UnknownData_T9U6[0x28];                                    // 0x0028(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PlaceableActorBaseReplicatedState"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PlaceableActorBase
// 0x0278 (FullSize[0x0498] - InheritedSize[0x0220])
class APlaceableActorBase : public AActor
{
public:
	unsigned char                                      UnknownData_E91Q[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDbIntegerId                                _id;                                                       // 0x0228(0x0008) (Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                               _boxCollisionComponent;                                    // 0x0230(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_37CG[0x1];                                     // 0x0238(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isPlacementAllowed;                                       // 0x0239(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TY7V[0x2];                                     // 0x023A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _craftingIndex;                                            // 0x023C(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _ingredientMultiplier;                                     // 0x0240(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_J7ZJ[0x4];                                     // 0x0244(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneComponent*                             _rootComponent;                                            // 0x0248(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        _staticMeshComponent_Main;                                 // 0x0250(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        _staticMeshComponent_Outline;                              // 0x0258(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        _staticMeshComponent_Depth;                                // 0x0260(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        _queryStaticMeshComponent;                                 // 0x0268(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                        _directionIndicatorStaticMeshComponent;                    // 0x0270(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    _primaryMaterialAllowed;                                   // 0x0278(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    _primaryMaterialDisallowed;                                // 0x0280(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    _outlineMaterial;                                          // 0x0288(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*                    _depthMaterial;                                            // 0x0290(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Z727[0x144];                                   // 0x0298(0x0144) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _numTracesX;                                               // 0x03DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _numTracesY;                                               // 0x03E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _traceHeightFactor;                                        // 0x03E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxPlacementAngle;                                        // 0x03E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _widgetHidingDistance;                                     // 0x03EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _fullWidgetHidingDistance;                                 // 0x03F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _widgetSwitchPeriod;                                       // 0x03F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minDistanceToShowWidget;                                  // 0x03F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _syncPeriod;                                               // 0x03FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _reachabilityMaxDifference;                                // 0x0400(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _directionIndicatorOffset;                                 // 0x0404(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FText                                       _destroyInteractionText;                                   // 0x0408(0x0018) (Edit, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IL3Y[0x8];                                     // 0x0420(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ConZ_EPlacementBaseState                           _placementState;                                           // 0x0428(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5G4J[0x3];                                     // 0x0429(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     _replicatedLocation;                                       // 0x042C(0x000C) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _replicatedPlacedLocation;                                 // 0x0438(0x000C) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                                    _replicatedRotation;                                       // 0x0444(0x000C) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	TArray<struct FPlaceableIngredient>                _ingredients;                                              // 0x0450(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RJWF[0x38];                                    // 0x0460(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PlaceableActorBase"));
		return ptr;
	}



	void Server_UpdateState(const struct FPlaceableActorStateReplicationHelper& State);
	void Server_Place(const struct FVector& Location, const struct FRotator& Rotation);
	void OnRep_ReplicatedRotation();
	void OnRep_ReplicatedPlacedLocation();
	void OnRep_ReplicatedLocation();
	void OnRep_PlacementState();
	void OnRep_Ingredients();
	void OnRep_IngredientMultiplier();
	void OnRep_Id();
	void OnRep_CraftingIndex();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PlaceableActorBaseBuildingReplicatedState
// 0x0020 (FullSize[0x0070] - InheritedSize[0x0050])
class UPlaceableActorBaseBuildingReplicatedState : public UPlaceableActorBaseReplicatedState
{
public:
	unsigned char                                      UnknownData_1CT4[0x20];                                    // 0x0050(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PlaceableActorBaseBuildingReplicatedState"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PlaceableActorBaseBuilding
// 0x00F0 (FullSize[0x0588] - InheritedSize[0x0498])
class APlaceableActorBaseBuilding : public APlaceableActorBase
{
public:
	int                                                _maxNumberOfTiles;                                         // 0x0498(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxHeightDifferenceForTiling;                             // 0x049C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxTileHeightAdjustionUp;                                 // 0x04A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxTileHeightAdjustionDown;                               // 0x04A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _tileSnappingAngle;                                        // 0x04A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _sizeVariatedTilesMaxHeightDifference;                     // 0x04AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxGroundPointDistance;                                   // 0x04B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _groundPointsTraceHeight;                                  // 0x04B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _groundPointsTraceDepth;                                   // 0x04B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxPlacementLengthForSizeVariatedTiles;                   // 0x04BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XOB9[0x28];                                    // 0x04C0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTilesData                                  _tilesData;                                                // 0x04E8(0x0018) (ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _flagAreaMeshComponent;                                    // 0x0500(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*                    _primaryMaterialFriendlyFlag;                              // 0x0508(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _replicatedFirstPointLocation;                             // 0x0510(0x000C) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                                    _replicatedFirstPointRotation;                             // 0x051C(0x000C) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	ConZ_EPlacementBaseBuildingState                   _placementSubState;                                        // 0x0528(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EStateFlags                                   _stateFlags;                                               // 0x0529(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3GGF[0x36];                                    // 0x052A(0x0036) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FSizeVariatedTilesData>              _sizeVariationData;                                        // 0x0560(0x0010) (ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Y9HT[0x18];                                    // 0x0570(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PlaceableActorBaseBuilding"));
		return ptr;
	}



	void OnRep_ReplicatedFirstPointRotation();
	void OnRep_ReplicatedFirstPointLocation();
	void OnRep_PlacementSubState();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PlaceableActorBaseUpgradeReplicatedState
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class UPlaceableActorBaseUpgradeReplicatedState : public UPlaceableActorBaseReplicatedState
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PlaceableActorBaseUpgradeReplicatedState"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PlaceableActorBaseUpgrade
// 0x0048 (FullSize[0x04E0] - InheritedSize[0x0498])
class APlaceableActorBaseUpgrade : public APlaceableActorBase
{
public:
	struct FConZBaseElementIdentifier                  _elementToBeUpgraded;                                      // 0x0498(0x0020) (Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0A2V[0x28];                                    // 0x04B8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PlaceableActorBaseUpgrade"));
		return ptr;
	}



	void OnRep_ElementToBeUpgraded();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PlaceableActorFortifications
// 0x0030 (FullSize[0x04C8] - InheritedSize[0x0498])
class APlaceableActorFortifications : public APlaceableActorBase
{
public:
	unsigned char                                      UnknownData_39OF[0x30];                                    // 0x0498(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PlaceableActorFortifications"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PlaceableActorItems
// 0x0008 (FullSize[0x04A0] - InheritedSize[0x0498])
class APlaceableActorItems : public APlaceableActorBase
{
public:
	unsigned char                                      UnknownData_FI58[0x8];                                     // 0x0498(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PlaceableActorItems"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PlaceableElementWidget
// 0x0010 (FullSize[0x0288] - InheritedSize[0x0278])
class UPlaceableElementWidget : public UDesignableUserWidget
{
public:
	class UImage*                                      _icon;                                                     // 0x0278(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PR2Z[0x8];                                     // 0x0280(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PlaceableElementWidget"));
		return ptr;
	}



	void Init(class APlaceableActorBase* PlaceableActor);
	void DestroyPlaceable();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PlacedPlaceableWidget
// 0x0058 (FullSize[0x02D0] - InheritedSize[0x0278])
class UPlacedPlaceableWidget : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData_443F[0x50];                                    // 0x0278(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UVerticalBox*                                _container;                                                // 0x02C8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PlacedPlaceableWidget"));
		return ptr;
	}



	void BP_RemovePlaceable(class UTexture2D* Icon);
	void BP_AddPlaceable(class UTexture2D* Icon);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PlayableInstrument
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UPlayableInstrument : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PlayableInstrument"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PlayEffectsWhenParticleCollides
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UPlayEffectsWhenParticleCollides : public UParticleModuleEventSendToGame
{
public:
	class UProjectileImpactEffects*                    ImpactEffects;                                             // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PlayEffectsWhenParticleCollides"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PlayerRpcChannel
// 0x0020 (FullSize[0x00D0] - InheritedSize[0x00B0])
class UPlayerRpcChannel : public UActorComponent
{
public:
	unsigned char                                      UnknownData_MUI2[0x10];                                    // 0x00B0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UPlayerRpcChannelServerDataRequest*>  _referencedServerDataRequests;                             // 0x00C0(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PlayerRpcChannel"));
		return ptr;
	}



	void TrapItem_Server_TriggerTrap(class ATrapItem* TrapItem, const struct FTrapTriggerParams& Params);
	void TrapItem_Server_SetNumTries(class ATrapItem* TrapItem, int numTries);
	void TrapItem_Server_DisarmTrap(class ATrapItem* TrapItem);
	void Switch_Server_Activate(class ASwitch* Actor);
	void SurvivalStats_Server_HandlePlayerLogout(class APlayerController* PlayerController);
	void SurvivalStats_Server_HandlePlayerLogin(class APlayerController* PlayerController);
	void Sledge_Server_SendState(class ASledge* Sledge, const struct FRigidBodyState& State, uint32_t controls);
	void Skill_Server_IncreaseExperiencePoints(class APrisoner* Prisoner, class UClass* skillClass, float ExperiencePoints, float famePointsMultiplier);
	void Server_UntrackMission(ConZ_EMissionType MissionType);
	void Server_UnsubscribeFromUnachievedAchievements(class APlayerController* PlayerController, TArray<struct FString> achievementsIds);
	void Server_UnlockedAchievement(class APlayerController* PlayerController, const struct FString& AchievementID);
	void Server_SwitchActiveMission(class UClass* missionClass);
	void Server_ResetMission(class UClass* missionClass, ConZ_EMissionType MissionType, bool restartMission);
	void Server_RequestServerData(int RequestID, const struct FPlayerRpcChannelServerDataRequestNetSerializer& request);
	void Server_RequestDoorUpdate(class ADoor* Door);
	void Server_ReportUnachievedAchievements(class APlayerController* PlayerController, TArray<struct FString> achievementsIds);
	void Server_MakeNoise(class AActor* targetActor, float Loudness, class APawn* Instigator, const struct FVector& ImpactPoint);
	void ResourceLockingManager_Server_UnlockResource(const struct FResourceNetworkGUID& ResourceGUID, int ResourceId);
	void ResourceLockingManager_Server_UnlockIntersectinAreas(const struct FBox& Area);
	void ResourceLockingManager_Server_UnlockArea(const struct FBox& Area);
	void ResourceLockingManager_Server_LockResource(const struct FResourceNetworkGUID& LockOwnerGUID, const struct FResourceNetworkGUID& ResourceGUID, int ResourceId);
	void ResourceLockingManager_Server_LockArea(const struct FResourceNetworkGUID& LockOwnerGUID, const struct FBox& Area);
	void Prisoner_Server_Die(class APrisoner* Prisoner);
	void Notifications_RequestNotification(const struct FNotificationDescriptionReplicationHelper& Description);
	void Lockpickable_Server_TriggerFailurePenalty(class UObject* Lockpickable, class APrisoner* triggeringPrisoner);
	void Lockpickable_Server_SetNumTries(class UObject* Lockpickable, int numTries);
	void ItemContainer_Server_ResetLockTimer(const struct FString& runtimeId);
	void ItemContainer_Client_TriggerFailurePenalty(const struct FString& runtimeId, class AActor* triggeringActor);
	void InteractWithObjectOnServer(class UObject* interactable, class APrisoner* User, ConZ_EInteractionType interactionType, const struct FInteractionData& InteractionData);
	void HasOwningUser_Server_RequestStateUpdate(class UObject* Object);
	void HasOwningUser_Client_UpdateState(class UObject* Object, const struct FString& ownerString);
	void Door_Client_TriggerFailurePenalty(const struct FString& runtimeId, class AActor* triggeringActor);
	void Client_UnlockAchievement(class APlayerController* PlayerController, const struct FString& AchievementID);
	void Client_ReceiveServerData(int RequestID, const struct FPlayerRpcChannelServerDataResponseNetSerializer& Response);
	void Client_IncreaseStat(class APlayerController* PlayerController, const struct FString& statId);
	void BaseBuilding_Server_RequestElementStateUpdate(const struct FVector& Location, float areaSize);
	void BaseBuilding_Server_OnFlagAreaExited(class AConZCharacter* Character);
	void BaseBuilding_Server_OnFlagAreaEntered(class AConZCharacter* Character);
	void BaseBuilding_Client_UpdateElementState(const struct FVector& Location, float areaSize, TArray<struct FConZOnDemandElementData> Data);
	void Admin_Server_TeleportTo(class APlayerController* Controller, const struct FString& teleportToUserId);
	void Admin_Client_ListSpawnedVehicles(class APlayerController* Controller, TArray<struct FVehicleSpawnerInfo> spawnerInfos, bool shouldCopyToClientClipboard);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PlayerRpcChannelServerDataRequest
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UPlayerRpcChannelServerDataRequest : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PlayerRpcChannelServerDataRequest"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PlayerRpcChannelServerDataResponse
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UPlayerRpcChannelServerDataResponse : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PlayerRpcChannelServerDataResponse"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PotassiumDeficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UPotassiumDeficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PotassiumDeficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PracticeLockpickingItem
// 0x0020 (FullSize[0x0778] - InheritedSize[0x0758])
class APracticeLockpickingItem : public AItem
{
public:
	unsigned char                                      UnknownData_4JZV[0x8];                                     // 0x0758(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FLockData>                           _possibleLocks;                                            // 0x0760(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZC8R[0x8];                                     // 0x0770(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PracticeLockpickingItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PracticeTrapItem
// 0x0008 (FullSize[0x08A0] - InheritedSize[0x0898])
class APracticeTrapItem : public ATrapItem
{
public:
	unsigned char                                      UnknownData_ER7H[0x8];                                     // 0x0898(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PracticeTrapItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PreviousNextSwitchWidget
// 0x0030 (FullSize[0x02A8] - InheritedSize[0x0278])
class UPreviousNextSwitchWidget : public UDesignableUserWidget
{
public:
	struct FScriptMulticastDelegate                    IndexChanged;                                              // 0x0278(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UButton*                                     PreviousButton;                                            // 0x0288(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UButton*                                     NextButton;                                                // 0x0290(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1DFI[0x8];                                     // 0x0298(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _index;                                                    // 0x02A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JH1P[0x4];                                     // 0x02A4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PreviousNextSwitchWidget"));
		return ptr;
	}



	void SwitchToPrevious();
	void SwitchToNext();
	void OnSwitchClickedDelegate__DelegateSignature(int widgetArrayIndex, int Index);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Prisoner
// 0x1E98 (FullSize[0x2560] - InheritedSize[0x06C8])
class APrisoner : public AConZCharacter
{
public:
	unsigned char                                      UnknownData_IXUQ[0x8];                                     // 0x06C8(0x0008) Fix Super Size
	unsigned char                                      UnknownData_NWRW[0x20];                                    // 0x06D0(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrisonerLifeComponent*                      LifeComponent;                                             // 0x06F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrisonerSkillComponent*                     SkillComponent;                                            // 0x06F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrisonerInventoryComponent*                 InventoryComponent;                                        // 0x0700(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeleeCombatComponent*                       MeleeCombatComponent;                                      // 0x0708(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHitReactComponent*                          HitReactComponent;                                         // 0x0710(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicalAnimationComponent*                 PhysicalAnimationComponent;                                // 0x0718(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInteractionComponent*                       InteractionComponent;                                      // 0x0720(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPawnSensingComponent*                       SensingComponent;                                          // 0x0728(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBaseInteractionComponent*                   BaseInteractionComponent;                                  // 0x0730(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      FemaleAnimationInstance;                                   // 0x0738(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      MaleAnimationInstance;                                     // 0x0740(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxActorEyesOffsetWhenLeaning;                             // 0x0748(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumberOfCrouchStages;                                      // 0x074C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CrouchStagesInterpSpeed;                                   // 0x0750(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U73W[0x4];                                     // 0x0754(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 CrouchViewsAdditionalGlobalOffsetZVsCrouchStage;           // 0x0758(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProneEyeHeight;                                            // 0x0760(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProneEyeForwardOffset;                                     // 0x0764(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SittingOnGroundEyeHeight;                                  // 0x0768(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LyingOnGroundEyeHeight;                                    // 0x076C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RestingOnGroundBackwardOffset;                             // 0x0770(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EPrisonerMovementPace                         DefaultPace;                                               // 0x0774(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZK5F[0x3];                                     // 0x0775(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrisonerMovementSettings*                   MovementSettings;                                          // 0x0778(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Fatness;                                                   // 0x0780(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Leanness;                                                  // 0x0784(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IgnoreMovementSettings;                                    // 0x0788(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               OverrideAimOffset;                                         // 0x0789(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1QTP[0x2];                                     // 0x078A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    AimOffsetOverride;                                         // 0x078C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              DefaultViewBlendDuration;                                  // 0x0798(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HNRP[0x4];                                     // 0x079C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      EyesLookAtTargetOverride;                                  // 0x07A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinEyesRotationYaw;                                        // 0x07A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxEyesRotationYaw;                                        // 0x07AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinEyesRotationPitch;                                      // 0x07B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxEyesRotationPitch;                                      // 0x07B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 MinEyesRotationPitchCurve;                                 // 0x07B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 MaxEyesRotationPitchCurve;                                 // 0x07C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EyesRotationSpeed;                                         // 0x07C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DebugEyesRotation;                                         // 0x07CC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               OverrideEyesRotation;                                      // 0x07CD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2HQY[0x2];                                     // 0x07CE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              EyesYawDeltaOverride;                                      // 0x07D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EyesPitchDeltaOverride;                                    // 0x07D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ComaAudioEvent;                                            // 0x07D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ComaScreamAudioEvent;                                      // 0x07E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               DeathAudioEvent;                                           // 0x07E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               DeathScreamAudioEvent;                                     // 0x07F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             ColdBreathParticles;                                       // 0x07F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ColdBreathParticlesAttachPointName;                        // 0x0800(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                           StandardUndershirtMaterial;                                // 0x0808(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                           DeluxeUndershirtMaterial;                                  // 0x0810(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               JumpAudioEvent;                                            // 0x0818(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LandingImpactSpeedVelocityXYWeight;                        // 0x0820(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LandingImpactSpeedVelocityZWeight;                         // 0x0824(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 LandingStaminaDrainCurve;                                  // 0x0828(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 LandingImpactSpeedModifierCurveForHitReact;                // 0x0830(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 LandingImpactSpeedModifierCurveForDamage;                  // 0x0838(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 LandingDamageCurve;                                        // 0x0840(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULandingEffects*                             LandingEffects;                                            // 0x0848(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LandingImpactSpeedForRagdoll;                              // 0x0850(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LandingMinRagdollDuration;                                 // 0x0854(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LandingMaxRagdollDuration;                                 // 0x0858(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LandingRagdollDurationPerSpeedUnit;                        // 0x085C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             WaterParticlesWhenIdle;                                    // 0x0860(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             WaterParticlesWhenIdleInOcean;                             // 0x0868(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             WaterParticlesWhenMoving;                                  // 0x0870(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             WaterParticlesWhenMovingInOcean;                           // 0x0878(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             WaterParticlesWhenDiving;                                  // 0x0880(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       WaterParticlesWhenDivingAttachPointName;                   // 0x0888(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             WaterContactParticles;                                     // 0x0890(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       WaterContactParticlesAttachPointName;                      // 0x0898(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinVelocityZToSpawnWaterContactParticles;                  // 0x08A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QO3T[0x4];                                     // 0x08A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 BuoyancyMultiplierVsGearWeightLimitDeviation;              // 0x08A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StartedDivingAudioEvent;                                   // 0x08B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StoppedDivingAudioEvent;                                   // 0x08B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               EndDivingOnPlayAudioEvent;                                 // 0x08C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxHeadWaterWeight;                                        // 0x08C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxUpperBodyWaterWeight;                                   // 0x08CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxLowerBodyWaterWeight;                                   // 0x08D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxFeetWaterWeight;                                        // 0x08D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OutwardsWaterPropagationFactor;                            // 0x08D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InwardsWaterPropagationRate;                               // 0x08DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OutwardsWaterPropagationRate;                              // 0x08E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IYHK[0x4];                                     // 0x08E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 GettingDryRateVsSpeed;                                     // 0x08E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             SmallBleedingEffect;                                       // 0x08F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             LargeBleedingEffect;                                       // 0x08F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             UrineParticles;                                            // 0x0900(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       UrineParticlesAttachPointName;                             // 0x0908(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       UrineParticlesAttachPointSmallestName;                     // 0x0910(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       UrineParticlesAttachPointBiggestName;                      // 0x0918(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       UrineParticlesAttachPointFemaleName;                       // 0x0920(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DetectNearbyFoliageRadius;                                 // 0x0928(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinLocationDeltaToUpdateNearbyFoliage;                     // 0x092C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinSpeedToTriggerMovingThroughFoliageEffects;              // 0x0930(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinAngularSpeedToTriggerMovingThroughFoliageEffects;       // 0x0934(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShouldAutomaticallyBeSeenInFoliageByAIDistance;            // 0x0938(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HJQP[0x4];                                     // 0x093C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               OpenInventoryAudioEvent;                                   // 0x0940(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               CloseInventoryAudioEvent;                                  // 0x0948(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CharacterDetectionRadiusForIngameMusic;                    // 0x0950(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BulletFlybyDangerCooldown;                                 // 0x0954(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeadExplodeDamageThreshold;                                // 0x0958(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeleeDangerCooldown;                                       // 0x095C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeleeDangerRadius;                                         // 0x0960(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeleeDangerAngle;                                          // 0x0964(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PostReviveStateDuration;                                   // 0x0968(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsFriendly;                                                // 0x096C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K7X0[0x3];                                     // 0x096D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTag                                HitReactTypeWhenStanding;                                  // 0x0970(0x0008) (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                HitReactTypeWhenStandingInCombatMode;                      // 0x0978(0x0008) (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                HitReactTypeWhenStandingInCombatModeAndHoldingBlock;       // 0x0980(0x0008) (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                HitReactTypeWhenCrouching;                                 // 0x0988(0x0008) (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                HitReactTypeWhenProne;                                     // 0x0990(0x0008) (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                HitReactTypeWhenCaptured;                                  // 0x0998(0x0008) (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                MeleeAttackCapsulesAttachmentForItemInLHand;               // 0x09A0(0x0008) (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                MeleeAttackCapsulesAttachmentForItemInRHand;               // 0x09A8(0x0008) (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPrisonerMeleeAttackTypes                   MeleeAttackTypes;                                          // 0x09B0(0x0088) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                              MeleeTargetMaxDistance;                                    // 0x0A38(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeleeTargetMaxHeightDifference;                            // 0x0A3C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 MeleeTargetMaxConeHalfAngleVsDistanceToTarget;             // 0x0A40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeSpanAfterWhichMeleeAttacksBecomeInitial;               // 0x0A48(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanEverBeKnockedOutByMeleeAttack;                          // 0x0A4C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7X5H[0x3];                                     // 0x0A4D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<ConZ_EDamageMagnitudeType, float>             MeleeHitRagdollImpulseByDamageMagnitudeType;               // 0x0A50(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                              DefaultMeleeHitRagdollImpulse;                             // 0x0AA0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThrowModeActivationDelay;                                  // 0x0AA4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ThrowLaunchLocationSocketName;                             // 0x0AA8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 ThrowingPathBrightnessFromTimeCurve;                       // 0x0AB0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IslandBoundsCheckInterval;                                 // 0x0AB8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldOverrideCharacterTemplate;                           // 0x0ABC(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D1TH[0x3];                                     // 0x0ABD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCharacterTemplate                          CharacterTemplateOverride;                                 // 0x0AC0(0x0088) (Edit, NativeAccessSpecifierPublic)
	struct FAttachmentSocket                           LeftHandAttachmentSocket;                                  // 0x0B48(0x0010) (Edit, NativeAccessSpecifierPublic)
	struct FAttachmentSocket                           RightHandAttachmentSocket;                                 // 0x0B58(0x0010) (Edit, NativeAccessSpecifierPublic)
	struct FAttachmentSocket                           LeftShoulderHolsterSocket;                                 // 0x0B68(0x0010) (Edit, NativeAccessSpecifierPublic)
	struct FAttachmentSocket                           RightShoulderHolsterSocket;                                // 0x0B78(0x0010) (Edit, NativeAccessSpecifierPublic)
	class UPhysicalSurfacesData*                       PhysicalSurfacesData;                                      // 0x0B88(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JJ2B[0xC0];                                    // 0x0B90(0x00C0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    TabModeOpened;                                             // 0x0C50(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    TabModeClosed;                                             // 0x0C60(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    PanelsClosed;                                              // 0x0C70(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    HoveredActorChanged;                                       // 0x0C80(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    InteractedWithObject;                                      // 0x0C90(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HTZM[0x18];                                    // 0x0CA0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               RespawnOnKill;                                             // 0x0CB8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8XW7[0x3];                                     // 0x0CB9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              IKOffsetLeftFoot;                                          // 0x0CBC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IKOffsetRightFoot;                                         // 0x0CC0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CYHZ[0x4];                                     // 0x0CC4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _deluxeWristwatchClass;                                    // 0x0CC8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EPrisonerBorderCrossingPenalty                BorderCrossingPenalty;                                     // 0x0CD0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6G40[0x7];                                     // 0x0CD1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      ScopeWidget;                                               // 0x0CD8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      PlaceableActorItemsClass;                                  // 0x0CE0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      PlaceableActorFortificationsClass;                         // 0x0CE8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      PlaceableActorBaseBuildingClass;                           // 0x0CF0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      PlaceableActorBaseUpgradeClass;                            // 0x0CF8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxPossiblePlacedBlueprints;                               // 0x0D00(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LED1[0x4];                                     // 0x0D04(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    BorderCrossingPenaltyChange;                               // 0x0D08(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HBCU[0x58];                                    // 0x0D18(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrisonerAppearanceDataAsset*                _appearanceDataAsset;                                      // 0x0D70(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<ConZ_EPrisonerBorderCrossingPenalty, float>   _leavingTheIslandPenaltyTimes;                             // 0x0D78(0x0050) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ARP6[0x4];                                     // 0x0DC8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _gameEventOutOfBoundsDamage;                               // 0x0DCC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                           _itemPlacingMaterialAllowed;                               // 0x0DD0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                           _itemPlacingMaterialDisallowed;                            // 0x0DD8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _ikInterpSpeed;                                            // 0x0DE0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VM3Y[0x4];                                     // 0x0DE4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialParameterCollection*                _commonParameterCollection;                                // 0x0DE8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AQKY[0x158];                                   // 0x0DF0(0x0158) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrisonerBodySimulationComponent*            _bodySimulationComponent;                                  // 0x0F48(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserProfile*                                _userProfile;                                              // 0x0F50(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     _userId;                                                   // 0x0F58(0x0010) (Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDbIntegerId                                _serverUserProfileId;                                      // 0x0F68(0x0008) (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     _userProfileName;                                          // 0x0F70(0x0010) (Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     _userFakeName;                                             // 0x0F80(0x0010) (Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Z67O[0x100];                                   // 0x0F90(0x0100) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isEnabled;                                                // 0x1090(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WEFS[0x7];                                     // 0x1091(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystemComponent*                    _waterParticlesComponentWhenIdle;                          // 0x1098(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*                    _waterParticlesComponentWhenMoving;                        // 0x10A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*                    _waterParticlesComponentWhenDiving;                        // 0x10A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_92PY[0x6];                                     // 0x10B0(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ConZ_EPrisonerStance                               _desiredStance;                                            // 0x10B6(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_D4KH[0xD];                                     // 0x10B7(0x000D) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _targetCrouchStage;                                        // 0x10C4(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EPrisonerMovementPace                         _desiredPace;                                              // 0x10C8(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ASWQ[0x2];                                     // 0x10C9(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _freeLookEnabled;                                          // 0x10CB(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldIgnoreHeadTurningAndLeaning;                        // 0x10CC(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5K86[0x27];                                    // 0x10CD(0x0027) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _postFreeLookControllerRotationBlendActive;                // 0x10F4(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VTGD[0xF];                                     // 0x10F5(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    _repAimOffset;                                             // 0x1104(0x000C) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7SNK[0x10];                                    // 0x1110(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _inDanger;                                                 // 0x1120(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YZ6K[0x17];                                    // 0x1121(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     _lastSafeLocation;                                         // 0x1138(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HO9E[0x4];                                     // 0x1144(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class APrisonerCorpse*                             _lastCorpse;                                               // 0x1148(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APrisonerCorpse*                             _lastEventCorpse;                                          // 0x1150(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TE05[0x1C];                                    // 0x1158(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _targetLeanAmount;                                         // 0x1174(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_J2V0[0x7A8];                                   // 0x1178(0x07A8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      _meleeTarget;                                              // 0x1920(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BVYR[0x8];                                     // 0x1928(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMeleeSkill*                                 _activeMeleeSkill;                                         // 0x1930(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_443O[0x10];                                    // 0x1938(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      _rotationTarget;                                           // 0x1948(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUnarmedCombatInputRedirector*               _unarmedCombatInputRedirector;                             // 0x1950(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkillEventHandler*                          _skillEventHandler;                                        // 0x1958(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7A2C[0x20];                                    // 0x1960(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       _weaponSocketName;                                         // 0x1980(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _weaponHolsterSocketName;                                  // 0x1988(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AWeapon*                                     _weapon;                                                   // 0x1990(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AItem*                                       _itemInHands;                                              // 0x1998(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7CVR[0x1D];                                    // 0x19A0(0x001D) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ConZ_EScopingWithItemInHandsState                  _scopingWithItemInHandsState;                              // 0x19BD(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OE9O[0x2A];                                    // 0x19BE(0x002A) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ConZ_EWeaponAimingType                             _weaponAimingType;                                         // 0x19E8(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8A9V[0x1F];                                    // 0x19E9(0x001F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _itemInHandsVisualObstructionDepthRep;                     // 0x1A08(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TR61[0x7];                                     // 0x1A09(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                _swapWeapons;                                              // 0x1A10(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _swapItemsThrowingItemToWeapon;                            // 0x1A18(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _swapItemsWeaponToThrowingItem;                            // 0x1A20(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _swapItemsNotWeaponToNotWeapon;                            // 0x1A28(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _swapItemsWeaponToWeapon;                                  // 0x1A30(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _swapItemsNotWeaponToWeapon;                               // 0x1A38(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _swapItemsWeaponToNotWeapon;                               // 0x1A40(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _equipRifleStanding;                                       // 0x1A48(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _unequipRifleStanding;                                     // 0x1A50(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _equipHandgunStanding;                                     // 0x1A58(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _unequipHadgunStanding;                                    // 0x1A60(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _urinateMaleMontage;                                       // 0x1A68(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _urinateFemaleMontage;                                     // 0x1A70(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _urinateMaleForcedMontage;                                 // 0x1A78(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _urinateFemaleForcedMontage;                               // 0x1A80(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _defecateMontage;                                          // 0x1A88(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _defecateForcedMontage;                                    // 0x1A90(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _vomitMontage;                                             // 0x1A98(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _vomitForcedMontage;                                       // 0x1AA0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _searchObject;                                             // 0x1AA8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _searchObjectWhileItemInHands;                             // 0x1AB0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _searchObjectWhileWeaponInHands;                           // 0x1AB8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _searchObjectWhenSwimming;                                 // 0x1AC0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _searchPrisoner;                                           // 0x1AC8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _patchWoundsStanding;                                      // 0x1AD0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _patchWoundsCrouching;                                     // 0x1AD8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _patchWoundsProne;                                         // 0x1AE0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _patchWoundsStandingEnd;                                   // 0x1AE8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _patchWoundsCrouchingEnd;                                  // 0x1AF0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _patchWoundsProneEnd;                                      // 0x1AF8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _eatGeneric;                                               // 0x1B00(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _eatCan;                                                   // 0x1B08(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _drinkFromBottleStanding;                                  // 0x1B10(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _drinkFromBottleCrouching;                                 // 0x1B18(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _drinkInteraction;                                         // 0x1B20(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _defaultLongThrowMontage;                                  // 0x1B28(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _defaultLongThrowLoopMontage;                              // 0x1B30(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _defaultShortThrowMontage;                                 // 0x1B38(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _defaultThrowbackGrenadeMontage;                           // 0x1B40(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _chopTreeStanding;                                         // 0x1B48(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _chopTreeStandingEnd;                                      // 0x1B50(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _chopLogStanding;                                          // 0x1B58(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _chopLogStandingEnd;                                       // 0x1B60(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _craftStanding;                                            // 0x1B68(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _craftCrouching;                                           // 0x1B70(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _craftProne;                                               // 0x1B78(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _uncraftStanding;                                          // 0x1B80(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _uncraftCrouching;                                         // 0x1B88(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _uncraftProne;                                             // 0x1B90(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _checkTime;                                                // 0x1B98(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _checkTimeWhileItemInHands;                                // 0x1BA0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _checkTimeWhileWeaponInHands;                              // 0x1BA8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _forceUnlockStanding;                                      // 0x1BB0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _forceUnlockStandingEnd;                                   // 0x1BB8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _forceUnlockStandingStop;                                  // 0x1BC0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _spillMontage;                                             // 0x1BC8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureShowFinger;                                        // 0x1BD0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureStandSurrender;                                    // 0x1BD8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureWaveHi;                                            // 0x1BE0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureYouAreDead;                                        // 0x1BE8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureFY;                                                // 0x1BF0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gesturePoint;                                             // 0x1BF8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureHeart;                                             // 0x1C00(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureBallpalm;                                          // 0x1C08(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureFacepalm;                                          // 0x1C10(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureFingerGun;                                         // 0x1C18(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureLaughing;                                          // 0x1C20(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureSmellWave;                                         // 0x1C28(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureSquat;                                             // 0x1C30(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureCharge;                                            // 0x1C38(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureChargeCombat;                                      // 0x1C40(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureFreeze;                                            // 0x1C48(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureFreezeCombat;                                      // 0x1C50(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureGetDown;                                           // 0x1C58(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureGetDownCombat;                                     // 0x1C60(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureGetUp;                                             // 0x1C68(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureGetUpCombat;                                       // 0x1C70(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureHalt;                                              // 0x1C78(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureHaltCombat;                                        // 0x1C80(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureHurryUp;                                           // 0x1C88(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureHurryUpCombat;                                     // 0x1C90(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gesturePointMe;                                           // 0x1C98(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gesturePointMeCombat;                                     // 0x1CA0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gesturePointYou;                                          // 0x1CA8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gesturePointYouCombat;                                    // 0x1CB0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureRally;                                             // 0x1CB8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureRallyCombat;                                       // 0x1CC0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureThumbsUp;                                          // 0x1CC8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureThumbsUpCombat;                                    // 0x1CD0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureThumbsDown;                                        // 0x1CD8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureThumbsDownCombat;                                  // 0x1CE0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureUnderstandNot;                                     // 0x1CE8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureUnderstandNotCombat;                               // 0x1CF0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureUnderstandYes;                                     // 0x1CF8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gestureUnderstandYesCombat;                               // 0x1D00(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _commitSuicideStanding;                                    // 0x1D08(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _commitSuicideCrouching;                                   // 0x1D10(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _commitSuicideRareStanding;                                // 0x1D18(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _lockpickRegular;                                          // 0x1D20(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _whistleMontage;                                           // 0x1D28(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _tuneBowMontage;                                           // 0x1D30(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _repairVehicleMontage;                                     // 0x1D38(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _washClothMontage;                                         // 0x1D40(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _buryStandingMontage;                                      // 0x1D48(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _buryRestStandingMontage;                                  // 0x1D50(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _buryResumeStandingMontage;                                // 0x1D58(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _buryCrouchingMontage;                                     // 0x1D60(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _buryRestCrouchingMontage;                                 // 0x1D68(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _sitOnGroundStandingStartMontage;                          // 0x1D70(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _sitOnGroundStandingEndMontage;                            // 0x1D78(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _sitOnGroundCrouchingStartMontage;                         // 0x1D80(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _sitOnGroundCrouchingEndMontage;                           // 0x1D88(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _layOnGroundStandingStartMontage;                          // 0x1D90(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _layOnGroundStandingEndMontage;                            // 0x1D98(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _layOnGroundCrouchingStartMontage;                         // 0x1DA0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _layOnGroundCrouchingEndMontage;                           // 0x1DA8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _sittingOnGroundAnimation;                                 // 0x1DB0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _lyingOnGroundAnimation;                                   // 0x1DB8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _lightFlareMontage;                                        // 0x1DC0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _armTrapMontage;                                           // 0x1DC8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPrisonerTurnMontageDescription             _turnMontageDescription;                                   // 0x1DD0(0x0030) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DCHE[0xB8];                                    // 0x1E00(0x00B8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _respawnTime;                                              // 0x1EB8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_T4TF[0x34];                                    // 0x1EBC(0x0034) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _appearanceIndex;                                          // 0x1EF0(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _tattooIndex;                                              // 0x1EF4(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _breastSizeDesired;                                        // 0x1EF8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _breastSizeModifier;                                       // 0x1EFC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _breastSizePacked;                                         // 0x1F00(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FBIA[0x3];                                     // 0x1F01(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _penisSizeDesired;                                         // 0x1F04(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _penisSizeModifier;                                        // 0x1F08(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _penisSizePacked;                                          // 0x1F0C(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_H2TO[0x3];                                     // 0x1F0D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _bellyJiggleAmountCached;                                  // 0x1F10(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _breastJiggleAmountCached;                                 // 0x1F14(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_N11V[0x20];                                    // 0x1F18(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isInCombatMode;                                           // 0x1F38(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9BNZ[0x7];                                     // 0x1F39(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _minThrowItemSpeed;                                        // 0x1F40(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxThrowItemSpeed;                                        // 0x1F44(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_K3X4[0x8];                                     // 0x1F48(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _minScreenCenterDotOpacityDecreaseDelay;                   // 0x1F50(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxScreenCenterDotOpacityDecreaseDelay;                   // 0x1F54(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _screenCenterDotOpacityDecrease;                           // 0x1F58(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _screenCenterDotOpacityIncrease;                           // 0x1F5C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _shortThrowReductionMultiplier;                            // 0x1F60(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _throwingObstacleCheckOffset;                              // 0x1F64(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _throwingObstacleOffset;                                   // 0x1F68(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DLMP[0x3C];                                    // 0x1F6C(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 _focusModeZoomEffectCurve;                                 // 0x1FA8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _focusModeZoomSpeed;                                       // 0x1FB0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_D2I9[0xC];                                     // 0x1FB4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AItem*                                       _leftShoulderHolsteredItemReplicated;                      // 0x1FC0(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BKNH[0x8];                                     // 0x1FC8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AItem*                                       _rightShoulderHolsteredItemReplicated;                     // 0x1FD0(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QQ0Y[0x38];                                    // 0x1FD8(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UCircularMenuSegmentInfo*>            _selfInteractionSegmentInfo;                               // 0x2010(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NGH5[0x8];                                     // 0x2020(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTimerHandle                                _interactDefaultContextMenuTimerHandle;                    // 0x2028(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class APrisoner*>                           _examinedBy;                                               // 0x2030(0x0010) (Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*                    _tacticsBlobMaterial;                                      // 0x2040(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UParticleSystemComponent*>            _bodyPartEffects;                                          // 0x2048(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UBondageComponent*                           _handsBondage;                                             // 0x2058(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPrisonerThrowComponent*                     _throwingComponent;                                        // 0x2060(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KVES[0xC];                                     // 0x2068(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AItemDropPlaceholder>         _itemDropPlaceholder;                                      // 0x2074(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9ZK3[0x4];                                     // 0x207C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UObject>                      _currentlyDroppingItem;                                    // 0x2080(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UCharacterAction*>                    _actionsList;                                              // 0x2088(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_W1JC[0x30];                                    // 0x2098(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint32_t                                           _packedWaterWeight;                                        // 0x20C8(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_F68U[0x8];                                     // 0x20CC(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _wetnessReachableFromSkyChecksInterval;                    // 0x20D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_J2LB[0x14];                                    // 0x20D8(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _inventoryDamageOnMeleeAttack;                             // 0x20EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGameEventBase*                              _gameEvent;                                                // 0x20F0(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPrisonerLoadout*                            _gameEventLoadout;                                         // 0x20F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Y17Z[0x10];                                    // 0x2100(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPrisonerNearbyFoliageInfo                  _nearbyFoliageInfo;                                        // 0x2110(0x0010) (ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FPrisonerNearbyFoliageInfo                  _collidingNearbyFoliageInfo;                               // 0x2120(0x0010) (ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QVH3[0xC0];                                    // 0x2130(0x00C0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWidgetComponent*                            _nameWidgetComponent;                                      // 0x21F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _chipLightColorIndex;                                      // 0x21F8(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_R0AH[0x4];                                     // 0x21FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBaseItemTag*                                SaveSpawnLocationTag;                                      // 0x2200(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QIMZ[0x1C];                                    // 0x2208(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isDeluxePlayer;                                           // 0x2224(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YO14[0x3];                                     // 0x2225(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _dedicatedServerHandleFootstepInterval;                    // 0x2228(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BFYX[0x4];                                     // 0x222C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class APrisoner>                    _examinedPrisoner;                                         // 0x2230(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _killClaimed;                                              // 0x2238(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MONO[0x1F];                                    // 0x2239(0x001F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ConZ_EPlayingInstrumentState                       _playingInstrumentState;                                   // 0x2258(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Z144[0x1];                                     // 0x2259(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ConZ_ECarryingItemState                            _carryingItemState;                                        // 0x225A(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QIN0[0xD];                                     // 0x225B(0x000D) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _playInstrumentEventNetworkDelay;                          // 0x2268(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CPAC[0x8];                                     // 0x226C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _playInstrumentExitStateDuration;                          // 0x2274(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SYZY[0x18];                                    // 0x2278(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _breastSizeMin;                                            // 0x2290(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _breastSizeMax;                                            // 0x2294(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _breastSizeDeluxeModifier;                                 // 0x2298(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _breastSizeAdminModifier;                                  // 0x229C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _penisLocationLean;                                        // 0x22A0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _penisLocationFat;                                         // 0x22AC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _penisHandleLocationLean;                                  // 0x22B8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _penisHandleLocationFat;                                   // 0x22C4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _penisMinSizeHandleZ;                                      // 0x22D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _penisMaxSizeHandleZ;                                      // 0x22D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldShowPenisOverride;                                  // 0x22D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_09K7[0x3];                                     // 0x22D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _penisSizeMin;                                             // 0x22DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _penisSizeMax;                                             // 0x22E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _penisSizeDeluxeModifier;                                  // 0x22E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _penisSizeAdminModifier;                                   // 0x22E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TJ65[0x8];                                     // 0x22EC(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _mountSpeedThreshold;                                      // 0x22F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _unmountSpeedThreshold;                                    // 0x22F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _unmountInputVelocityThreshold;                            // 0x22FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _unmountSpeedThresholdForRagdoll;                          // 0x2300(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mountTiltAngleForRagdoll;                                 // 0x2304(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AR9S[0x18];                                    // 0x2308(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPrisonerMountReplication                   _repMount;                                                 // 0x2320(0x0010) (Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	class UMIDIDeviceController*                       _midiDeviceController;                                     // 0x2330(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_H2E0[0x38];                                    // 0x2338(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _rareSuicideAnimationChance;                               // 0x2370(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _hasInfiniteAmmo;                                          // 0x2374(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isInGodMode;                                              // 0x2375(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isImmortal;                                               // 0x2376(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6G1H[0x21];                                    // 0x2377(0x0021) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _hairLength;                                               // 0x2398(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _facialHairLength;                                         // 0x239C(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4WWI[0xC];                                     // 0x23A0(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _hairGrowthTotalTime;                                      // 0x23AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _facialHairGrowthTotalTime;                                // 0x23B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _hairUpdateRate;                                           // 0x23B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _characterActionPlayRateMultiplier;                        // 0x23B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _enablePerComponentReplicationFrequency;                   // 0x23BC(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NYLN[0x3];                                     // 0x23BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _componentsReplicationFrequency[0x6];                      // 0x23C0(0x0018) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_P97N[0x3C];                                    // 0x23D8(0x003C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _maxRestingAngle;                                          // 0x2414(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DP5P[0x28];                                    // 0x2418(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UNavigationInvokerComponent*                 _navigationInvokerComponent;                               // 0x2440(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_I4X3[0x44];                                    // 0x2448(0x0044) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _genericAcceptanceRadius;                                  // 0x248C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _distanceWhereRotationStarts;                              // 0x2490(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_D85Z[0xC];                                     // 0x2494(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTag                                LegsInjuryTag;                                             // 0x24A0(0x0008) (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ICD6[0x56];                                    // 0x24A8(0x0056) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isLimping;                                                // 0x24FE(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XXRM[0x15];                                    // 0x24FF(0x0015) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ConZ_EVehicleWeaponAimingStance                    _vehicleWeaponAimingStance;                                // 0x2514(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M991[0x2B];                                    // 0x2515(0x002B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _vehicleAimingYawReplicated;                               // 0x2540(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7Y47[0xC];                                     // 0x2544(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _hasExplodedHead;                                          // 0x2550(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N289[0xF];                                     // 0x2551(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Prisoner"));
		return ptr;
	}



	void UpdateZoomEffect(float Fraction);
	void UpdateWristwatchVisibility();
	void UpdateSquadPanel();
	void UpdatePenisVisibility();
	void UpdateHairVisuals();
	void UpdateHairVisibility();
	void UpdateDeluxePlayerStatus();
	void UpdateChipLightColorIndex();
	void UpdateCensoring();
	void UpdateBodyArmorVisibility();
	void TryInteractDefault();
	void ToggleWantsToHoldBlock();
	void ToggleSquadPanel();
	void ToggleJournalPanel();
	void ToggleEventsPanel();
	void ToggleCraftingPanel();
	void Teleport(const struct FPrisonerTeleportRequest& request);
	void TakeItemInHandsOnServer(class AItem* Item);
	void TakeItemInHands(class AItem* Item);
	void TabModeOpened__DelegateSignature(ConZ_ETabMode tabMode);
	void TabModeClosed__DelegateSignature();
	void StopInteraction();
	void StartSecondaryMeleeAttack();
	void StartPrimaryMeleeAttack();
	void StartMeleeDodge(ConZ_EDodgeDirectionType Direction);
	void StartMeleeAttack(const struct FGameplayTag& meleeAttackType);
	void StartComboMeleeAttack();
	void ShowSpawnScreen(bool loadoutMenu);
	bool ShouldLookatMeleeTarget();
	bool ShouldIgnoreRotation();
	void SetWristwatchBrightness(float Value);
	void SetWeaponsVisibility(bool visible);
	void SetWeaponOnClient(class AWeapon* Weapon);
	void SetWeaponAimingTypeOnServer(ConZ_EWeaponAimingType Value);
	void SetTattooIndex(int TattooIndex);
	void SetTargetOnServer(class AActor* Target);
	void SetTargetLeanAmountOnServer(float Value);
	void SetTargetCrouchStage(float Value);
	void SetStrengthOnServer(float Value);
	void SetStrength(float Value);
	void SetStance(ConZ_EPrisonerStance Value);
	void SetShouldIgnoreHeadTurningAndLeaning(bool Value);
	void SetRotationTarget(class AActor* rotationTarget);
	void SetPlayerSoundLevel(float Value);
	void SetPartWaterWeight(ConZ_EPrisonerWettablePart part, float Value);
	void SetOverrideIsLimping(bool Value);
	void SetNightVisionEnabled(bool Value);
	void SetNameTextVisibilityForAll(bool visible);
	void SetNameTextVisibility(bool visible);
	bool SetMidiDeviceByName(const struct FString& Name);
	bool SetMidiDeviceByIndex(int Index);
	void SetMeleeTargetSelectionMode(ConZ_EPrisonerMeleeTargetSelectionMode Value);
	void SetMeleeTarget(class AActor* Value);
	void SetItemInHandsOnClient(class AItem* Item);
	void SetIsLimpingOverrideEnabled(bool Value);
	void SetIsInCombatModeOnServer(bool Value);
	void SetIsInCombatMode(bool Value);
	void SetIsEnabled(bool Value);
	void SetIntelligenceOnServer(float Value);
	void SetIntelligence(float Value);
	void SetHairLength(float Value);
	void SetGameEventLoadout(class UClass* primary, TArray<class UClass*> primaryAttachments, class UClass* secondary, TArray<class UClass*> secondaryAttachments, class UClass* tertiary, TArray<class UClass*> tertiaryAttachments, TArray<class UClass*> outfit, TArray<class UClass*> support);
	void SetGameEvent(class AGameEventBase* gameEvent);
	void SetFreeLookEnabledOnServer(bool Value);
	void SetFreeLookEnabled(bool Value);
	void SetFacialHairLength(float Value);
	void SetDexterityOnServer(float Value);
	void SetDexterity(float Value);
	void SetDesiredPaceOnServer(unsigned char Value);
	void SetDesiredPace(ConZ_EPrisonerMovementPace Value);
	void SetDesiredLeanAmount(float Value);
	void SetCrouchStage(float Value);
	void SetConstitutionOnServer(float Value);
	void SetConstitution(float Value);
	void SetAppearanceIndex(int AppearanceIndex);
	void Server_UnpackAmmoBox(class AAmmunitionBoxItem* Item);
	void Server_Unmount();
	void Server_UnloadAmmoFromMagazine(class AWeaponAttachmentMagazine* magazine);
	void Server_TurnPrisonerInPlace(float turnAngle);
	void Server_ThrowRequested();
	void Server_SyncWeaponState(class AWeapon* Weapon, TArray<struct FAmmunitionData> LoadedAmmoData, TArray<struct FAmmunitionData> InternalMagazineAmmoData, class UClass* LoadedProjectileClass, bool IsChamberOpened);
	void Server_SwapWeaponAttachments(class AWeapon* Weapon, class AWeaponAttachment* oldAttachment, class AWeaponAttachment* newAttachment);
	void Server_StoreAmmoInAmmoBox(class AAmmunitionItem* ammo, class AAmmunitionBoxItem* Box);
	void Server_SplitAmmo(class AAmmunitionItem* ammoitem);
	void Server_SpawnScreenWakeUp();
	void Server_SetVehicleWeaponAimingStance(ConZ_EVehicleWeaponAimingStance Stance);
	void Server_SetVehicleAimingYaw(float Angle);
	void Server_SetTargetCrouchStage(float Value);
	void Server_SetShouldIgnoreHeadTurning(bool Value);
	void Server_SetScopingWithItemInHandsState(ConZ_EScopingWithItemInHandsState Value);
	void Server_SetRotationTarget(class AActor* rotationTarget);
	void Server_SetPlayingInstrumentState(ConZ_EPlayingInstrumentState Value);
	void Server_SetMeleeTarget(class AActor* Value);
	void Server_SetItemInHandsVisualObstructionDepth(float Value);
	void Server_SetItemInHandsActualObstructionDepth(float Value);
	void Server_SetExaminedPrisoner(class APrisoner* Prisoner);
	void Server_SetDangerCooldown(float cooldown, class APrisoner* Prisoner);
	void Server_SetCarryingItemState(ConZ_ECarryingItemState State);
	void Server_RespawnAtCommonSpawnLocation(ConZ_EPrisonerCommonSpawnLocation commonSpawnLocation, const struct FName& spawnTag);
	void Server_RequestCharacterAction(const struct FCharacterActionReplicationHelper& Value);
	void Server_ReportVote(bool Vote);
	void Server_RemoveNearbyFoliageInstances(TArray<struct FPrisonerNearbyFoliageInstanceInfoReplicated> replicatedInstanceInfo);
	void Server_RemoveInventoryNode(class UObject* Item, class UObject* container, const struct FInventoryPositionDataRepHelper& position, class UObject* Target);
	void Server_PropagateFootstepEnhancerSound();
	void Server_OnProjectileArrowStop(const struct FHitResult& HitResult, const struct FProjectileArrowData& ProjectileData, const struct FVector& Location, const struct FRotator& Rotation);
	void Server_OnLockpickingProtectionTriggered(class UObject* Lockpickable, float Damage, class UParticleSystem* Particles, class UAkAudioEvent* audio, const struct FVector& ParticlesScale);
	void Server_Mount(class UObject* Slot);
	void Server_lockpickingEnded(class UObject* Lockpickable, bool succeeded, const struct FConZBaseElementIdentifier& lockpickableBaseElement);
	void Server_LoadAmmoIntoMagazine(class AAmmunitionItem* AmmunitionItem, class AWeaponAttachmentMagazine* magazine, int count);
	void Server_JumpOffLadder();
	void Server_JoinAmmo(class AAmmunitionItem* finalItem, class AAmmunitionItem* initiatingItem);
	void Server_InteractWithLadder(const struct FVector& traceOrigin, const struct FVector& traceDirection);
	void Server_InstrumentStopTone(ConZ_EPlayableInstrumentTone tone, float timeOffset, int octave);
	void Server_InstrumentPlayTone(ConZ_EPlayableInstrumentTone tone, float timeOffset, int octave);
	void Server_InstrumentOctaveUp();
	void Server_InstrumentOctaveDown();
	void Server_InitiateCraftedUpgradePlacement(const struct FConZBaseElementIdentifier& elementToBeUpgraded, class UPlaceableCraftableItem* upgradeRecipe, const struct FTransform& Transform);
	void Server_InitiateCraftedPlacement(int craftableIndex);
	void Server_HandleGearMotion(ConZ_EMotionIntensity motionIntensity, bool shouldMakeNoise);
	void Server_HandleFootstep(ConZ_EMotionIntensity motionIntensity, bool shouldMakeNoise);
	void Server_DestroyPlaceable(const struct FDbIntegerId& ID);
	void Server_DamageLockpickingTools(class AItem* lockpick, class AItem* tensionTool);
	void Server_CommitSuicide();
	void Server_ClimbWindow();
	void Server_Climb();
	void Server_ClearDangerCooldown();
	void Server_CharacterActionAck(const struct FCharacterActionAck& ack);
	void Server_ApplyPointDamage(float Damage, const struct FHitResult& HitResult);
	void Server_AIMovementFinished(bool wasSuccessful);
	void Server_AddNearbyFoliageInstances(TArray<struct FPrisonerNearbyFoliageInstanceInfoReplicated> replicatedInstanceInfo);
	void Server_AddInventoryNode(class UObject* Item, class UObject* container, const struct FInventoryPositionDataRepHelper& position, class UObject* Target);
	void SendSquadInvitationOnServer(class APrisoner* invited);
	void SendSquadInvitationOnClient(class APrisoner* invitor, const struct FString& invitorName);
	void SendMessageToClient(const struct FString& Message, bool beep);
	void RightShoulderHolsterInteract();
	void Revive();
	void RespawnAtCommonSpawnLocation(ConZ_EPrisonerCommonSpawnLocation commonSpawnLocation, const struct FName& spawnTag);
	void RequestRespawn(const struct FPrisonerTeleportRequest& request);
	void RequestCharacterAction(class UCharacterActionDescription* desc);
	void RemoveWeaponAttachment(class AWeapon* Weapon, class AWeaponAttachment* attachment);
	void RemoveItemFromHands(ConZ_EHandsHolstersType preferedHolsterType);
	void RemoveFromSquadOnServer(const struct FDbIntegerId& UserProfileId);
	void RemoveBondage();
	void RecoverLastSafeLocation();
	void RecalculateJiggleAmount();
	void PromoteSquadMemberOnServer(const struct FDbIntegerId& UserProfileId);
	void ProjectileDealDirectDamageOnServer(const struct FProjectilePointDamageEvent& ProjectilePointDamageEvent, const struct FSkillEventWeaponProjectileHitTarget& SkillEventWeaponProjectileHitTarget);
	void Preset4();
	void Preset3();
	void Preset2();
	void Preset1();
	void PlaceItemInInventoryOrHolster(class AItem* Item);
	void PanelsClosed__DelegateSignature();
	void OpenTabMode(ConZ_ETabMode Mode);
	void OpenInteractDefaultContextMenu();
	void OnRep_VehicleWeaponAimingStance();
	void OnRep_UserProfileName();
	void OnRep_UserFakeName();
	void OnRep_ThrowingComponent();
	void OnRep_TattooIndex();
	void OnRep_ScopingWithItemInHandsState();
	void OnRep_RotationTarget();
	void OnRep_RightShoulderHolsteredItem();
	void OnRep_PlayingInstrumentState();
	void OnRep_PenisSizePacked();
	void OnRep_PenisSize();
	void OnRep_PenisModifier();
	void OnRep_PackedWetness(uint32_t oldWetness);
	void OnRep_Mount();
	void OnRep_MeleeTarget();
	void OnRep_LeftShoulderHolsteredItem();
	void OnRep_ItemInHandsVisualObstructionDepth(unsigned char OldValue);
	void OnRep_ItemInHands();
	void OnRep_IsInCombatMode();
	void OnRep_IsEnabled();
	void OnRep_IsDeluxePlayer();
	void OnRep_InDanger();
	void OnRep_HasExplodedHead();
	void OnRep_HandBondage();
	void OnRep_HairLength();
	void OnRep_GameEvent();
	void OnRep_FreeLookEnabled();
	void OnRep_FacialHairLength();
	void OnRep_DesiredStance();
	void OnRep_DesiredPace();
	void OnRep_ChipLightColorIndex();
	void OnRep_CarryingItemState();
	void OnRep_BreastSizePacked();
	void OnRep_BreastSize();
	void OnRep_BreastModifier();
	void OnRep_AppearanceIndex();
	void OnRep_AimOffset();
	void OnPlaceableDestroyed(class AActor* Actor);
	void OnMovingThroughNearbyFoliageInstance(const struct FPrisonerNearbyFoliageInstanceInfo& instanceInfo, float DeltaTime);
	void OnMovementUpdated(float DeltaSeconds, const struct FVector& OldLocation, const struct FVector& OldVelocity);
	void OnMidiEvent(class UMIDIDeviceController* MIDIDeviceController, int Timestamp, MIDIDevice_EMIDIEventType EventType, int Channel, int ControlID, int Velocity, int RawEventType);
	void OnInteractDefaultContextMenuClosed();
	void OnHearNoise(class APawn* instigatorPawn, const struct FVector& Location, float Volume);
	void OnExaminedPrisonerUnequippedItem(class UPrisonerInventoryComponent* inventory, class AItem* Item);
	void OnExaminedPrisonerEquippedItem(class UPrisonerInventoryComponent* inventory, class AItem* Item);
	void OnEndMovingThroughNearbyFoliageInstance(const struct FPrisonerNearbyFoliageInstanceInfo& instanceInfo);
	void OnConcealedModeChanged(bool Value);
	void OnBorderCrossingPenaltyChange(class APrisoner* Prisoner, ConZ_EPrisonerBorderCrossingPenalty newPenalty);
	void OnBeginMovingThroughNearbyFoliageInstance(const struct FPrisonerNearbyFoliageInstanceInfo& instanceInfo);
	void NetMulticast_TurnPrisonerInPlace(float turnAngle);
	void NetMulticast_RequestCharacterAction(const struct FCharacterActionReplicationHelper& Value, bool ignoreAutonomousProxy);
	void NetMulticast_RemoveNearbyFoliageInstances(TArray<struct FPrisonerNearbyFoliageInstanceInfoReplicated> replicatedInstanceInfo);
	void NetMulticast_PostAudioEventOnPrisoner(class UAkAudioEvent* akEvent, bool multiCastToClients);
	void NetMulticast_PlayLocpickingProtectionEffects(class UObject* Lockpickable, class UParticleSystem* Particles, class UAkAudioEvent* audio, const struct FVector& ParticlesScale);
	void NetMulticast_PlayFootstepEnhancerSound();
	void NetMulticast_InstrumentStopTone(ConZ_EPlayableInstrumentTone tone, float timeOffset, int octave);
	void NetMulticast_InstrumentPlayTone(ConZ_EPlayableInstrumentTone tone, float timeOffset, int octave);
	void NetMulticast_InstrumentOctaveUp();
	void NetMulticast_InstrumentOctaveDown();
	void NetMulticast_HandleLanded(const struct FVector& ImpactVelocity, const struct FHitResult& HitResult);
	void NetMulticast_CharacterActionAck(const struct FCharacterActionAck& ack, bool ignoreAutonomousProxy);
	void NetMulticast_AIMovementFinished(bool wasSuccessful);
	void NetMulticast_AddNearbyFoliageInstances(TArray<struct FPrisonerNearbyFoliageInstanceInfoReplicated> replicatedInstanceInfo);
	void Multicast_ForceHairUpdate(float hairLength, float facialHairLength);
	void MakeUnconscious();
	void MakeConscious();
	void LifeComponent_StateRemoved(class UPrisonerLifeComponent* sender, ConZ_EBodyState State);
	void LifeComponent_StateAdded(class UPrisonerLifeComponent* sender, ConZ_EBodyState State);
	void LeftShoulderHolsterInteract();
	void LeaveSquadOnServer();
	void LeaveCombatMode(bool PlayAnimation, bool overrideAbilityCheck);
	bool IsThrowing();
	bool IsThrowAiming();
	bool IsTeleportInProgress();
	bool IsSquadInvitationReceived();
	bool IsPostFreeLookControllerRotationBlendActive();
	bool IsNightVisionEnabled();
	bool IsMemberOfMySquad(class APrisoner* Prisoner);
	bool IsMemberOf(class AConZSquad* Squad);
	bool IsLimping();
	bool IsInteracting();
	bool IsInPostReviveState();
	bool IsInDanger();
	bool IsInCombatMode();
	bool IsFreeLookEnabled();
	bool IsEnabled();
	bool IsCompletelyInitialized();
	bool IsAliveInGameEvent();
	bool IsActorMeleeTargetCandidate(class AActor* Actor);
	bool IsActivelyParticipatingInGameEvent();
	void InventoryComponent_ItemUnequipped(class UPrisonerInventoryComponent* sender, class AItem* Item);
	void InventoryComponent_ItemEquipped(class UPrisonerInventoryComponent* sender, class AItem* Item);
	void InteractWithObjectOnServer(class UObject* interactable, ConZ_EInteractionType interactionType, const struct FInteractionData& InteractionData);
	void InteractedDelegate__DelegateSignature(class APrisoner* sender, class UObject* interactable, ConZ_EInteractionType interactionType);
	void InitTextMeshFromName(const struct FString& Name);
	void InitFromCharacterTemplate(const struct FCharacterTemplate& CharacterTemplate);
	void IncreaseCrouchStage();
	void HoveredActorChanged__DelegateSignature(class AActor* hoveredActor);
	void HolsterItemOnServer(class AItem* Item, int attachmentSocketHelper);
	void HitReactComponent_StateChanged();
	void HideSpawnScreen();
	bool HasItemOfClass(class UClass* ItemClass);
	bool HasItem(class AItem* Item);
	bool HasHandsUp();
	bool HasHandBondage();
	bool HasCurrentMovementEffectOnNearbyFoliage();
	bool HasCharacterAction();
	class UChildActorComponent* GetWristwatchComponent();
	float GetWetness();
	float GetWeightLoad();
	struct FName GetWeaponSocketName();
	struct FName GetWeaponHolsterSocketName();
	class AWeapon* GetWeapon();
	struct FPrisonerWaterMovementParameters GetWaterMovementParameters();
	class USkeletalMeshComponent* GetWaistMeshComponent();
	class UVisionEffectsComponent* GetVisionEffectsComponent();
	ConZ_EVehicleWeaponAimingStance GetVehicleWeaponAimingStance();
	struct FString GetUserProfileName();
	class UUserProfile* GetUserProfile();
	struct FString GetUserId();
	struct FString GetUserActiveName();
	class UStaticMeshComponent* GetUpperMouthMeshComponent();
	class USkeletalMeshComponent* GetUpperHeadSkeletalMeshComponent();
	class UStaticMeshComponent* GetUpperHeadMeshComponent();
	class USkeletalMeshComponent* GetTorsoMeshComponent();
	class UPrisonerThrowComponent* GetThrowingComponent();
	int GetTattooIndex();
	float GetTargetCrouchStage();
	class UMaterialInstanceDynamic* GetTacticsBlobMaterial();
	struct FVector2D GetTabMouseMovement();
	ConZ_ETabMode GetTabMode();
	ConZ_EPrisonerStance GetStance();
	class AConZSquad* GetSquad();
	bool GetShouldIgnoreHeadTurningAndLeaning();
	struct FDbIntegerId GetServerUserProfileId();
	struct FRotator GetSavedSpawnRotation();
	bool GetSavedSpawnLocationActive();
	struct FVector GetSavedSpawnLocation();
	class AActor* GetRotationTarget();
	struct FRotator GetREyeRotationDelta();
	class UStaticMeshComponent* GetREyeMeshComponent();
	class UPrisonerMovementComponent* GetPrisonerMovement();
	class UPrisonerAnimInstance* GetPrisonerAnimInstance();
	float GetPenisSizeNormalized();
	float GetPenisSizeModified();
	class USkeletalMeshComponent* GetPenisMeshComponent();
	float GetPartWetness(ConZ_EPrisonerWettablePart part);
	float GetPartWaterWeight(ConZ_EPrisonerWettablePart part);
	bool GetOverrideIsLimping();
	class USkeletalMeshComponent* GetNeckMeshComponent();
	struct FPrisonerNearbyFoliageInfo GetNearbyFoliageInfo();
	ConZ_EMotionIntensity GetMotionIntensity();
	ConZ_EPrisonerMeleeTargetSelectionMode GetMeleeTargetSelectionMode();
	class AActor* GetMeleeTarget();
	float GetMaxPartWaterWeight(ConZ_EPrisonerWettablePart part);
	ConZ_EPrisonerMovementPace GetMaxAllowedPace();
	class UStaticMeshComponent* GetLowerMouthMeshComponent();
	class UStaticMeshComponent* GetLowerHeadMeshComponent();
	struct FRotator GetLookatMeleeTargetAimOffset();
	struct FRotator GetLEyeRotationDelta();
	class UStaticMeshComponent* GetLEyeMeshComponent();
	class USkeletalMeshComponent* GetLegsMeshComponent();
	class UParticleSystemComponent* GetLeavesComponent();
	float GetLeanAmount();
	struct FVector GetLastSafeLocation();
	class ACorpse* GetLastCorpse();
	class AItem* GetItemOfClass(class UClass* ItemClass);
	class AItem* GetItemInHands();
	bool GetIsLimpingOverrideEnabled();
	bool GetIsInFirstPersonView();
	ConZ_EHoldBreathState GetHoldBreathState();
	class USkeletalMeshComponent* GetHeadMeshComponent();
	class USkeletalMeshComponent* GetHandsMeshComponent();
	class UBondageComponent* GetHandBondage();
	class USkeletalMeshComponent* GetHairMeshComponent();
	float GetHairLength();
	struct FPrisonerGroundMovementParameters GetGroundMovementParameters();
	class AGameEventBase* GetGameEvent();
	class USkeletalMeshComponent* GetFeetMeshComponent();
	class USkeletalMeshComponent* GetFacialHairMeshComponent();
	float GetFacialHairLength();
	class UStaticMeshComponent* GetEyewearMeshComponent();
	ConZ_EPrisonerMovementPace GetDesiredPace();
	float GetDesiredLeanAmount();
	int GetCurrentMidiDeviceIndex();
	struct FGameplayTag GetCurrentHitReactType();
	float GetCrouchStage();
	ConZ_EPrisonerCombatMode GetCombatMode();
	struct FPrisonerNearbyFoliageInfo GetCollidingNearbyFoliageInfo();
	ConZ_EPrisonerMovementPace GetClampedDesiredPace();
	class UStaticMeshComponent* GetChipMeshComponent();
	class UCharacterAction* GetCharacterAction();
	float GetChanceToKnockoutTargetUsingMeleeAttack(class AActor* Target);
	class UBruisingComponent* GetBruisingComponent();
	float GetBreastSizeModified();
	float GetBreastJiggleAmount();
	class UPrisonerBodySimulationComponent* GetBodySimulationComponent();
	class USkeletalMeshComponent* GetBodyArmorMeshComponent();
	float GetBellyJiggleAmount();
	class USkeletalMeshComponent* GetBackpackMeshComponent();
	class USkeletalMeshComponent* GetArmsMeshComponent();
	int GetAppearanceIndex();
	float GetAngularVelocity();
	struct FRotator GetAimOffset();
	ConZ_EPrisonerMovementPace GetActualPace();
	bool GenitalsExposed();
	bool GameEventFriendlyFireCheck(class APrisoner* Other);
	void ForceDeluxePlayer();
	class AActor* FindNextOrPreviousMeleeTarget(class AActor* Target, bool Next);
	void ExamineItem(class AItem* Item);
	void EquipWeapon(class AWeapon* Weapon);
	void EquippedNightVisionGoggles_ActivatedChanged(class ANightVisionGogglesItem* Item);
	bool EnterCombatMode();
	void DropItemFromHands();
	bool DidGameEventRoundStarted();
	void DiarrheaOnServer();
	void DetonateHead(bool shouldDestroyHeadgear);
	void DestroyThrowingComponent();
	void DestroyPlaceable(const struct FDbIntegerId& ID);
	void DemoteSquadMemberOnServer(const struct FDbIntegerId& UserProfileId);
	void DecreaseCrouchStage();
	class UPrisonerThrowComponent* CreateThrowingComponent(class AItem* itemToThrow);
	void CreateSquadOnServer();
	void ConstructWristwatchChildActor();
	void CommitSuicide();
	bool ClosePanels(bool switchingTabs);
	void Client_SpawnScreenAllowWakeUp();
	void Client_ShowSpawnScreen(bool loadoutMenu);
	void Client_SetSavedSpawnLocation(bool Active, const struct FVector& Location, const struct FRotator& Rotation);
	void Client_RequestCharacterAction(const struct FCharacterActionReplicationHelper& Value, bool cancelExecutingAction);
	void Client_OnTakeDamage(float Damage, const struct FDamageEvent& DamageEvent, class AController* eventInstigator, class AActor* DamageCauser);
	void Client_OnNoiseInstigated(float NoiseLevel);
	void Client_OnAIDetectionTimerChanged(float detectionTimer);
	void Client_LogKill(class APrisoner* killer, const struct FString& killerUserProfileId);
	void Client_LoadAmmoIntoMagazine(class AWeaponAttachmentMagazine* magazine, TArray<struct FAmmunitionData> ammoData);
	void Client_Interact(class UObject* interactable, ConZ_EInteractionType interactionType, const struct FInteractionData& InteractionData);
	void Client_HighlightKeyboardOnDamage();
	void Client_HideSpawnScreen();
	void Client_FadeOutVision(float Duration);
	void Client_FadeInVision(float Duration);
	void ClearMalfunction(ConZ_EWeaponMalfunction malfunction);
	void ClearGameEventLoadout();
	void ClearEquipment();
	class AActor* ChooseFirstMeleeTarget();
	void CharacterAction_End(class UCharacterAction* Action);
	void ChangeSquadData(const struct FString& Name, const struct FString& Message, const struct FString& information, const struct FConZSquadEmblem& emblem);
	void CarryItem(class AItem* Item);
	void CapsuleComponent_PhysicsVolumeChanged(class APhysicsVolume* Volume);
	bool CanTakeItemInHands(class AItem* Item);
	bool CanOpenTabMode(ConZ_ETabMode Mode);
	bool CanLeaveCombatMode();
	bool CanHolsterWeaponToHolsterItem(class AWeapon* Weapon);
	bool CanEnterMeleeCombatMode();
	bool CanEnterCombatMode();
	void CancelSquadInvitationOnServer();
	void CancelSquadInvitationOnClient();
	void CancelInteractableDragging();
	int CalculateRespawnPriceBasedOnSquadSize(int defaultPrice, ConZ_EPrisonerCommonSpawnLocation SpawnLocation);
	float CalculateAIPerceptionPercentage();
	void BorderCrossingPenaltyChange__DelegateSignature(class APrisoner* sender, ConZ_EPrisonerBorderCrossingPenalty newPenalty);
	float BCU_GetSpeedModifier();
	float BCU_GetMovementSpeed(ConZ_EPrisonerMovementPace pace);
	float BCU_GetMeleeDamageBonus();
	float BCU_GetMaxMovementSpeed(ConZ_EPrisonerMovementPace pace);
	void BaseInteractionComponent_OnBaseInteractionEvent(class UBaseInteractionComponent* Component, const struct FBaseInteractionEvent& BaseInteractionEvent);
	bool AreBreastsExposed();
	void ApplyTattoos();
	void ApplySkinMaterials();
	void ApplyPenisSize();
	void ApplyHeadMesh();
	void ApplyBreastSize();
	void ApplyBodyMeshes();
	void ApplyAppearance();
	void AddWeaponAttachment(class AWeapon* Weapon, class AWeaponAttachment* attachment);
	void AddToSquadOnServer(const struct FDbIntegerId& squadId);
	void AddHandBondage(class AItem* bondageItem);
	void AcceptSquadInvitationOnServer(class AConZSquad* Squad, bool accepted);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerAction
// 0x0010 (FullSize[0x0108] - InheritedSize[0x00F8])
class UPrisonerAction : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_8CB4[0x10];                                    // 0x00F8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionDescription
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UPrisonerActionDescription : public UCharacterActionDescription
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionActivateSlot
// 0x0000 (FullSize[0x00F8] - InheritedSize[0x00F8])
class UPrisonerActionActivateSlot : public UCharacterAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionActivateSlot"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionActivateSlotDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionActivateSlotDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_74TQ[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionActivateSlotDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionAddWeaponAttachment
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionAddWeaponAttachment : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_4QMK[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionAddWeaponAttachment"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionAddWeaponAttachmentDescription
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UPrisonerActionAddWeaponAttachmentDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_9HM9[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionAddWeaponAttachmentDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionAlignTransform
// 0x0008 (FullSize[0x0110] - InheritedSize[0x0108])
class UPrisonerActionAlignTransform : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_SM9C[0x8];                                     // 0x0108(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionAlignTransform"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionAlignTransformDescription
// 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
class UPrisonerActionAlignTransformDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_3Y7B[0x60];                                    // 0x0030(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionAlignTransformDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionArtificialPerspiration
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionArtificialPerspiration : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_PKII[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionArtificialPerspiration"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionArtificialPerspirationDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionArtificialPerspirationDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_VEJ3[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionArtificialPerspirationDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionBuryItem
// 0x0020 (FullSize[0x0128] - InheritedSize[0x0108])
class UPrisonerActionBuryItem : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_OBDH[0x20];                                    // 0x0108(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionBuryItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.UPrisonerActionBuryItemDescription
// 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
class UUPrisonerActionBuryItemDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_O7N0[0x60];                                    // 0x0030(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.UPrisonerActionBuryItemDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionChainForExitingVehicle
// 0x0008 (FullSize[0x0110] - InheritedSize[0x0108])
class UPrisonerActionChainForExitingVehicle : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_0BLL[0x8];                                     // 0x0108(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionChainForExitingVehicle"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionChainForExitingVehicleDescription
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UPrisonerActionChainForExitingVehicleDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_ETXQ[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionChainForExitingVehicleDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionChangeStance
// 0x0010 (FullSize[0x0108] - InheritedSize[0x00F8])
class UPrisonerActionChangeStance : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_7729[0x10];                                    // 0x00F8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionChangeStance"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionChangeStanceDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionChangeStanceDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_9I4Y[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionChangeStanceDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionChangeStanceWaitEndOnOwningClient
// 0x0010 (FullSize[0x0118] - InheritedSize[0x0108])
class UPrisonerActionChangeStanceWaitEndOnOwningClient : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_9DNN[0x10];                                    // 0x0108(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionChangeStanceWaitEndOnOwningClient"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionChangeStanceWaitEndOnOwningClientDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionChangeStanceWaitEndOnOwningClientDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_DFYV[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionChangeStanceWaitEndOnOwningClientDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionChangeVehicleWeaponAimingStance
// 0x0008 (FullSize[0x0110] - InheritedSize[0x0108])
class UPrisonerActionChangeVehicleWeaponAimingStance : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_BTV6[0x8];                                     // 0x0108(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionChangeVehicleWeaponAimingStance"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionChangeVehicleWeaponAimingStanceDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionChangeVehicleWeaponAimingStanceDescription : public UPrisonerActionDescription
{
public:
	unsigned char                                      UnknownData_KHLD[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionChangeVehicleWeaponAimingStanceDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionChangeWeaponFiringMode
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionChangeWeaponFiringMode : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_TFN7[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionChangeWeaponFiringMode"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionChangeWeaponFiringModeModeDescription
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UPrisonerActionChangeWeaponFiringModeModeDescription : public UPrisonerActionDescription
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionChangeWeaponFiringModeModeDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionChargeVehicleBattery
// 0x0008 (FullSize[0x0110] - InheritedSize[0x0108])
class UPrisonerActionChargeVehicleBattery : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_NQEC[0x8];                                     // 0x0108(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionChargeVehicleBattery"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionChargeVehicleBatteryDescription
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
class UPrisonerActionChargeVehicleBatteryDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_R35Q[0x38];                                    // 0x0030(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionChargeVehicleBatteryDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionCheckChainsawFuelStatus
// 0x0000 (FullSize[0x0108] - InheritedSize[0x0108])
class UPrisonerActionCheckChainsawFuelStatus : public UPrisonerAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionCheckChainsawFuelStatus"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionCheckChainsawFuelStatusDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionCheckChainsawFuelStatusDescription : public UPrisonerActionDescription
{
public:
	unsigned char                                      UnknownData_Y7IV[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionCheckChainsawFuelStatusDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionCheckTime
// 0x0010 (FullSize[0x0108] - InheritedSize[0x00F8])
class UPrisonerActionCheckTime : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_70F0[0x10];                                    // 0x00F8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionCheckTime"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionCheckTimeDescription
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UPrisonerActionCheckTimeDescription : public UCharacterActionDescription
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionCheckTimeDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionCheckWeaponAmmo
// 0x0010 (FullSize[0x0118] - InheritedSize[0x0108])
class UPrisonerActionCheckWeaponAmmo : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_46LT[0x10];                                    // 0x0108(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionCheckWeaponAmmo"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionCheckWeaponAmmoDescription
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UPrisonerActionCheckWeaponAmmoDescription : public UPrisonerActionDescription
{
public:
	unsigned char                                      UnknownData_8K6J[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionCheckWeaponAmmoDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionCheckWeaponFiringMode
// 0x0010 (FullSize[0x0108] - InheritedSize[0x00F8])
class UPrisonerActionCheckWeaponFiringMode : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_JIL6[0x10];                                    // 0x00F8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionCheckWeaponFiringMode"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionCheckWeaponFiringModeDescription
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UPrisonerActionCheckWeaponFiringModeDescription : public UPrisonerActionDescription
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionCheckWeaponFiringModeDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionChopBaseElement
// 0x0000 (FullSize[0x0108] - InheritedSize[0x0108])
class UPrisonerActionChopBaseElement : public UPrisonerAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionChopBaseElement"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionChopBaseElementDescription
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UPrisonerActionChopBaseElementDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_KP3V[0x50];                                    // 0x0030(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionChopBaseElementDescription"));
		return ptr;
	}



	class UStaticMesh* GetBaseElementStaticMesh();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionChopItem
// 0x0008 (FullSize[0x0110] - InheritedSize[0x0108])
class UPrisonerActionChopItem : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_QYOV[0x8];                                     // 0x0108(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionChopItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionChopItemDescription
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UPrisonerActionChopItemDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_72EB[0x20];                                    // 0x0030(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionChopItemDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionClaimKill
// 0x0000 (FullSize[0x0108] - InheritedSize[0x0108])
class UPrisonerActionClaimKill : public UPrisonerAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionClaimKill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionClaimKillDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionClaimKillDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_YTF1[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionClaimKillDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionClearWeaponMalfunction
// 0x0010 (FullSize[0x0108] - InheritedSize[0x00F8])
class UPrisonerActionClearWeaponMalfunction : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_XF4U[0x10];                                    // 0x00F8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionClearWeaponMalfunction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionClearWeaponMalfunctionDescription
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UPrisonerActionClearWeaponMalfunctionDescription : public UPrisonerActionDescription
{
public:
	unsigned char                                      UnknownData_YOLG[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionClearWeaponMalfunctionDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionClimbOntoLadder
// 0x0000 (FullSize[0x0108] - InheritedSize[0x0108])
class UPrisonerActionClimbOntoLadder : public UPrisonerAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionClimbOntoLadder"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionClimbOntoLadderDescription
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UPrisonerActionClimbOntoLadderDescription : public UPrisonerActionDescription
{
public:
	unsigned char                                      UnknownData_B8LV[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionClimbOntoLadderDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionCommitSuicide
// 0x0000 (FullSize[0x00F8] - InheritedSize[0x00F8])
class UPrisonerActionCommitSuicide : public UCharacterAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionCommitSuicide"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionCommitSuicideDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionCommitSuicideDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_A4KR[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionCommitSuicideDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionCraftItem
// 0x0008 (FullSize[0x0110] - InheritedSize[0x0108])
class UPrisonerActionCraftItem : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_9AT8[0x8];                                     // 0x0108(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionCraftItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionCraftItemDescription
// 0x0088 (FullSize[0x00B8] - InheritedSize[0x0030])
class UPrisonerActionCraftItemDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_RSB3[0x88];                                    // 0x0030(0x0088) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionCraftItemDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionCutHair
// 0x0000 (FullSize[0x00F8] - InheritedSize[0x00F8])
class UPrisonerActionCutHair : public UCharacterAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionCutHair"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionCutHairDescription
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UPrisonerActionCutHairDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_MJJ6[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionCutHairDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionCutObject
// 0x0008 (FullSize[0x0110] - InheritedSize[0x0108])
class UPrisonerActionCutObject : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_WONJ[0x8];                                     // 0x0108(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionCutObject"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionCutObjectDescription
// 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
class UPrisonerActionCutObjectDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_N98J[0x40];                                    // 0x0030(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionCutObjectDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionDefecate
// 0x0010 (FullSize[0x0108] - InheritedSize[0x00F8])
class UPrisonerActionDefecate : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_K2G5[0x10];                                    // 0x00F8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionDefecate"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionDefecateDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionDefecateDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_LUZ6[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionDefecateDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionDrainVehicleFuelIntoItem
// 0x0008 (FullSize[0x0110] - InheritedSize[0x0108])
class UPrisonerActionDrainVehicleFuelIntoItem : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_YE3L[0x8];                                     // 0x0108(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionDrainVehicleFuelIntoItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionDrainVehicleFuelIntoItemDescription
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
class UPrisonerActionDrainVehicleFuelIntoItemDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_E1W4[0x38];                                    // 0x0030(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionDrainVehicleFuelIntoItemDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionDrinkFromReplenishableResource
// 0x0008 (FullSize[0x0110] - InheritedSize[0x0108])
class UPrisonerActionDrinkFromReplenishableResource : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_ARAI[0x8];                                     // 0x0108(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionDrinkFromReplenishableResource"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionDrinkFromReplenishableResourceDescription
// 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
class UPrisonerActionDrinkFromReplenishableResourceDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_CISY[0x40];                                    // 0x0030(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UGameResourceContainerProxyForReplenishableResource* ProxyForReplenishableResource;                             // 0x0070(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionDrinkFromReplenishableResourceDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionDrinkInteraction
// 0x0000 (FullSize[0x00F8] - InheritedSize[0x00F8])
class UPrisonerActionDrinkInteraction : public UCharacterAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionDrinkInteraction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionDrinkInteractionDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionDrinkInteractionDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_2MSS[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionDrinkInteractionDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionEatItem
// 0x0018 (FullSize[0x0110] - InheritedSize[0x00F8])
class UPrisonerActionEatItem : public UCharacterAction
{
public:
	class UAkAudioEvent*                               _startEatingAudioEvent;                                    // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _stopEatingAudioEvent;                                     // 0x0100(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _itemClass;                                                // 0x0108(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionEatItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionEatItemDescription
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UPrisonerActionEatItemDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_KVV9[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionEatItemDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionEnterCombatMode
// 0x0000 (FullSize[0x00F8] - InheritedSize[0x00F8])
class UPrisonerActionEnterCombatMode : public UCharacterAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionEnterCombatMode"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionEnterCombatModeDescription
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UPrisonerActionEnterCombatModeDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_A0LU[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionEnterCombatModeDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionEnterVehicle
// 0x0020 (FullSize[0x0128] - InheritedSize[0x0108])
class UPrisonerActionEnterVehicle : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_C843[0x20];                                    // 0x0108(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionEnterVehicle"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionEnterVehicleDescription
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UPrisonerActionEnterVehicleDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_TR30[0x50];                                    // 0x0030(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionEnterVehicleDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionEquipWeapon
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionEquipWeapon : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_XSYW[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionEquipWeapon"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionEquipWeaponDescription
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UPrisonerActionEquipWeaponDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_PNGL[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionEquipWeaponDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionExecuteInteraction
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionExecuteInteraction : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_EZNE[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionExecuteInteraction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionExecuteInteractionDescription
// 0x0098 (FullSize[0x00C8] - InheritedSize[0x0030])
class UPrisonerActionExecuteInteractionDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_TND9[0x98];                                    // 0x0030(0x0098) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionExecuteInteractionDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionExitVehicle
// 0x0020 (FullSize[0x0128] - InheritedSize[0x0108])
class UPrisonerActionExitVehicle : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_CTK2[0x20];                                    // 0x0108(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionExitVehicle"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionExitVehicleDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionExitVehicleDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_ZB6D[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionExitVehicleDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionExtinguishFire
// 0x0000 (FullSize[0x00F8] - InheritedSize[0x00F8])
class UPrisonerActionExtinguishFire : public UCharacterAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionExtinguishFire"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionExtinguishFireDescription
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UPrisonerActionExtinguishFireDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_W7WJ[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionExtinguishFireDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionFillGameResourceContainer
// 0x0028 (FullSize[0x0130] - InheritedSize[0x0108])
class UPrisonerActionFillGameResourceContainer : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_AF4V[0x28];                                    // 0x0108(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionFillGameResourceContainer"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionFillGameResourceContainerDescription
// 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
class UPrisonerActionFillGameResourceContainerDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_XEYP[0x48];                                    // 0x0030(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionFillGameResourceContainerDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionFillGameResourceContainerWithReplenishableResourceDescription
// 0x0018 (FullSize[0x0090] - InheritedSize[0x0078])
class UPrisonerActionFillGameResourceContainerWithReplenishableResourceDescription : public UPrisonerActionFillGameResourceContainerDescription
{
public:
	unsigned char                                      UnknownData_C4XA[0x10];                                    // 0x0078(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UGameResourceContainerProxyForReplenishableResource* ProxyForReplenishableResource;                             // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionFillGameResourceContainerWithReplenishableResourceDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionFillVehicleFuelWithItem
// 0x0008 (FullSize[0x0110] - InheritedSize[0x0108])
class UPrisonerActionFillVehicleFuelWithItem : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_6AY5[0x8];                                     // 0x0108(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionFillVehicleFuelWithItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionFillVehicleFuelWithItemDescription
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
class UPrisonerActionFillVehicleFuelWithItemDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_2JET[0x38];                                    // 0x0030(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionFillVehicleFuelWithItemDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionFillVehicleFuelWithReplenishableResource
// 0x0020 (FullSize[0x0128] - InheritedSize[0x0108])
class UPrisonerActionFillVehicleFuelWithReplenishableResource : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_9SNY[0x20];                                    // 0x0108(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionFillVehicleFuelWithReplenishableResource"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionFillVehicleFuelWithReplenishableResourceDescription
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UPrisonerActionFillVehicleFuelWithReplenishableResourceDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_90CU[0x50];                                    // 0x0030(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionFillVehicleFuelWithReplenishableResourceDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionFillWater
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionFillWater : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_XBI4[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionFillWater"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionFillWaterDescription
// 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
class UPrisonerActionFillWaterDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_FA7Y[0x28];                                    // 0x0030(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionFillWaterDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionFixTire
// 0x0010 (FullSize[0x0118] - InheritedSize[0x0108])
class UPrisonerActionFixTire : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_4Z3B[0x10];                                    // 0x0108(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionFixTire"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionFixTireDescription
// 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
class UPrisonerActionFixTireDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_95WJ[0x48];                                    // 0x0030(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionFixTireDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionForceUnlock
// 0x0008 (FullSize[0x0110] - InheritedSize[0x0108])
class UPrisonerActionForceUnlock : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_7O7B[0x8];                                     // 0x0108(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionForceUnlock"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionForceUnlockDescription
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UPrisonerActionForceUnlockDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_VX6U[0x50];                                    // 0x0030(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionForceUnlockDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionFuelFire
// 0x0000 (FullSize[0x00F8] - InheritedSize[0x00F8])
class UPrisonerActionFuelFire : public UCharacterAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionFuelFire"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionFuelFireDescription
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UPrisonerActionFuelFireDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_959M[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionFuelFireDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionGesture
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionGesture : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_3JQ7[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionGesture"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionGestureDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionGestureDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_TNKB[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionGestureDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionIgniteFlare
// 0x0000 (FullSize[0x00F8] - InheritedSize[0x00F8])
class UPrisonerActionIgniteFlare : public UCharacterAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionIgniteFlare"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionLightFlareDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionLightFlareDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_K0BW[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionLightFlareDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionInsertArrow
// 0x0010 (FullSize[0x0108] - InheritedSize[0x00F8])
class UPrisonerActionInsertArrow : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_ZQU0[0x10];                                    // 0x00F8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionInsertArrow"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionInsertArrowDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionInsertArrowDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_C3V4[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionInsertArrowDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionLootCorpse
// 0x0000 (FullSize[0x00F8] - InheritedSize[0x00F8])
class UPrisonerActionLootCorpse : public UCharacterAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionLootCorpse"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionLootCorpseDescription
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UPrisonerActionLootCorpseDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_C6NU[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionLootCorpseDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionLootPrisoner
// 0x0000 (FullSize[0x00F8] - InheritedSize[0x00F8])
class UPrisonerActionLootPrisoner : public UCharacterAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionLootPrisoner"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionLootPrisonerDescription
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UPrisonerActionLootPrisonerDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_4BQX[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionLootPrisonerDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionMakeConscious
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionMakeConscious : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_UXB1[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionMakeConscious"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionMakeConsciousDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionMakeConsciousDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_KY65[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionMakeConsciousDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionManipulateTrap
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionManipulateTrap : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_SFRN[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionManipulateTrap"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionManipulateTrapDescription
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UPrisonerActionManipulateTrapDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_B4FW[0x20];                                    // 0x0030(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionManipulateTrapDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionMedicalDiagnosis
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionMedicalDiagnosis : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_7WRX[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionMedicalDiagnosis"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionMedicalDiagnosisDescription
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UPrisonerActionMedicalDiagnosisDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_TZ18[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionMedicalDiagnosisDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionMinigame
// 0x0010 (FullSize[0x0118] - InheritedSize[0x0108])
class UPrisonerActionMinigame : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_JXCZ[0x10];                                    // 0x0108(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionMinigame"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionMinigameDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionMinigameDescription : public UCharacterActionDescription
{
public:
	class UMinigameConfiguration*                      MinigameConfiguration;                                     // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionMinigameDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionMoveToLocation
// 0x0008 (FullSize[0x0110] - InheritedSize[0x0108])
class UPrisonerActionMoveToLocation : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_UD94[0x8];                                     // 0x0108(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionMoveToLocation"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionMoveToLocationDescription
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UPrisonerActionMoveToLocationDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_2FZP[0x20];                                    // 0x0030(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionMoveToLocationDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionOpenItem
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionOpenItem : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_TJEW[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionOpenItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionOpenItemDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionOpenItemDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_EKB3[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionOpenItemDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionOpenOrCloseVehicleDoor
// 0x0010 (FullSize[0x0118] - InheritedSize[0x0108])
class UPrisonerActionOpenOrCloseVehicleDoor : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_866O[0x10];                                    // 0x0108(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionOpenOrCloseVehicleDoor"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionOpenOrCloseVehicleDoorDescription
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UPrisonerActionOpenOrCloseVehicleDoorDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_RXND[0x30];                                    // 0x0030(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionOpenOrCloseVehicleDoorDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionOperateBondage
// 0x0018 (FullSize[0x0110] - InheritedSize[0x00F8])
class UPrisonerActionOperateBondage : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_KK83[0x18];                                    // 0x00F8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionOperateBondage"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionOperateBondageDescription
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UPrisonerActionOperateBondageDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_XX4T[0x20];                                    // 0x0030(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionOperateBondageDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionPatchWounds
// 0x0000 (FullSize[0x00F8] - InheritedSize[0x00F8])
class UPrisonerActionPatchWounds : public UCharacterAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionPatchWounds"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionPatchWoundsDescription
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UPrisonerActionPatchWoundsDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_W45D[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionPatchWoundsDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionPerformAnesthesia
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionPerformAnesthesia : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_IK85[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionPerformAnesthesia"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionPerformAnesthesiaDescription
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UPrisonerActionPerformAnesthesiaDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_6BM3[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionPerformAnesthesiaDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionPerformSurgery
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionPerformSurgery : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_MHGP[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionPerformSurgery"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionPerformSurgeryDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionPerformSurgeryDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_FRW7[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionPerformSurgeryDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionPullTooth
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionPullTooth : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_8TO3[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionPullTooth"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionPullToothDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionPullToothDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_CH37[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionPullToothDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionReloadWeapon
// 0x0010 (FullSize[0x0108] - InheritedSize[0x00F8])
class UPrisonerActionReloadWeapon : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_JDRQ[0x10];                                    // 0x00F8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionReloadWeapon"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionReloadWeaponDescription
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
class UPrisonerActionReloadWeaponDescription : public UPrisonerActionDescription
{
public:
	unsigned char                                      UnknownData_P4TX[0x38];                                    // 0x0030(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionReloadWeaponDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionRemoveItemFromHands
// 0x0010 (FullSize[0x0108] - InheritedSize[0x00F8])
class UPrisonerActionRemoveItemFromHands : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_08LK[0x10];                                    // 0x00F8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionRemoveItemFromHands"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionRemoveItemFromHandsDescription
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UPrisonerActionRemoveItemFromHandsDescription : public UPrisonerActionDescription
{
public:
	unsigned char                                      UnknownData_7WNS[0x30];                                    // 0x0030(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionRemoveItemFromHandsDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionRemoveWeaponAttachment
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionRemoveWeaponAttachment : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_2AMN[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionRemoveWeaponAttachment"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionRemoveWeaponAttachmentDescription
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UPrisonerActionRemoveWeaponAttachmentDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_N8EE[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionRemoveWeaponAttachmentDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionRepair
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionRepair : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_H7F0[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionRepair"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionRepairDescription
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UPrisonerActionRepairDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_VD3B[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionRepairDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionRepairBaseElement
// 0x0000 (FullSize[0x0100] - InheritedSize[0x0100])
class UPrisonerActionRepairBaseElement : public UPrisonerActionRepair
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionRepairBaseElement"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionRepairBaseElementDescription
// 0x0040 (FullSize[0x0088] - InheritedSize[0x0048])
class UPrisonerActionRepairBaseElementDescription : public UPrisonerActionRepairDescription
{
public:
	unsigned char                                      UnknownData_RBV3[0x40];                                    // 0x0048(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionRepairBaseElementDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionRepairItem
// 0x0000 (FullSize[0x0100] - InheritedSize[0x0100])
class UPrisonerActionRepairItem : public UPrisonerActionRepair
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionRepairItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionRepairItemDescription
// 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
class UPrisonerActionRepairItemDescription : public UPrisonerActionRepairDescription
{
public:
	unsigned char                                      UnknownData_XTZG[0x8];                                     // 0x0048(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionRepairItemDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionRepairVehicle
// 0x0000 (FullSize[0x0100] - InheritedSize[0x0100])
class UPrisonerActionRepairVehicle : public UPrisonerActionRepair
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionRepairVehicle"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionRepairVehicleDescription
// 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
class UPrisonerActionRepairVehicleDescription : public UPrisonerActionRepairDescription
{
public:
	unsigned char                                      UnknownData_GLAL[0x8];                                     // 0x0048(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionRepairVehicleDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionResuscitate
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionResuscitate : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_4PUK[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionResuscitate"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionResuscitateDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionResuscitateDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_Y3BX[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionResuscitateDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionRevivePatient
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionRevivePatient : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_AU86[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionRevivePatient"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionRevivePatientDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionRevivePatientDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_V403[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionRevivePatientDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionSearchGround
// 0x0008 (FullSize[0x0110] - InheritedSize[0x0108])
class UPrisonerActionSearchGround : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_7DRA[0x8];                                     // 0x0108(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionSearchGround"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionSearchGroundDescription
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UPrisonerActionSearchGroundDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_OMU5[0x30];                                    // 0x0030(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionSearchGroundDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionSearchObject
// 0x0010 (FullSize[0x0118] - InheritedSize[0x0108])
class UPrisonerActionSearchObject : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_IMUN[0x10];                                    // 0x0108(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionSearchObject"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionSearchObjectDescription
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UPrisonerActionSearchObjectDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_Z0IY[0x30];                                    // 0x0030(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionSearchObjectDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionSearchPrisoner
// 0x0010 (FullSize[0x0108] - InheritedSize[0x00F8])
class UPrisonerActionSearchPrisoner : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_JGNZ[0x10];                                    // 0x00F8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionSearchPrisoner"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionSearchPrisonerDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionSearchPrisonerDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_J43K[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionSearchPrisonerDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionSpill
// 0x0030 (FullSize[0x0138] - InheritedSize[0x0108])
class UPrisonerActionSpill : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_M8WF[0x30];                                    // 0x0108(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionSpill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionSpillDescription
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UPrisonerActionSpillDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_RY41[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionSpillDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionStartCarryingItem
// 0x0010 (FullSize[0x0118] - InheritedSize[0x0108])
class UPrisonerActionStartCarryingItem : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_ZV6H[0x10];                                    // 0x0108(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionStartCarryingItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionStartCarryingItemDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionStartCarryingItemDescription : public UPrisonerActionDescription
{
public:
	unsigned char                                      UnknownData_52A3[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionStartCarryingItemDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionStartChainsawEngine
// 0x0008 (FullSize[0x0110] - InheritedSize[0x0108])
class UPrisonerActionStartChainsawEngine : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_O3EO[0x8];                                     // 0x0108(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionStartChainsawEngine"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionStartChainsawEngineDescription
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UPrisonerActionStartChainsawEngineDescription : public UPrisonerActionDescription
{
public:
	unsigned char                                      UnknownData_NZP5[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionStartChainsawEngineDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionStartPlayingInstrument
// 0x0000 (FullSize[0x0108] - InheritedSize[0x0108])
class UPrisonerActionStartPlayingInstrument : public UPrisonerAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionStartPlayingInstrument"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionStartPlayingInstrumentDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionStartPlayingInstrumentDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_GUC6[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionStartPlayingInstrumentDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionStartResting
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionStartResting : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_BUDR[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionStartResting"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionStartRestingDescription
// 0x00B0 (FullSize[0x00E0] - InheritedSize[0x0030])
class UPrisonerActionStartRestingDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_ZOKU[0xB0];                                    // 0x0030(0x00B0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionStartRestingDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionStopResting
// 0x0000 (FullSize[0x00F8] - InheritedSize[0x00F8])
class UPrisonerActionStopResting : public UCharacterAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionStopResting"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionStopRestingDescription
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UPrisonerActionStopRestingDescription : public UCharacterActionDescription
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionStopRestingDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionStoreItem
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionStoreItem : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_ZQJ9[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionStoreItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionStoreItemDescription
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UPrisonerActionStoreItemDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_V4XI[0x20];                                    // 0x0030(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionStoreItemDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionTakeItemInHands
// 0x0010 (FullSize[0x0118] - InheritedSize[0x0108])
class UPrisonerActionTakeItemInHands : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_JFAH[0x10];                                    // 0x0108(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionTakeItemInHands"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionTakeItemInHandsDescription
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UPrisonerActionTakeItemInHandsDescription : public UPrisonerActionDescription
{
public:
	unsigned char                                      UnknownData_8CN2[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionTakeItemInHandsDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionTakeMedication
// 0x0000 (FullSize[0x00F8] - InheritedSize[0x00F8])
class UPrisonerActionTakeMedication : public UCharacterAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionTakeMedication"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionTakeMedicationDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionTakeMedicationDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_H54F[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionTakeMedicationDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionThrowItem
// 0x0010 (FullSize[0x0108] - InheritedSize[0x00F8])
class UPrisonerActionThrowItem : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_CVN6[0x10];                                    // 0x00F8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionThrowItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionThrowItemDescription
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UPrisonerActionThrowItemDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_IUUG[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionThrowItemDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionTreatBrokenLimbs
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionTreatBrokenLimbs : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_52LY[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionTreatBrokenLimbs"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionTreatBrokenLimbsDescription
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UPrisonerActionTreatBrokenLimbsDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_TXWH[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionTreatBrokenLimbsDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionTreatSickness
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionTreatSickness : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_0JZM[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionTreatSickness"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionTreatSicknessDescription
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UPrisonerActionTreatSicknessDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_WS5M[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionTreatSicknessDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionTuneBow
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionTuneBow : public UCharacterAction
{
public:
	class UAkAudioEvent*                               _tuneBowAudioEvent;                                        // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionTuneBow"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionTuneBowDescription
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UPrisonerActionTuneBowDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_8K49[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionTuneBowDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionUncraftItem
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionUncraftItem : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_STDR[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionUncraftItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionUncraftItemDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionUncraftItemDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_4MXL[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionUncraftItemDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionUnequipWeapon
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionUnequipWeapon : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_PFTI[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionUnequipWeapon"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionUnequipWeaponDescription
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UPrisonerActionUnequipWeaponDescription : public UCharacterActionDescription
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionUnequipWeaponDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionUnloadAmmoFromWeapon
// 0x0010 (FullSize[0x0108] - InheritedSize[0x00F8])
class UPrisonerActionUnloadAmmoFromWeapon : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_6BKZ[0x10];                                    // 0x00F8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionUnloadAmmoFromWeapon"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionUnloadAmmoFromWeaponDescription
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UPrisonerActionUnloadAmmoFromWeaponDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_YIUS[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionUnloadAmmoFromWeaponDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionUrinate
// 0x0010 (FullSize[0x0108] - InheritedSize[0x00F8])
class UPrisonerActionUrinate : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_RU0J[0x10];                                    // 0x00F8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionUrinate"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionUrinateDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionUrinateDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_2X0S[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionUrinateDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionVomit
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionVomit : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_7WFG[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionVomit"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionVomitDescription
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerActionVomitDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_FIRJ[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionVomitDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionWashCloth
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionWashCloth : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_4U6Q[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionWashCloth"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.UPrisonerActionWashClothDescription
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UUPrisonerActionWashClothDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_3BD1[0x20];                                    // 0x0030(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.UPrisonerActionWashClothDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionWashWithReplenishableResource
// 0x0010 (FullSize[0x0118] - InheritedSize[0x0108])
class UPrisonerActionWashWithReplenishableResource : public UPrisonerAction
{
public:
	unsigned char                                      UnknownData_9UAJ[0x10];                                    // 0x0108(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionWashWithReplenishableResource"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionWashWithReplenishableResourceDescription
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UPrisonerActionWashWithReplenishableResourceDescription : public UCharacterActionDescription
{
public:
	unsigned char                                      UnknownData_OBLA[0x48];                                    // 0x0030(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UGameResourceContainerProxyForReplenishableResource* ProxyForReplenishableResource;                             // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionWashWithReplenishableResourceDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionWhistle
// 0x0008 (FullSize[0x0100] - InheritedSize[0x00F8])
class UPrisonerActionWhistle : public UCharacterAction
{
public:
	unsigned char                                      UnknownData_BIXX[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionWhistle"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerActionWhistleDescription
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UPrisonerActionWhistleDescription : public UCharacterActionDescription
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerActionWhistleDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerAIController
// 0x0028 (FullSize[0x0350] - InheritedSize[0x0328])
class APrisonerAIController : public AAIController
{
public:
	class APrisoner*                                   _prisoner;                                                 // 0x0328(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPrisonerMovementComponent*                  _prisonerMovementComponent;                                // 0x0330(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MDZP[0x18];                                    // 0x0338(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerAIController"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerAnimInstance
// 0x1018 (FullSize[0x12D0] - InheritedSize[0x02B8])
class UPrisonerAnimInstance : public UAnimInstance
{
public:
	struct FPrisonerResponseIdleDescription            ResponseIdleDescriptions[0x9];                             // 0x02B8(0x0168) (Edit, NativeAccessSpecifierPublic)
	float                                              MeleeCombatWalkUsageRadius;                                // 0x0420(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeleeExhaustionFactorInterpSpeed;                          // 0x0424(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UpperEyelidsLookLeftFactor;                                // 0x0428(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LowerEyelidsLookLeftFactor;                                // 0x042C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UpperEyelidsLookRightFactor;                               // 0x0430(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LowerEyelidsLookRightFactor;                               // 0x0434(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UpperEyelidsLookUpFactor;                                  // 0x0438(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LowerEyelidsLookUpFactor;                                  // 0x043C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UpperEyelidsLookDownFactor;                                // 0x0440(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LowerEyelidsLookDownFactor;                                // 0x0444(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoBlinkEnabled;                                          // 0x0448(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7JQ5[0x9F];                                    // 0x0449(0x009F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isPrisonerCompletelyInitialized;                          // 0x04E8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isOwnerLocallyControlled;                                 // 0x04E9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isOwnerPlayerControlled;                                  // 0x04EA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isInFirstPersonView;                                      // 0x04EB(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldOverrideIsInFirstPersonView;                        // 0x04EC(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isInFirstPersonViewOverride;                              // 0x04ED(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isAimingWeapon;                                           // 0x04EE(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isAbleToFireWeapon;                                       // 0x04EF(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EWeaponAimingType                             _weaponAimingType;                                         // 0x04F0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UF33[0x3];                                     // 0x04F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     _supportingHandIKLocation;                                 // 0x04F4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _weaponAimYaw;                                             // 0x0500(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _weaponAimPitch;                                           // 0x0504(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _meleeSkill_PrimaryIdleAnimationTP;                        // 0x0508(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _meleeSkill_PrimaryIdleAnimationFP;                        // 0x0510(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _meleeSkill_TiredIdleAnimationTP;                          // 0x0518(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _meleeSkill_TiredIdleAnimationFP;                          // 0x0520(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _meleeSkill_WalkingIdleAnimationTP;                        // 0x0528(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _meleeSkill_WalkingIdleAnimationFP;                        // 0x0530(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _meleeSkill_BlockIdleAnimationTP;                          // 0x0538(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _meleeSkill_BlockIdleAnimationFP;                          // 0x0540(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace*                                 _meleeSkill_AimOffsetBlendSpaceTP;                         // 0x0548(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace*                                 _meleeSkill_AimOffsetBlendSpaceFP;                         // 0x0550(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _meleeSkill_IdleToBlockBlendDuration;                      // 0x0558(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _meleeSkill_BlockToIdleBlendDuration;                      // 0x055C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _meleeSkill_ExhaustionFactor;                              // 0x0560(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldUseUnarmedCombatWalk;                               // 0x0564(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isHoldingBlock;                                           // 0x0565(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TXJK[0x2];                                     // 0x0566(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _stamina;                                                  // 0x0568(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _bellyJiggleAmount;                                        // 0x056C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _breastJiggleAmount;                                       // 0x0570(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                                    _eyesRotationDelta;                                        // 0x0574(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	float                                              _minEyesRotationPitch;                                     // 0x0580(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxEyesRotationPitch;                                     // 0x0584(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldUseWeaponAnimationPose;                             // 0x0588(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9CA5[0xE7];                                    // 0x0589(0x00E7) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _shouldIgnoreSupportingHandIK;                             // 0x0670(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_90AZ[0x3];                                     // 0x0671(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _firstPersonAimPitch;                                      // 0x0674(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _firstPersonAimYawDelta;                                   // 0x0678(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldAimDownTheSights;                                   // 0x067C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3VK3[0x3];                                     // 0x067D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     _aimingDownTheSightsLocationOffset;                        // 0x0680(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _scopeViewArmDislocationOffset;                            // 0x068C(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                                    _armsLagRotation;                                          // 0x0698(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	float                                              _armsLagPitch;                                             // 0x06A4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _armsLagYaw;                                               // 0x06A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EPrisonerStance                               _stance;                                                   // 0x06AC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LPUV[0x3];                                     // 0x06AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _crouchStage;                                              // 0x06B0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _targetCrouchStage;                                        // 0x06B4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isFreeLookEnabled;                                        // 0x06B8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldIgnoreHeadTurning;                                  // 0x06B9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZC6A[0x2];                                     // 0x06BA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    _aimOffset;                                                // 0x06BC(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	float                                              _leanAmount;                                               // 0x06C8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldLookAtMeleeTarget;                                  // 0x06CC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XQZE[0x3];                                     // 0x06CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    _lookAtMeleeTargetAimOffset;                               // 0x06D0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	ConZ_EPrisonerAnimationSet                         _animationSet;                                             // 0x06DC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isInRagdoll;                                              // 0x06DD(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isMovingOnGround;                                         // 0x06DE(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isFalling;                                                // 0x06DF(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isSwimming;                                               // 0x06E0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1HLG[0x3];                                     // 0x06E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     _acceleration;                                             // 0x06E4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _wantsToMove;                                              // 0x06F0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _wantsToMoveHorizontallyOnly;                              // 0x06F1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _wantsToMoveVerticallyOnly;                                // 0x06F2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _wantsToWalk;                                              // 0x06F3(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _wantsToJog;                                               // 0x06F4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _wantsToRun;                                               // 0x06F5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_J1C8[0x2];                                     // 0x06F6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     _velocity;                                                 // 0x06F8(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4AK7[0x4];                                     // 0x0704(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _speed;                                                    // 0x0708(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _speedXY;                                                  // 0x070C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxSpeed;                                                 // 0x0710(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _stoppingDistance;                                         // 0x0714(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_A1GU[0x64];                                    // 0x0718(0x0064) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _leftHandIKAmount;                                         // 0x077C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _desiredCourseAngle;                                       // 0x0780(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _desiredCoursePitchAngle;                                  // 0x0784(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _actualCourseAngle;                                        // 0x0788(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EPrisonerMovementPace                         _desiredMovementPace;                                      // 0x078C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EPrisonerMovementPace                         _clampedDesiredMovementPace;                               // 0x078D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EPrisonerMovementPace                         _movementPaceBeforeGroundStart;                            // 0x078E(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XB9T[0x1];                                     // 0x078F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _legsPoseBeforeGroundStop;                                 // 0x0790(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_ECardinalDirection                            _movementDirectionBeforeGroundStop;                        // 0x0794(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EPrisonerMovementPace                         _movementPaceBeforeGroundStop;                             // 0x0795(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EPrisonerAnimationSet                         _animationSetBeforeGroundStop;                             // 0x0796(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldUseLUGroundStopAnimation;                           // 0x0797(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EHitReactState                                _hitReactState;                                            // 0x0798(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _useLocomotionAdditiveAnimations;                          // 0x0799(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UBY7[0x2];                                     // 0x079A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _drunkenness;                                              // 0x079C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _drunkennessMultiplier;                                    // 0x07A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isLimping;                                                // 0x07A4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldRotateBonesWithFirstPersonAimPitch;                 // 0x07A5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6MMW[0x6];                                     // 0x07A6(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _jumpApex;                                                 // 0x07AC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _distanceToJumpApex;                                       // 0x07B0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _legsPoseBeforeJump;                                       // 0x07B4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EPrisonerMovementPace                         _movementPaceBeforeJump;                                   // 0x07B8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EPrisonerAnimationSet                         _animationSetBeforeJump;                                   // 0x07B9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldJumpGoToFallingLoop;                                // 0x07BA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QGVM[0x1];                                     // 0x07BB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _waterImmersionDepth;                                      // 0x07BC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _meshOffsetWhenInWater;                                    // 0x07C0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _wantsToDiveIn;                                            // 0x07CC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_THQ7[0xD3];                                    // 0x07CD(0x00D3) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isClimbing;                                               // 0x08A0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isClimbingAnchoring;                                      // 0x08A1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1LJT[0x86];                                    // 0x08A2(0x0086) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequenceBase*                           _climbAnchoringAnimation;                                  // 0x0928(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _climbAnchoringAnimationTime;                              // 0x0930(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isClimbingLadder;                                         // 0x0934(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BP64[0xBB];                                    // 0x0935(0x00BB) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     _ladderClimbingRootBoneOffset;                             // 0x09F0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _ladderClimbingLoopState;                                  // 0x09FC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _ladderClimbingLoopStateForPeeking;                        // 0x0A00(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _ladderClimbingPeekState;                                  // 0x0A04(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isClimbingWindow;                                         // 0x0A08(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isClimbingWindowAnchoring;                                // 0x0A09(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BPF6[0x6];                                     // 0x0A0A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequenceBase*                           _windowClimbingAnchoringAnimation;                         // 0x0A10(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _windowClimbingAnchoringAnimationTime;                     // 0x0A18(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EWeaponType                                   _weaponType;                                               // 0x0A1C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isDedicatedServer;                                        // 0x0A1D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YRTZ[0x34A];                                   // 0x0A1E(0x034A) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequenceBase*                           _itemFirstPersonUpperBodyStandIdle;                        // 0x0D68(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace1D*                               _itemFirstPersonUpperBodyStandWalk;                        // 0x0D70(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace1D*                               _itemFirstPersonUpperBodyStandWalkLimping;                 // 0x0D78(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace1D*                               _itemFirstPersonUpperBodyStandJog;                         // 0x0D80(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace1D*                               _itemFirstPersonUpperBodyStandJogLimping;                  // 0x0D88(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _itemFirstPersonUpperBodyStandRun;                         // 0x0D90(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _itemFirstPersonUpperBodyCrouchIdle;                       // 0x0D98(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace1D*                               _itemFirstPersonUpperBodyCrouchWalk;                       // 0x0DA0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace1D*                               _itemFirstPersonUpperBodyCrouchWalkLimping;                // 0x0DA8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _itemFirstPersonUpperBodyProneIdle;                        // 0x0DB0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _weaponAimingHipFirstPersonUpperBodyStandIdle;             // 0x0DB8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace1D*                               _weaponAimingHipFirstPersonUpperBodyStandWalk;             // 0x0DC0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace1D*                               _weaponAimingHipFirstPersonUpperBodyStandWalkLimping;      // 0x0DC8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace1D*                               _weaponAimingHipFirstPersonUpperBodyStandJog;              // 0x0DD0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace1D*                               _weaponAimingHipFirstPersonUpperBodyStandJogLimping;       // 0x0DD8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _weaponAimingHipFirstPersonUpperBodyStandRun;              // 0x0DE0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _weaponAimingHipFirstPersonUpperBodyCrouchIdle;            // 0x0DE8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace1D*                               _weaponAimingHipFirstPersonUpperBodyCrouchWalk;            // 0x0DF0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace1D*                               _weaponAimingHipFirstPersonUpperBodyCrouchWalkLimping;     // 0x0DF8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _weaponAimingHipFirstPersonUpperBodyProneIdle;             // 0x0E00(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldUseItemFirstPersonAimOffsets;                       // 0x0E08(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AYYB[0x7];                                     // 0x0E09(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBlendSpace*                                 _itemFirstPersonAimOffsetStanding;                         // 0x0E10(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace*                                 _itemFirstPersonAimOffsetCrouching;                        // 0x0E18(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace*                                 _itemFirstPersonAimOffsetProne;                            // 0x0E20(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _rightHandCorrectionPoseStanding;                          // 0x0E28(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _rightHandCorrectionPoseCrouching;                         // 0x0E30(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _rightHandCorrectionPoseProne;                             // 0x0E38(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _rightFistCorrectionPoseStanding;                          // 0x0E40(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _rightFistCorrectionPoseStandingInCombatMode;              // 0x0E48(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _rightFistCorrectionPoseCrouching;                         // 0x0E50(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _rightFistCorrectionPoseProne;                             // 0x0E58(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _rightHandToIdleBlendAlphaStanding;                        // 0x0E60(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _rightHandToIdleBlendAlphaCrouching;                       // 0x0E64(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _leftHandCorrectionPoseStanding;                           // 0x0E68(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _leftHandCorrectionPoseCrouching;                          // 0x0E70(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _leftHandCorrectionPoseProne;                              // 0x0E78(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _leftFistCorrectionPoseStanding;                           // 0x0E80(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _leftFistCorrectionPoseStandingInCombatMode;               // 0x0E88(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _leftFistCorrectionPoseCrouching;                          // 0x0E90(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _leftFistCorrectionPoseProne;                              // 0x0E98(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _leftHandToIdleBlendAlphaStanding;                         // 0x0EA0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _leftHandToIdleBlendAlphaCrouching;                        // 0x0EA4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VAZZ[0x8];                                     // 0x0EA8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _hasItemInHands;                                           // 0x0EB0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GGH9[0x3];                                     // 0x0EB1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     _itemInHandsLeftHandLocationInRightHandSpace;              // 0x0EB4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                                    _itemInHandsLeftHandRotationInRightHandSpace;              // 0x0EC0(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	float                                              _itemInHandsObstructionDepth;                              // 0x0ECC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _itemInHandsObstructionDepthSmoothed;                      // 0x0ED0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isItemInHandsObstructed;                                  // 0x0ED4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isItemInHandsCompletelyObstructed;                        // 0x0ED5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CUO6[0x2];                                     // 0x0ED6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _itemInHandsObstructionSide;                               // 0x0ED8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EH5Q[0x4];                                     // 0x0EDC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequenceBase*                           _itemInHandsLeftObstructedIdleFP;                          // 0x0EE0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _itemInHandsRightObstructedIdleFP;                         // 0x0EE8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _itemInHandsObstructedIdleTP;                              // 0x0EF0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _itemInHandsObstructedIdleProneTP;                         // 0x0EF8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isInCombatMode;                                           // 0x0F00(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldUseHandCorrections;                                 // 0x0F01(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldUseFistCorrections;                                 // 0x0F02(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _overrideFingersOnlyInProne;                               // 0x0F03(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _ignoreAimOffsets;                                         // 0x0F04(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EPrisonerMontageBlendType                     _prisonerMontageBlendType;                                 // 0x0F05(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isAimingBow;                                              // 0x0F06(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X4JT[0x1];                                     // 0x0F07(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _bowArmsShakeValue;                                        // 0x0F08(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isScoping;                                                // 0x0F0C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RLP9[0x223];                                   // 0x0F0D(0x0223) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _shouldUpperBodyBeUsedAsFullBodyInIdle;                    // 0x1130(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isPlayingInstrument;                                      // 0x1131(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FR8R[0x6];                                     // 0x1132(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequenceBase*                           _playingInstrumentIdleAnimation;                           // 0x1138(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _playingInstrumentPlayAnimation;                           // 0x1140(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EPlayingInstrumentState                       _playingInstrumentState;                                   // 0x1148(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isCarryingItem;                                           // 0x1149(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UPPO[0x6];                                     // 0x114A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequenceBase*                           _carryingItemIdleFPAnimation;                              // 0x1150(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _carryingItemIdleTPAnimation;                              // 0x1158(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_ECarryingItemState                            _carryingItemState;                                        // 0x1160(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isMounted;                                                // 0x1161(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EPrisonerAnimationMountType                   _mountType;                                                // 0x1162(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JT9B[0x5];                                     // 0x1163(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequenceBase*                           _mountedAnimation;                                         // 0x1168(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isVehicleDriver;                                          // 0x1170(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3S3M[0x7];                                     // 0x1171(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBlendSpace*                                 _vehicleDriverForwardIdleAnimation;                        // 0x1178(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _vehicleDriverForwardSteeringAnimation;                    // 0x1180(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _vehicleDriverForwardSteeringAnimationFP;                  // 0x1188(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace*                                 _vehicleDriverReverseIdleAnimation;                        // 0x1190(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _vehicleDriverReverseSteeringAnimation;                    // 0x1198(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _vehicleDriverReverseSteeringAnimationFP;                  // 0x11A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace*                                 _vehiclePassengerIdleAnimation;                            // 0x11A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _vehicleSpeed;                                             // 0x11B0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _vehicleSpeedKph;                                          // 0x11B4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _vehicleBumpiness;                                         // 0x11B8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _vehicleDriverSteeringAnimationTime;                       // 0x11BC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _vehicleDriverSteeringAnimationTimeInterpSpeed;            // 0x11C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _vehicleThrottleAmount;                                    // 0x11C4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _vehicleBrakeAmount;                                       // 0x11C8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _vehicleHandbrakeAmount;                                   // 0x11CC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _vehicleSteerAmount;                                       // 0x11D0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isSledgeAcceleratingForward;                              // 0x11D4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isSledgeAcceleratingBackward;                             // 0x11D5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MJ9M[0x2];                                     // 0x11D6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _sledgeSlidingThresholdSpeed;                              // 0x11D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isSledgeSliding;                                          // 0x11DC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Q8YL[0x3];                                     // 0x11DD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequenceBase*                           _bowArmsShakeAnimation;                                    // 0x11E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _weaponBreathFactor;                                       // 0x11E8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _weaponAimDownTheSightsStillBlendFactor;                   // 0x11EC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _areHandsBound;                                            // 0x11F0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_88EE[0x7];                                     // 0x11F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequenceBase*                           _handsBoundIdleFPAnimation;                                // 0x11F8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _handsBoundIdleTPAnimation;                                // 0x1200(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isResting;                                                // 0x1208(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2MNH[0x7];                                     // 0x1209(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequenceBase*                           _restingAnimation;                                         // 0x1210(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _restingFeetOffset;                                        // 0x1218(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _cameraToActorRotationDeltaYaw;                            // 0x121C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _cameraToActorRotationDeltaPitch;                          // 0x1220(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EVehicleWeaponAimingStance                    _vehicleWeaponAimingStance;                                // 0x1224(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _useMountedFirstPersonWeaponAimingParameters;              // 0x1225(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_94XD[0x2];                                     // 0x1226(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     _vehicleWAPLocationOffsetDefaultStanceFP;                  // 0x1228(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _vehicleWAPLocationOffsetLeaningStanceFP;                  // 0x1234(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _useMountedThirdPersonWeaponAimingParameters;              // 0x1240(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_98V7[0x7];                                     // 0x1241(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBlendSpace*                                 _vehicleWAPAimOffsetTP;                                    // 0x1248(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _useVehicleWAPAimOffsetTP;                                 // 0x1250(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_J158[0x7];                                     // 0x1251(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBlendSpace*                                 _vehicleWAPAimOffsetDefaultStanceTP;                       // 0x1258(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _useVehicleWAPAimOffsetDefaultStanceTP;                    // 0x1260(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5287[0x7];                                     // 0x1261(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBlendSpace*                                 _vehicleWAPAimOffsetLeaningStanceTP;                       // 0x1268(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _useVehicleWAPAimOffsetLeaningStanceTP;                    // 0x1270(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _useVehicleWAPUpperBodyIdleTP;                             // 0x1271(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LB0X[0x6];                                     // 0x1272(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequenceBase*                           _vehicleWAPUpperBodyIdleRelaxedTP;                         // 0x1278(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _vehicleWAPUpperBodyIdleAimingTP;                          // 0x1280(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _useVehicleWAPLowerBodyIdleTP;                             // 0x1288(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_O5QF[0x7];                                     // 0x1289(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequenceBase*                           _vehicleWAPLowerBodyIdleRelaxedTP;                         // 0x1290(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _vehicleWAPLowerBodyIdleAimingTP;                          // 0x1298(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _vehicleWAPLowerBodyIdleRelaxedDefaultTP;                  // 0x12A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _vehicleWAPLowerBodyIdleAimingDefaultTP;                   // 0x12A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _vehicleWAPLowerBodyIdleRelaxedLeaningTP;                  // 0x12B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _vehicleWAPLowerBodyIdleAimingLeaningTP;                   // 0x12B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isPlayingWAPStanceTransitionMontage;                      // 0x12C0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_68B9[0xF];                                     // 0x12C1(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerAnimInstance"));
		return ptr;
	}



	void TakePenis();
	void ReleasePenis();
	void OnIdleStateExit(const struct FAnimNode_StateMachine& machine, int prevStateIndex, int nextStateIndex);
	void OnIdleStateEntry(const struct FAnimNode_StateMachine& machine, int prevStateIndex, int nextStateIndex);
	bool IsCourseAngleSupportedByStartAndStopAnimations(float courseAngle);
	bool IsAnyStanceTransitionActive();
	float GetWeaponRelatedIdleStateAnimationPlayRateOnGameThread();
	class UAnimSequenceBase* GetWeaponAnimationPoseOnWorkerThread(ConZ_EWeaponAnimationPose animationPose, ConZ_EPrisonerStance Stance);
	class UBlendSpace* GetWeaponAimOffsetOnGameThread(ConZ_EPrisonerAimOffsetType prisonerAimOffsetType);
	float GetWeaponAimingNoisePlayRateOnGameThread();
	float GetWeaponAimingNoiseBlendValueOnGameThread();
	struct FRotator GetUpperEyelidRotationDelta();
	float GetStandLookBlendAlpha();
	float GetPlayRateFromSpeed(float speedInAnimation, float MinPlayRate, float MaxPlayRate);
	struct FRotator GetLowerEyelidRotationDelta();
	float GetLocomotionStateWeight(ConZ_EPrisonerAnimationState State);
	void GetLeanBlendWeights(float* Left, float* Right, float Multiplier, class UCurveFloat* strengthBySpeedCurve);
	float GetKnownCurveValueOnWorkerThread(ConZ_EPrisonerAnimationCurve Curve);
	float GetInPlaceTurningElapsedTimeRight(ConZ_EPrisonerStance Stance);
	float GetInPlaceTurningElapsedTimeLeft(ConZ_EPrisonerStance Stance);
	float GetInPlaceTurningDirectionBlendAlpha(ConZ_EPrisonerStance Stance);
	float GetInPlaceTurningBlendAlpha(ConZ_EPrisonerStance Stance);
	struct FVector GetIKLegsRootOffsetVectorFromCardinalDirection(ConZ_ECardinalDirection Value);
	float GetFacialExpressionBlendWeightOnWorkerThread(ConZ_EPrisonerFacialExpression facialExpression);
	float GetFacialExpressionBlendWeightOnGameThread(ConZ_EPrisonerFacialExpression facialExpression);
	float GetCurrentLocomotionStateElapsedTime();
	ConZ_EPrisonerAnimationState GetCurrentLocomotionState();
	ConZ_ECardinalDirection GetCardinalDirectionFromCourseAngle(float Value);
	float GetBoxingTurnAngle();
	float GetBoxingInPlaceTurningElapsedTimeRight();
	float GetBoxingInPlaceTurningElapsedTimeLeft();
	float GetBoxingInPlaceTurningDirectionBlendAlpha();
	float GetBoxingInPlaceTurningBlendAlpha();
	class UAnimSequenceBase* GetBowArmsShakeAnimationOnGameThread(ConZ_EPrisonerStance Stance);
	float FindTimeBeforeJumpApex(class UAnimSequenceBase* AnimSequence, float distanceToApex);
	float FindTimeAtStoppingDistance(class UAnimSequenceBase* AnimSequence, float stoppingDistance);
	float FindTimeAfterJumpApex(class UAnimSequenceBase* AnimSequence, float distanceToApex);
	void DeactivateFacialExpressionOnGameThread(ConZ_EPrisonerFacialExpression facialExpression);
	void DeactivateAllFacialExpressionsOnGameThread();
	void Blink();
	void AnimNotify_TakePenis();
	void AnimNotify_TakeItemInHands(class UAnimNotify* Notify);
	void AnimNotify_RFootDown();
	void AnimNotify_RemoveItemFromHands(class UAnimNotify* Notify);
	void AnimNotify_ReleasePenis();
	void AnimNotify_LFootDown();
	void AnimNotify_EnableCapsuleCollision(class UAnimNotify* Notify);
	void AnimNotify_DisableCapsuleCollision(class UAnimNotify* Notify);
	void ActivateFacialExpressionOnGameThread(ConZ_EPrisonerFacialExpression facialExpression, float blendInDuration, float Duration, float blendOutDuration, float blendWeightMultiplier);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerAnimInstance_WheelBarrow
// 0x00E8 (FullSize[0x03A0] - InheritedSize[0x02B8])
class UPrisonerAnimInstance_WheelBarrow : public UAnimInstance
{
public:
	unsigned char                                      UnknownData_1BTW[0x4];                                     // 0x02B8(0x0004) Fix Super Size
	float                                              _wheelBarrowSpeedKph;                                      // 0x02BC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _wheelBarrowBumpiness;                                     // 0x02C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _wheelBarrowRollAngleRelativeToDriver;                     // 0x02C4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isInCombatMode;                                           // 0x02C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isLimping;                                                // 0x02C9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isDriver;                                                 // 0x02CA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_191I[0x5];                                     // 0x02CB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequence*                               _driverIdleAnimation;                                      // 0x02D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace*                                 _driverWalkJogAnimation;                                   // 0x02D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace*                                 _driverWalkJogLimpingAnimation;                            // 0x02E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IWDK[0x8];                                     // 0x02E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  _driverLHandGripTransform;                                 // 0x02F0(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FTransform                                  _driverRHandGripTransform;                                 // 0x0320(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	float                                              _driverSpineBendAngle;                                     // 0x0350(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _driverSpineBendScale;                                     // 0x0354(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _driverSpineBendAngleInterpSpeed;                          // 0x0358(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _driverSpineLeanAngle;                                     // 0x035C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _driverSpineLeanScale;                                     // 0x0360(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _driverSpineLeanAngleInterpSpeed;                          // 0x0364(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _driverHasFloor;                                           // 0x0368(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isDriverMoving;                                           // 0x0369(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BLM1[0x2];                                     // 0x036A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _driverSpeed;                                              // 0x036C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _driverCourseAngle;                                        // 0x0370(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MHMD[0x4];                                     // 0x0374(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBlendSpace*                                 _passengerIdleAnimation;                                   // 0x0378(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _useVehicleWAPLowerBodyIdleTP;                             // 0x0380(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ARE0[0x7];                                     // 0x0381(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequenceBase*                           _vehicleWAPLowerBodyIdleAimingTP;                          // 0x0388(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _vehicleWAPLowerBodyIdleRelaxedTP;                         // 0x0390(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PXG1[0x8];                                     // 0x0398(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerAnimInstance_WheelBarrow"));
		return ptr;
	}



	void AnimNotify_RFootDown();
	void AnimNotify_LFootDown();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerAnimNotify_PlayGearSound
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UPrisonerAnimNotify_PlayGearSound : public UAnimNotify
{
public:
	ConZ_EMotionIntensity                              motionIntensity;                                           // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4X1K[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerAnimNotify_PlayGearSound"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerAppearanceDataAsset
// 0x00E0 (FullSize[0x0110] - InheritedSize[0x0030])
class UPrisonerAppearanceDataAsset : public UDataAsset
{
public:
	TArray<struct FPrisonerAppearanceData>             FemaleCharacterData;                                       // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FPrisonerAppearanceData>             MaleCharacterData;                                         // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FPrisonerAppearanceMeshSet> MeshSets;                                                  // 0x0050(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FPrisonerAppearanceMaterialSet> MaterialSets;                                              // 0x00A0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FPrisonerTattooMaterialSet>          FemaleTattoos;                                             // 0x00F0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FPrisonerTattooMaterialSet>          MaleTattoos;                                               // 0x0100(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerAppearanceDataAsset"));
		return ptr;
	}



	int GetTattooMaterialSetCount(ConZ_EGender Gender);
	int GetAppearanceDataCount(ConZ_EGender Gender);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerBodyEffect
// 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
class UPrisonerBodyEffect : public UObject
{
public:
	unsigned char                                      UnknownData_L01D[0x28];                                    // 0x0028(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerBodyEffect"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerBodyEffectInitializer
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UPrisonerBodyEffectInitializer : public UObject
{
public:
	unsigned char                                      UnknownData_L9LW[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerBodyEffectInitializer"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerBodyEffect_Unconsciousness
// 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
class UPrisonerBodyEffect_Unconsciousness : public UPrisonerBodyEffect
{
public:
	float                                              _duration;                                                 // 0x0050(0x0004) (Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _elapsedTime;                                              // 0x0054(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerBodyEffect_Unconsciousness"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerBodyEffect_Coma
// 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
class UPrisonerBodyEffect_Coma : public UPrisonerBodyEffect_Unconsciousness
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerBodyEffect_Coma"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerBodyEffect_DamageComa
// 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
class UPrisonerBodyEffect_DamageComa : public UPrisonerBodyEffect_Coma
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerBodyEffect_DamageComa"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerBodyEffect_Death
// 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
class UPrisonerBodyEffect_Death : public UPrisonerBodyEffect_Unconsciousness
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerBodyEffect_Death"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerBodyEffect_HealthComa
// 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
class UPrisonerBodyEffect_HealthComa : public UPrisonerBodyEffect_Coma
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerBodyEffect_HealthComa"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerBodySimulationComponent
// 0x0270 (FullSize[0x0320] - InheritedSize[0x00B0])
class UPrisonerBodySimulationComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_FNPR[0xC8];                                    // 0x00B0(0x00C8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _minHealthAsRatioOfMaxHealth;                              // 0x0178(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DG78[0xC];                                     // 0x017C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _baseHealthRegenerationRate;                               // 0x0188(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_08XP[0x164];                                   // 0x018C(0x0164) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint64_t                                           _repState1;                                                // 0x02F0(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint64_t                                           _repState2;                                                // 0x02F8(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint16_t                                           _repState3;                                                // 0x0300(0x0002) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5CLG[0x2];                                     // 0x0302(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint32_t                                           _repState4;                                                // 0x0304(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UPrisonerBodyEffect*>                 _repBodyEffects;                                           // 0x0308(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4N5L[0x8];                                     // 0x0318(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerBodySimulationComponent"));
		return ptr;
	}



	void OnRep_State4();
	void OnRep_State3();
	void OnRep_State2();
	void OnRep_State1();
	void OnRep_BodyEffects();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerBodyEffectUIData
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UPrisonerBodyEffectUIData : public UObject
{
public:
	unsigned char                                      UnknownData_LUSV[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerBodyEffectUIData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerBodyEffect_UnconsciousnessUIData
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerBodyEffect_UnconsciousnessUIData : public UPrisonerBodyEffectUIData
{
public:
	unsigned char                                      UnknownData_OWDO[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerBodyEffect_UnconsciousnessUIData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerBodyEffect_KnockoutUIData
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UPrisonerBodyEffect_KnockoutUIData : public UPrisonerBodyEffect_UnconsciousnessUIData
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerBodyEffect_KnockoutUIData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerBodyEffect_Knockout
// 0x0000 (FullSize[0x0058] - InheritedSize[0x0058])
class UPrisonerBodyEffect_Knockout : public UPrisonerBodyEffect_Unconsciousness
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerBodyEffect_Knockout"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerBodyEffect_UnconsciousnessInitializer
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerBodyEffect_UnconsciousnessInitializer : public UPrisonerBodyEffectInitializer
{
public:
	unsigned char                                      UnknownData_TD6F[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerBodyEffect_UnconsciousnessInitializer"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerBodyEffect_KnockoutInitializer
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UPrisonerBodyEffect_KnockoutInitializer : public UPrisonerBodyEffect_UnconsciousnessInitializer
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerBodyEffect_KnockoutInitializer"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerBodyEffect_TestUIData
// 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
class UPrisonerBodyEffect_TestUIData : public UPrisonerBodyEffectUIData
{
public:
	struct FText                                       Name;                                                      // 0x0030(0x0018) (Edit, NativeAccessSpecifierPublic)
	struct FText                                       Description;                                               // 0x0048(0x0018) (Edit, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_96WJ[0x18];                                    // 0x0060(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerBodyEffect_TestUIData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerBodyEffect_Test
// 0x0210 (FullSize[0x0260] - InheritedSize[0x0050])
class UPrisonerBodyEffect_Test : public UPrisonerBodyEffect
{
public:
	class UClass*                                      _uiDataClass;                                              // 0x0050(0x0008) (Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _duration;                                                 // 0x0058(0x0004) (Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _elapsedTime;                                              // 0x005C(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRuntimeFloatCurve                          _strengthModifierCurve;                                    // 0x0060(0x0088) (Edit, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_U02D[0x8];                                     // 0x00E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRuntimeFloatCurve                          _healthChangeRateCurve;                                    // 0x00F0(0x0088) (Edit, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1366[0x8];                                     // 0x0178(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRuntimeFloatCurve                          _maxHealthModifierCurve;                                   // 0x0180(0x0088) (Edit, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CR91[0x8];                                     // 0x0208(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _bodyStates[0x50];                                         // 0x0208(0x0050) UNKNOWN PROPERTY: SetProperty


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerBodyEffect_Test"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerBodySimulationComponentUIData
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UPrisonerBodySimulationComponentUIData : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerBodySimulationComponentUIData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerBodySimulationComponentUIDataImpl
// 0x0068 (FullSize[0x0090] - InheritedSize[0x0028])
class UPrisonerBodySimulationComponentUIDataImpl : public UPrisonerBodySimulationComponentUIData
{
public:
	unsigned char                                      UnknownData_ZPVR[0x58];                                    // 0x0028(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UPrisonerBodyEffectUIData*>           BodyEffectsUIData;                                         // 0x0080(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerBodySimulationComponentUIDataImpl"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerBodySimulationInputsProvider
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UPrisonerBodySimulationInputsProvider : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerBodySimulationInputsProvider"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerBodySimulationStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UPrisonerBodySimulationStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerBodySimulationStatics"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerUIDataController
// 0x0038 (FullSize[0x0060] - InheritedSize[0x0028])
class UPrisonerUIDataController : public UObject
{
public:
	class UPrisonerBodySimulationUIController*         BodySimulationUIController;                                // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CY2M[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrisonerUIData*                             _prisonerUIData;                                           // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPrisonerUITooltipCache*                     _tooltipCache;                                             // 0x0050(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NTVE[0x8];                                     // 0x0058(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerUIDataController"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerBodySimulationUIController
// 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
class UPrisonerBodySimulationUIController : public UObject
{
public:
	unsigned char                                      UnknownData_EKD7[0x30];                                    // 0x0028(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerBodySimulationUIController"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerBuryComponent
// 0x0008 (FullSize[0x00C8] - InheritedSize[0x00C0])
class UPrisonerBuryComponent : public UCharacterActionComponent
{
public:
	ConZ_EBuryState                                    _buryState;                                                // 0x00C0(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X12M[0x7];                                     // 0x00C1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerBuryComponent"));
		return ptr;
	}



	void OnRep_BuryState();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Corpse
// 0x01D0 (FullSize[0x03F0] - InheritedSize[0x0220])
class ACorpse : public AActor
{
public:
	unsigned char                                      UnknownData_3K7Y[0x18];                                    // 0x0220(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMeshComponent*                      RagdollMeshComponent;                                      // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UChoppingRecipeDataAsset*                    ChoppingRecipeDataAsset;                                   // 0x0240(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ItemRepresentation;                                        // 0x0248(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IterativeChopping;                                         // 0x0250(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TDQW[0x3];                                     // 0x0251(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       MainBoneName;                                              // 0x0254(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LZYJ[0x4];                                     // 0x025C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCorpseSkeletalMeshRepData                  RagdollMeshData;                                           // 0x0260(0x0070) (Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FCorpseStaticMeshRepData>            StaticMeshData;                                            // 0x02D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FCorpseSkeletalMeshRepData>          SkeletalMeshData;                                          // 0x02E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	struct FCorpsePoseData                             PoseData;                                                  // 0x02F0(0x0080) (Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, RepNotify, NativeAccessSpecifierPublic)
	TArray<class AItem*>                               inventory;                                                 // 0x0370(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPublic)
	float                                              SearchTime;                                                // 0x0380(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PhysicsPauseDistance;                                      // 0x0384(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StartSearchAudioEvent;                                     // 0x0388(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopSearchAudioEvent;                                      // 0x0390(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutoDestructTime;                                          // 0x0398(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutoDestructRadius;                                        // 0x039C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                              Attachements;                                              // 0x03A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FName>                               AttachementSockets;                                        // 0x03B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PFL6[0x18];                                    // 0x03C0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AConZCharacter*                              _sourceCharacter;                                          // 0x03D8(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_636E[0x8];                                     // 0x03E0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _atRest;                                                   // 0x03E8(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GB4G[0x7];                                     // 0x03E9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Corpse"));
		return ptr;
	}



	void OnRep_SourceCharacter();
	void OnRep_PoseData();
	void OnRep_Inventory();
	void OnRep_AtRest();
	void Multicast_ClonePoseLocally(class AConZCharacter* sourceCharacter);
	void CopyFromCharacter(class AConZCharacter* sourceCharacter);
	void ApplyAttachements();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerCorpse
// 0x0210 (FullSize[0x0600] - InheritedSize[0x03F0])
class APrisonerCorpse : public ACorpse
{
public:
	TArray<struct FCorpseStaticMeshRepData>            StrippedStaticMeshData;                                    // 0x03F0(0x0010) (Edit, BlueprintVisible, Net, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCorpseSkeletalMeshRepData>          StrippedSkeletalMeshData;                                  // 0x0400(0x0010) (Edit, BlueprintVisible, Net, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCorpseStaticMeshRepData>            StandardStaticMeshData;                                    // 0x0410(0x0010) (Edit, BlueprintVisible, Net, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FCorpseSkeletalMeshRepData>          StandardSkeletalMeshData;                                  // 0x0420(0x0010) (Edit, BlueprintVisible, Net, ZeroConstructor, NativeAccessSpecifierPublic)
	class UChoppingRecipeDataAsset*                    HeadlessChoppingRecipeDataAsset;                           // 0x0430(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      LivingClass;                                               // 0x0438(0x0008) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      GibClass;                                                  // 0x0440(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             HeadExplosionParticles;                                    // 0x0448(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                               HeadExplodedMesh;                                          // 0x0450(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UStaticMesh*>                         HeadExplosionGibMeshes;                                    // 0x0458(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y9W6[0x8];                                     // 0x0468(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCorpseSkeletalMeshRepData                  PenisMeshData;                                             // 0x0470(0x0070) (Edit, BlueprintVisible, Net, NativeAccessSpecifierPublic)
	struct FCorpseSkeletalMeshRepData                  StrippedPenisMeshData;                                     // 0x04E0(0x0070) (Edit, BlueprintVisible, Net, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 CensorMesh;                                                // 0x0550(0x0008) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 CensorMesh2;                                               // 0x0558(0x0008) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterial*                                   CensorMaterial;                                            // 0x0560(0x0008) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      PenisComponent;                                            // 0x0568(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        GenitalsCensorComponent;                                   // 0x0570(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        PenisCensorComponent;                                      // 0x0578(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        LeftBreastCensorComponent;                                 // 0x0580(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        RightBreastCensorComponent;                                // 0x0588(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Headless;                                                  // 0x0590(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EGender                                       _gender;                                                   // 0x0591(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5ZHX[0x2];                                     // 0x0592(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _fatness;                                                  // 0x0594(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _leanness;                                                 // 0x0598(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _breastSize;                                               // 0x059C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _penisSize;                                                // 0x05A0(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _appearanceIndex;                                          // 0x05A4(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _penisLocationLean;                                        // 0x05A8(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _penisLocationFat;                                         // 0x05B4(0x000C) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _penisShowing;                                             // 0x05C0(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _breastsShowing;                                           // 0x05C1(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1G4O[0x2];                                     // 0x05C2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _hairLength;                                               // 0x05C4(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _facialHairLength;                                         // 0x05C8(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5UXL[0x4];                                     // 0x05CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     _userProfileName;                                          // 0x05D0(0x0010) (Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDbIntegerId                                _serverUserProfileId;                                      // 0x05E0(0x0008) (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDbIntegerId                                _killerServerUserProfileId;                                // 0x05E8(0x0008) (Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _killClaimFamePointsReward;                                // 0x05F0(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _killClaimed;                                              // 0x05F4(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IQ8V[0xB];                                     // 0x05F5(0x000B) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerCorpse"));
		return ptr;
	}



	void UpdateWetnessFromPrisoner(class APrisoner* Prisoner);
	void UpdateHair();
	void OnRep_PenisShowing();
	void OnRep_HairLength();
	void OnRep_FacialHairLength();
	void OnRep_BreastsShowing();
	void OnConcealedModeChanged(bool Value);
	class USkeletalMeshComponent* GetHairMeshComponent();
	float GetHairLength();
	class USkeletalMeshComponent* GetFacialHairMeshComponent();
	float GetFacialHairLength();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerDebugUI_SkillItem
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UPrisonerDebugUI_SkillItem : public UObject
{
public:
	unsigned char                                      UnknownData_6MBM[0x10];                                    // 0x0028(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerDebugUI_SkillItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerDebugUI_SkillEntryWidget
// 0x0010 (FullSize[0x0270] - InheritedSize[0x0260])
class UPrisonerDebugUI_SkillEntryWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData_3FZK[0x8];                                     // 0x0260(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTextBlock*                                  _nameTextBlock;                                            // 0x0268(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerDebugUI_SkillEntryWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerDebugUI_BodyConditionItem
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UPrisonerDebugUI_BodyConditionItem : public UObject
{
public:
	unsigned char                                      UnknownData_TYTH[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerDebugUI_BodyConditionItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerDebugUI_BodyStateItem
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerDebugUI_BodyStateItem : public UPrisonerDebugUI_BodyConditionItem
{
public:
	unsigned char                                      UnknownData_N9OT[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerDebugUI_BodyStateItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerDebugUI_BodyEffectItem
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPrisonerDebugUI_BodyEffectItem : public UPrisonerDebugUI_BodyConditionItem
{
public:
	unsigned char                                      UnknownData_ZL0X[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerDebugUI_BodyEffectItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerDebugUI_BodyConditionEntryWidget
// 0x0010 (FullSize[0x0270] - InheritedSize[0x0260])
class UPrisonerDebugUI_BodyConditionEntryWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData_ZEOS[0x8];                                     // 0x0260(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTextBlock*                                  _nameTextBlock;                                            // 0x0268(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerDebugUI_BodyConditionEntryWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerDebugUI_MainWidget
// 0x0070 (FullSize[0x02D0] - InheritedSize[0x0260])
class UPrisonerDebugUI_MainWidget : public UUserWidget
{
public:
	class UComboBoxString*                             _prisonersComboBox;                                        // 0x0260(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _lifeTimeTextBlock;                                        // 0x0268(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _strengthTextBlock;                                        // 0x0270(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _constitutionTextBlock;                                    // 0x0278(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _dexterityTextBlock;                                       // 0x0280(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _intelligenceTextBlock;                                    // 0x0288(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _healthTextBlock;                                          // 0x0290(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UListView*                                   _skillsListView;                                           // 0x0298(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UListView*                                   _bodyConditionsListView;                                   // 0x02A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KA7V[0x8];                                     // 0x02A8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrisonerUIData*                             _data;                                                     // 0x02B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPrisonerUITooltipCache*                     _tooltipCache;                                             // 0x02B8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QF70[0x4];                                     // 0x02C0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _dataRequestTimerInterval;                                 // 0x02C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0BJX[0x4];                                     // 0x02C8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _dataApplyTimerInterval;                                   // 0x02CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerDebugUI_MainWidget"));
		return ptr;
	}



	void PrisonersComboBox_SelectionChanged(const struct FString& SelectedItem, TEnumAsByte<SlateCore_ESelectInfo> SelectionType);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerFirstPersonSubviewComponent
// 0x00E0 (FullSize[0x08A0] - InheritedSize[0x07C0])
class UPrisonerFirstPersonSubviewComponent : public UCameraComponent
{
public:
	unsigned char                                      UnknownData_SML3[0x8];                                     // 0x07C0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              WeaponFOV;                                                 // 0x07C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     WeaponFoveationOffset;                                     // 0x07CC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinViewPitch;                                              // 0x07D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxViewPitch;                                              // 0x07DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinViewYaw;                                                // 0x07E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxViewYaw;                                                // 0x07E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveLinearColor*                           MinMaxViewPitchByYawAndSpeed;                              // 0x07E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                                LocalSpaceOffsetByYaw;                                     // 0x07F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                                LocalSpaceOffsetByPitch;                                   // 0x07F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                                ActorSpaceOffsetByYaw;                                     // 0x0800(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                                ActorSpaceOffsetByPitch;                                   // 0x0808(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       LockRotationToSocketAnimationCurveName;                    // 0x0810(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       LockRotationToSocketSocketName;                            // 0x0818(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProbeSize;                                                 // 0x0820(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_ECollisionChannel>              ProbeChannel;                                              // 0x0824(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DoCollisionTest;                                           // 0x0825(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OEL5[0x2];                                     // 0x0826(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       AnimationBobbingTXCurveName;                               // 0x0828(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AnimationBobbingTYCurveName;                               // 0x0830(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AnimationBobbingTZCurveName;                               // 0x0838(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AnimationBobbingRYCurveName;                               // 0x0840(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AnimationBobbingRPCurveName;                               // 0x0848(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AnimationBobbingRRCurveName;                               // 0x0850(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnimationBobbingTScale;                                    // 0x0858(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnimationBobbingRScale;                                    // 0x085C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AnimationCameraOffsetTXCurveName;                          // 0x0860(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AnimationCameraOffsetTYCurveName;                          // 0x0868(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AnimationCameraOffsetTZCurveName;                          // 0x0870(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AnimationCameraOffsetRYCurveName;                          // 0x0878(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AnimationCameraOffsetRPCurveName;                          // 0x0880(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AnimationCameraOffsetRRCurveName;                          // 0x0888(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnimationCameraOffsetTScale;                               // 0x0890(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnimationCameraOffsetRScale;                               // 0x0894(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              _minFactorForPrisonerHiding;                               // 0x0898(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_06HT[0x4];                                     // 0x089C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerFirstPersonSubviewComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerFirstPersonVehicleAimingSubviewComponent
// 0x0000 (FullSize[0x08A0] - InheritedSize[0x08A0])
class UPrisonerFirstPersonVehicleAimingSubviewComponent : public UPrisonerFirstPersonSubviewComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerFirstPersonVehicleAimingSubviewComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerViewComponent
// 0x0020 (FullSize[0x00D0] - InheritedSize[0x00B0])
class UPrisonerViewComponent : public UActorComponent
{
public:
	float                                              DefaultSubviewBlendDuration;                               // 0x00B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y3ZF[0x1C];                                    // 0x00B4(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerViewComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerFirstPersonViewComponent
// 0x0170 (FullSize[0x0240] - InheritedSize[0x00D0])
class UPrisonerFirstPersonViewComponent : public UPrisonerViewComponent
{
public:
	float                                              StandingToCrouchingSubviewBlendDuration;                   // 0x00D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StandingToProneSubviewBlendDuration;                       // 0x00D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StandingToStandingMeleeSubviewBlendDuration;               // 0x00D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CrouchingToStandingSubviewBlendDuration;                   // 0x00DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CrouchingToProneSubviewBlendDuration;                      // 0x00E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProneToStandingSubviewBlendDuration;                       // 0x00E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProneToCrouchingSubviewBlendDuration;                      // 0x00E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StandingMeleeToStandingSubviewBlendDuration;               // 0x00EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnyToStandingAimingSubviewBlendDuration;                   // 0x00F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnyToCrouchingAimingSubviewBlendDuration;                  // 0x00F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnyToProneAimingSubviewBlendDuration;                      // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnyToStandingAimingDownTheSightsSubviewBlendDuration;      // 0x00FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnyToCrouchingAimingDownTheSightsSubviewBlendDuration;     // 0x0100(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnyToProneAimingDownTheSightsSubviewBlendDuration;         // 0x0104(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnyToClimbingWindowSubviewBlendDuration;                   // 0x0108(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnyFromClimbingWindowSubviewBlendDuration;                 // 0x010C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnyToMountedSubviewBlendDuration;                          // 0x0110(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnyFromMountedSubviewBlendDuration;                        // 0x0114(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnyToLyingSubviewBlendDuration;                            // 0x0118(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnyFromLyingSubviewBlendDuration;                          // 0x011C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnyToMountedDefaultStanceAimingSubviewBlendDuration;       // 0x0120(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnyToMountedLeaningStanceAimingSubviewBlendDuration;       // 0x0124(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnyToMountedDefaultStanceAimingDownTheSightsSubviewBlendDuration; // 0x0128(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnyToMountedLeaningStanceAimingDownTheSightsSubviewBlendDuration; // 0x012C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       StandingSubviewName;                                       // 0x0130(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       CrouchingSubviewName;                                      // 0x0138(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ProneSubviewName;                                          // 0x0140(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       StandingMeleeSubviewName;                                  // 0x0148(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       StandingAimingSubviewName;                                 // 0x0150(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       CrouchingAimingSubviewName;                                // 0x0158(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ProneAimingSubviewName;                                    // 0x0160(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       StandingAimingDownTheSightsSubviewName;                    // 0x0168(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       CrouchingAimingDownTheSightsSubviewName;                   // 0x0170(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ProneAimingDownTheSightsSubviewName;                       // 0x0178(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ClimbingWindowSubviewName;                                 // 0x0180(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       MountedSubviewName;                                        // 0x0188(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       LyingSubviewName;                                          // 0x0190(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       MountedDefaultStanceAimingSubviewName;                     // 0x0198(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       MountedLeaningStanceAimingSubviewName;                     // 0x01A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       MountedDefaultStanceAimingDownTheSightsSubviewName;        // 0x01A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       MountedLeaningStanceAimingDownTheSightsSubviewName;        // 0x01B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NVRY[0x88];                                    // 0x01B8(0x0088) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerFirstPersonViewComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerHUD
// 0x01F8 (FullSize[0x0508] - InheritedSize[0x0310])
class APrisonerHUD : public AHUD
{
public:
	class UHudWidget*                                  HudWidget;                                                 // 0x0310(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDamageDirectionIndicator*                   DamageDirectionIndicator;                                  // 0x0318(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoClear, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldDrawCrosshair;                                       // 0x0320(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldDrawScreenCenterDot;                                 // 0x0321(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LIKZ[0x6];                                     // 0x0322(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          TacticsMaterial;                                           // 0x0328(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULoadingIconWidget*                          LoadingIconWidget;                                         // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USpawnScreen*                                SpawnScreenWidget;                                         // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWaypointScreenWidget*                       WaypointScreenWidget;                                      // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnShouldShowExtendedWidgetTooltipChanged;                  // 0x0348(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFont*                                       _HUDFont;                                                  // 0x0358(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_14AU[0x30];                                    // 0x0360(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          _mapMaterial;                                              // 0x0390(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCanvasRenderTarget2D*                       _mapTexture;                                               // 0x0398(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HSV2[0x8];                                     // 0x03A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _mapPropertiesOpacity;                                     // 0x03A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FColor                                      _mapPropertiesColor;                                       // 0x03AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture*                                    _dronePositionTexture;                                     // 0x03B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture*                                    _droneDirectionTexture;                                    // 0x03B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture*                                    _dronePingAnimationTexture;                                // 0x03C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture*                                    _myPrisonerPositionTexture;                                // 0x03C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture*                                    _otherPlayerPositionTexture;                               // 0x03D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture*                                    _otherPlayerHighlightPositionTexture;                      // 0x03D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                                   _prisonerPositionTextureSize;                              // 0x03E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _prisonerPingSizeMultiplier;                               // 0x03E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1R8G[0x4];                                     // 0x03EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFont*                                       _otherPlayerFont;                                          // 0x03F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _otherPlayerTextStackOffset;                               // 0x03F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _otherPlayerNameColor;                                     // 0x03FC(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _otherPlayerNameOutlineColor;                              // 0x040C(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _otherPlayerNameHighlightColor;                            // 0x041C(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _otherPlayerNameHighlightOutlineColor;                     // 0x042C(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _customMapBorderWidth;                                     // 0x043C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _customMapBorderColor;                                     // 0x0440(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPrisonerUIDataController*                   _prisonerUIDataController;                                 // 0x0450(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3K7S[0x60];                                    // 0x0458(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDesignableUserWidget*                       _scoreboardWidget;                                         // 0x04B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0UXP[0x12];                                    // 0x04C0(0x0012) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _shouldDrawOtherPlayerLocations;                           // 0x04D2(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldDrawOtherPlayerInfo;                                // 0x04D3(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isLeftMouseButtonPressed;                                 // 0x04D4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8CIZ[0x33];                                    // 0x04D5(0x0033) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerHUD"));
		return ptr;
	}



	void ToggleHUDMode();
	void ShouldShowExtendedWidgetTooltipChanged__DelegateSignature(bool ShouldShowExtendedWidgetTooltip);
	bool ShouldShowExtendedWidgetTooltip();
	void SetHUDMode(ConZ_EPrisonerHUDMode NewMode);
	bool IsShowingSpawnScreen();
	bool IsShowingLoading();
	class UWaypointScreenWidget* GetWaypointScreenWidget();
	class UCanvasPanel* GetHudWidgetCanvasPanel();
	ConZ_EPrisonerHUDMode GetHUDMode();
	void CreatePrisonerUIController(class APrisoner* Prisoner);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerInventoryComponent
// 0x0248 (FullSize[0x02F8] - InheritedSize[0x00B0])
class UPrisonerInventoryComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_74PN[0x10];                                    // 0x00B0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    ItemEquipped;                                              // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    ItemUnequipped;                                            // 0x00D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UCraftingInfoWidget*>                 CraftingInfoWidgets;                                       // 0x00E0(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                              AddSelectionDuration;                                      // 0x00F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AddSelectionReplicationDelay;                              // 0x00F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TickFrequency;                                             // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0TAU[0x4];                                     // 0x00FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              _startingClothesFemale;                                    // 0x0100(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              _startingClothesFemaleDeluxe;                              // 0x0110(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              _startingClothesMale;                                      // 0x0120(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              _startingClothesMaleDeluxe;                                // 0x0130(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UClass*                                      _tournamentStartingItemInHands;                            // 0x0140(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              _tournamentStartingEquipment;                              // 0x0148(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              _tournamentStartingItems;                                  // 0x0158(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_M61L[0x8];                                     // 0x0168(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMesh*                                 _chipMesh;                                                 // 0x0170(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6RYC[0x20];                                    // 0x0178(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<TWeakObjectPtr<class AItem>, uint32_t>        _vicinityItems;                                            // 0x0198(0x0050) (Edit, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XW3Y[0x8];                                     // 0x01E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FGameplayTag, struct FClothesPartSet>  _clothesPartsToDamageByMeleeAttackCapsuleAttachment;       // 0x01F0(0x0050) (Edit, NativeAccessSpecifierPrivate)
	class UInventoryContainerClothes*                  _inventoryClothes;                                         // 0x0240(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryContainerHandsHolsters*            _inventoryHandsHolsters;                                   // 0x0248(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryContainerSelection*                _inventorySelection2;                                      // 0x0250(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0RJJ[0x50];                                    // 0x0258(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<int, struct FQuickAccessData>                 _quickAccessItems;                                         // 0x02A8(0x0050) (Edit, EditConst, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerInventoryComponent"));
		return ptr;
	}



	void UnEquipStolenClothesItemOnServer(class APrisoner* stolenPrisoner, class AClothesItem* Item);
	void UnEquipClothesItemOnServer(class AClothesItem* Item, bool placeInInventory);
	void UnEquipClothesItem(class AClothesItem* Item, bool placeInInventory);
	void SpawnAndDropItemAtOnServer(class UContainerItemDescriptor* Item, const struct FVector& Location, const struct FRotator& Rotation);
	void Server_SetQuickAccessSlotInThrowingMode(int Index, bool Value);
	void Server_SetQuickAccessItemClass(int Index, class UClass* ItemClass);
	void Server_RemoveItemFromQuickAccess(int Index);
	void Server_PickupCorpse(class ACorpse* Corpse);
	void Server_InitializeItemVirtualizedInventory(class UObject* Item, class UObject* container);
	void Server_AddItemToQuickAccess(class AItem* Item, int Index, bool throwingMode);
	void RemoveStolenItemOnServer(class APrisoner* stolenPrisoner, class AItem* Item);
	TScriptInterface<class UInventoryNode> RemoveStacks(int stacksToSplit);
	void RemoveSelectionItemsOnClients(TArray<class AItem*> Items, bool allClients);
	void RemoveSelectionItemsOnClient(TArray<class AItem*> Items);
	void RemoveItemOnServer(class AItem* Item);
	void OnEquippedItemStaticMeshChanged(class AItem* Item);
	void OnEquippedItemSkeletalMeshChanged(class AItem* Item);
	void OnEquippedClothesDestroyed(class AActor* Actor);
	void ItemUnequippedDelegate__DelegateSignature(class UPrisonerInventoryComponent* sender, class AItem* Item);
	void ItemEquippedDelegate__DelegateSignature(class UPrisonerInventoryComponent* sender, class AItem* Item);
	bool IsClothesItemEquipped(class AClothesItem* Item);
	bool HasSelectionItem(class AItem* Item);
	int GetStacksCount();
	float GetMaxHairLength(ConZ_EGender Gender);
	float GetMaxFacialHairLength();
	float GetGearWeightFast();
	float GetGearWeight();
	TArray<class AClothesItem*> GetEquippedItemsForClothesType(ConZ_EClothesType ClothesType);
	TArray<class AClothesItem*> GetEquippedClothes();
	ConZ_EBodySlot GetBodySlotForClothesType(ConZ_EClothesType ClothesType);
	ConZ_EBodySlot GetBodySlotForBodyPart(ConZ_EBodyPart bodyPart);
	void FinishAddSelectionItemOnServer();
	void EquipItemInHandsOnServer(class AItem* Item);
	void EquipItemInHandsOnClient(class AItem* Item);
	void EquipClothesItemOnServer(class AClothesItem* Item);
	void EquipClothesItem(class AClothesItem* Item);
	void DropItemOnServer(class AItem* Item);
	void DropItemOnClient(class AItem* Item);
	void DropItemAtOnServer(class AItem* Item, const struct FVector& Location, const struct FRotator& Rotation);
	void DropAllItemsOnServer(TArray<class AItem*> Items, bool removeSelection);
	void Client_SetQuickAccessSlotInThrowingMode(int Index, bool Value);
	void Client_SetQuickAccessItemClass(int Index, class UClass* ItemClass);
	void Client_ClearQuickAccessItems();
	void Client_AddItemToQuickAccess(class AItem* Item, int Index);
	bool CanStackWith(class UObject* Item);
	bool CanStack();
	bool CanEquipClothesItem(class AClothesItem* Item);
	bool CanAddItem(class AItem* Item, bool tryToJoinItems);
	void AutoAddItemOnServer(class AItem* Item, bool tryToJoinItems);
	void AutoAddAllItemsOnServer(TArray<class AItem*> Items, bool removeSelection);
	void AddStack(const TScriptInterface<class UInventoryNode>& Item);
	void AddSelectionItemOnClient(class AItem* Item);
	void AddDefaultEquipment();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerLifeComponent
// 0x08A8 (FullSize[0x0958] - InheritedSize[0x00B0])
class UPrisonerLifeComponent : public UActorComponent
{
public:
	float                                              GameTimeMultiplier;                                        // 0x00B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BCUDataDownloadInterval;                                   // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ComputeStamina;                                            // 0x00B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_URZP[0x3];                                     // 0x00B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StaminaMultiplier;                                         // 0x00BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UpdateFatness;                                             // 0x00C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UpdateLeanness;                                            // 0x00C1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UpdateHairLength;                                          // 0x00C2(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UpdateFacialHairLength;                                    // 0x00C3(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldAgeAffectAttributes;                                 // 0x00C4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OB6L[0x3];                                     // 0x00C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              BreathOxygenSaturationRateIdle;                            // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BreathOxygenSaturationRateMoving;                          // 0x00CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BreathOxygenSaturationRechargeRate;                        // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChokingOxygenSaturationThreshold;                          // 0x00D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinUnconsciousTimeAfterMeleeCombatKnockout;                // 0x00D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxUnconsciousTimeAfterMeleeCombatKnockout;                // 0x00DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageDeathThreshold;                                      // 0x00E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HJDA[0x4];                                     // 0x00E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    StateAdded;                                                // 0x00E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    StateRemoved;                                              // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    PrisonerDied;                                              // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               _BCUDataInitialized;                                       // 0x0118(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WBLY[0x3];                                     // 0x0119(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SCR_Idle;                                                  // 0x011C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SCR_Walking;                                               // 0x0120(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SCR_Jogging;                                               // 0x0124(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SCR_Running;                                               // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SCR_SlowDiving;                                            // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SCR_MediumDiving;                                          // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SCR_ExtraWhenMovingUphill;                                 // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SCR_ExtraWhenMovingDownhill;                               // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SP_Easy;                                                   // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SP_Demanding;                                              // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SP_VeryDemanding;                                          // 0x0144(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 DexterityModifierVsExcessWeightLoad;                       // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RestingStaminaMultiplier;                                  // 0x0150(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CaloriesConsumptionModifierWhenMovingUphill;               // 0x0154(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CaloriesConsumptionModifierWhenMovingDownhill;             // 0x0158(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeleeDamageModifierWhenStrengthIsMinimal;                  // 0x015C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeleeDamageModifierWhenStrengthIsMaximal;                  // 0x0160(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AlcoholExcretionRate;                                      // 0x0164(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldOverridePulse;                                       // 0x0168(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K8R7[0x3];                                     // 0x0169(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              OverriddenPulse;                                           // 0x016C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldOverrideSystolicBloodPressure;                       // 0x0170(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OWWW[0x3];                                     // 0x0171(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              OverriddenSystolicBloodPressure;                           // 0x0174(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldOverrideDiastolicBloodPressure;                      // 0x0178(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EESO[0x3];                                     // 0x0179(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              OverriddenDiastolicBloodPressure;                          // 0x017C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldOverrideBreathRate;                                  // 0x0180(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VMNF[0x3];                                     // 0x0181(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              OverriddenBreathRate;                                      // 0x0184(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldOverrideBodyTemperature;                             // 0x0188(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N19B[0x3];                                     // 0x0189(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              OverriddenBodyTemperature;                                 // 0x018C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              PrisonWalletItems;                                         // 0x0190(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              PrisonWalletMilestoneEventItems;                           // 0x01A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	ConZ_EPrisonWalletChoiceType                       PrisonWalletMilestoneItemChoiceType;                       // 0x01B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9175[0x3];                                     // 0x01B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                PrisonerWalletLastMilestone;                               // 0x01B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RestHealingSpeedMultiplier;                                // 0x01B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AT6V[0x58];                                    // 0x01BC(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _initialStrength;                                          // 0x0214(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _initialConstitution;                                      // 0x0218(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _initialDexterity;                                         // 0x021C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _initialIntelligence;                                      // 0x0220(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32_t                                           _initialAge;                                               // 0x0224(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldIgnoreBodyTemperatureChanges;                       // 0x0228(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_S6CZ[0x5F];                                    // 0x0229(0x005F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _overrideInitialWeight;                                    // 0x0288(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_P6HT[0x3];                                     // 0x0289(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _initialWeight;                                            // 0x028C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8PO1[0x468];                                   // 0x0290(0x0468) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UDigestionItem*>                      _digestionItems;                                           // 0x06F8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_C8KY[0x8];                                     // 0x0708(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class USickness*>                           _sicknesses;                                               // 0x0710(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UHealingItem*>                        _healingItems;                                             // 0x0720(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PRE3[0xAC];                                    // 0x0730(0x00AC) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _forcedUrinationDefecationWarningDelay;                    // 0x07DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _forcedUrinationDefecationActionDelay;                     // 0x07E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4NOC[0x10];                                    // 0x07E4(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint32_t                                           _replicatedStatus;                                         // 0x07F4(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_47TF[0x8];                                     // 0x07F8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint64_t                                           _replicatedStates;                                         // 0x0800(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32_t                                           _replicatedBreath;                                         // 0x0808(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32_t                                           _replicatedBodyTemp;                                       // 0x080C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32_t                                           _replicatedEnergy;                                         // 0x0810(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32_t                                           _replicatedFatnessLeannessHair;                            // 0x0814(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32_t                                           _replicatedAgilityNormalized;                              // 0x0818(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EPrisonerMovementPace                         _replicatedPace;                                           // 0x081C(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XCWX[0x3];                                     // 0x081D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint32_t                                           _replicatedHealth;                                         // 0x0820(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32_t                                           _replicatedStamina;                                        // 0x0824(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32_t                                           _replicatedSCR;                                            // 0x0828(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YWXU[0x4];                                     // 0x082C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPrisonerBCUMonitorData                     _BCUMonitorData;                                           // 0x0830(0x0128) (Net, RepNotify, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerLifeComponent"));
		return ptr;
	}



	void UpdateAttributesHistoryOnClient(TArray<float> strengthHistory, TArray<float> constitutionHistory, TArray<float> dexterityHistory, TArray<float> intelligenceHistory);
	void TestDoDigestionStuff(float Value);
	void TestDoBladderStuff(float Value);
	void TakeMedicationOnServer(class AMedicationItem* MedicationItem);
	void StopLifeProcessing();
	void StateRemovedDelegate__DelegateSignature(class UPrisonerLifeComponent* sender, ConZ_EBodyState State);
	void StateAddedDelegate__DelegateSignature(class UPrisonerLifeComponent* sender, ConZ_EBodyState State);
	void SetUsingDebugPresets(bool Value);
	void SetStrength(float Value);
	void SetStamina(float Value);
	void SetMuscularAndFatFactors(float muscular, float Fat);
	void SetMusclesOnServer(ConZ_ETestMinMax Value);
	void SetIsDiving(bool IsDiving);
	void SetInitialAttributes(float Strength, float Constitution, float Dexterity, float Intelligence, int Age);
	void SetFatnessOnServer(ConZ_ETestMinMax Value);
	void SetDexterity(float Value);
	void SetConstitution(float Value);
	void SetBreathRateFactorOnServer(float factor);
	void Server_SetStamina(float Value);
	void Server_SetInfiniteStamina(bool Value);
	void Server_HandlePrisonWalletItemSpawning(const struct FVector& Location);
	void PushActionOnServer(float Duration, float staminaDrain, ConZ_EPrisonerTempCategory tempCategory, float staminaRecoveryDelay, float staminaRecoveryTime);
	void PushAction(float Duration, float staminaDrain, ConZ_EPrisonerTempCategory tempCategory, float staminaRecoveryDelay, float staminaRecoveryTime);
	void PrisonerDiedDelegate__DelegateSignature(class UPrisonerLifeComponent* sender);
	void OnRep_ReplicatedStatus();
	void OnRep_ReplicatedStates();
	void OnRep_BCUMonitorData();
	bool IsReadyToEat();
	bool IsLifeProcessingStopped();
	float IsDiving();
	bool IsChoking();
	bool IsBreathing();
	bool IsBodyPartInjured(ConZ_EBodyPart bodyPart);
	bool HasState(ConZ_EBodyState State);
	float GetWLTVeryDemanding();
	float GetWLTModifier();
	float GetWLTForActionDifficulty(ConZ_EPrisonerActionDifficulty actionDifficulty);
	float GetWLTEasy();
	float GetWLTDemanding();
	float GetWLT();
	float GetWeightNormalized();
	float GetWeightLoadLimitForSwimming();
	float GetWeightLoad();
	float GetWeight();
	float GetWCRWalking();
	float GetWCRRunning();
	float GetWCRModifier();
	float GetWCRJogging();
	float GetWCRIdle();
	float GetWaterUsage();
	float GetWaterToAbsorb();
	float GetWaterIntake();
	float GetWaterBalanceClamped();
	float GetWaterBalance();
	float GetVitamin(ConZ_EVitamin vitamin);
	float GetViewRange();
	float GetTemperatureDeviation();
	unsigned char GetTeethNumber();
	float GetSystolicBloodPressure();
	float GetSugarRDA();
	float GetSugarNormalized();
	float GetSugar();
	float GetStrengthNormalized();
	TArray<float> GetStrengthHistory();
	float GetStrengthGain();
	float GetStrengthChangeInLastPeriod();
	float GetStrength();
	float GetStorageFat();
	float GetStomachWaterVolume();
	float GetStomachVolumeRatio();
	float GetStomachVolumeOccupied();
	float GetStomachVolumeMax();
	float GetStaminaRecoveryModifier();
	float GetStaminaNormalized();
	float GetStaminaConsumptionModifier();
	float GetStamina();
	float GetSodiumRDA();
	float GetSodiumNormalized();
	float GetSodium();
	TArray<class USickness*> GetSicknesses();
	float GetSCRWalking();
	float GetSCRRunning();
	float GetSCRJogging();
	float GetSCRIdle();
	float GetSCR();
	float GetSaturatedFatRDA();
	float GetSaturatedFatNormalized();
	float GetSaturatedFat();
	float GetResistPoisonsModifier();
	float GetPulse();
	float GetProteinsRDA();
	float GetProteinsNormalized();
	float GetProteins();
	float GetPerformanceFailure();
	float GetOxygenSaturationRate();
	float GetOxygenSaturation();
	float GetMuscleMassRange();
	float GetMuscleMassChange();
	float GetMuscleMass();
	float GetMSR();
	float GetMSI();
	float GetMineral(ConZ_EMineral mineral);
	float GetMinBreath();
	float GetMinBlood();
	float GetMetabolicCalories();
	float GetMaxHealth();
	float GetMaxFoodWeight();
	float GetMaxBreath();
	float GetLifeTime();
	float GetIntestineVolumeOccupied();
	float GetIntestineVolumeMax();
	float GetIntelligenceNormalized();
	TArray<float> GetIntelligenceHistory();
	float GetIntelligenceChangeInLastPeriod();
	float GetIntelligence();
	float GetInitialWeight();
	float GetInitialMuscleMass();
	float GetInitialBlood();
	float GetHydration();
	float GetHungerCalories();
	float GetHoldingBreathModifier();
	float GetHealthPointsModifier();
	float GetHealth();
	float GetHealingSpeedModifier();
	float GetHealingSpeed();
	TArray<class UHealingItem*> GetHealingItems();
	float GetFoodWeightRatio();
	float GetFoodWeight();
	float GetFiberRDA();
	float GetFiberNormalized();
	float GetFiber();
	float GetFatRDA();
	float GetFatNormalized();
	float GetFat();
	float GetEnergyUsage();
	float GetEnergyIntake();
	float GetEnergy();
	ConZ_EPrisonerECGRhythm GetECGRhythm();
	float GetEatingSpeed();
	float GetDrunkenness();
	TArray<class UDigestionItem*> GetDigestionItems();
	float GetDiastolicBloodPressure();
	float GetDexterityNormalized();
	float GetDexterityMultiplier(float weightLoad, ConZ_EPrisonerActionDifficulty actionDifficulty);
	TArray<float> GetDexterityHistory();
	float GetDexterityGain();
	float GetDexterityChangeInLastPeriod();
	float GetDexterity();
	float GetDailyWaterIntake();
	float GetDailySugarCalories();
	float GetDailyProteinsCalories();
	float GetDailyFatCalories();
	float GetDailyCarbsCalories();
	float GetDailyCaloriesIntake();
	float GetDailyAlcoholCalories();
	float GetCurrentWaterConsumption();
	ConZ_EPrisonerMovementPace GetCurrentState();
	float GetCurrentStaminaChange();
	float GetCurrentCaloriesConsumption();
	float GetConstitutionNormalized();
	TArray<float> GetConstitutionHistory();
	float GetConstitutionGain();
	float GetConstitutionChangeInLastPeriod();
	float GetConstitution();
	float GetColonVolumeOccupied();
	float GetColonVolumeMax();
	float GetCarbsRDA();
	float GetCarbsNormalized();
	float GetCarbs();
	float GetCaloriesWalking();
	float GetCaloriesUsageSpeed();
	float GetCaloriesRunning();
	float GetCaloriesJogging();
	float GetCaloriesIdle();
	float GetCaloriesBurntModifier();
	float GetCaloriesBalance();
	float GetCalories();
	float GetBreathVolume();
	float GetBreath();
	float GetBodyTempIncrease();
	float GetBodyTempCategory();
	float GetBodyTemp();
	float GetBlood();
	ConZ_EBleedingType GetBleedingType(ConZ_EBodyPart bodyPart, bool returnNoneIfTreated);
	float GetBladderVolumeOccupied();
	float GetBladderVolumeMax();
	float GetBFP();
	bool GetBCUDataInitialized();
	bool GetAttributesHistoryInitialized();
	float GetAlcohol();
	float GetAge();
	class USickness* FindSickness(ConZ_EDiagnosedResult diagnosedResult);
	void EatFoodOnServer(class AFoodItem* FoodItem, bool eatAll);
	void DrinkWaterOnServer(float quantity, float salinity);
	void DownloadBCUMonitorDataFromServer();
	void DieOnServer();
	void Client_WarnForBodyState(ConZ_EBodyState State);
	void Client_TriggerTakenDamageVisionEffect(float damageRatio, bool shouldShakeCamera);
	void CancelEatingOnServer();
	void CancelEating();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerLifeIndicatorsSprite
// 0x0028 (FullSize[0x0288] - InheritedSize[0x0260])
class UPrisonerLifeIndicatorsSprite : public UUserWidget
{
public:
	class UBreathingBarLungsWidget*                    _breathingBarLungsWidget;                                  // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_M5J6[0xC];                                     // 0x0268(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _noiseInstigatedDelay;                                     // 0x0274(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CG5A[0x10];                                    // 0x0278(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerLifeIndicatorsSprite"));
		return ptr;
	}



	void ShowBreathingWidgets();
	bool ShouldShowBreathingWidgets();
	void SetNoiseBarPercent(float percent);
	void SetBreathingBarPercent(float frontCirclePercent, float backCirclePercent);
	void SetAIDetectionBarPercent(float percent);
	void ResetAIDetectionTimer();
	void OnStartDiving();
	void OnNoiseInstigated(float noisePercent);
	void OnEndDiving();
	void OnAIDetectionTimerChanged(float detectionTimer);
	void HideBreathingWidgets();
	float GetNoiseBarPercent();
	float GetFrontBreathingBarPercent();
	class UBreathingBarLungsWidget* GetBreathingBarLungsWidget();
	float GetBackBreathingBarPercent();
	float GetAIDetectionBarPercent();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerLoadout
// 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
class UPrisonerLoadout : public UDataAsset
{
public:
	class UClass*                                      primary;                                                   // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              primaryAttachments;                                        // 0x0038(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UClass*                                      secondary;                                                 // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              secondaryAttachments;                                      // 0x0050(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UClass*                                      tertiary;                                                  // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              tertiaryAttachments;                                       // 0x0068(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              outfit;                                                    // 0x0078(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              support;                                                   // 0x0088(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerLoadout"));
		return ptr;
	}



	void EquipPrisoner(class APrisoner* Prisoner, TArray<class AItem*>* givenItems);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerMovementComponent
// 0x0658 (FullSize[0x1160] - InheritedSize[0x0B08])
class UPrisonerMovementComponent : public UConZCharacterMovementComponent
{
public:
	unsigned char                                      UnknownData_9XB1[0x4];                                     // 0x0B08(0x0004) Fix Super Size
	float                                              CapsuleHalfHeightWhenProne;                                // 0x0B0C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CapsuleHalfHeightWhenSwimming;                             // 0x0B10(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseCustomRotationRate;                                     // 0x0B14(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               RequestedPathMovesForwardOnly;                             // 0x0B15(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LRF7[0x2];                                     // 0x0B16(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RotationInterpolationSpeed;                                // 0x0B18(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EE6E[0x4];                                     // 0x0B1C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 MaxRotationRateCurve;                                      // 0x0B20(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RotationRateMultiplierWhenStanding;                        // 0x0B28(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RotationRateMultiplierWhenCrouched;                        // 0x0B2C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RotationRateMultiplierWhenProne;                           // 0x0B30(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RotationRateMultiplierWhenSwimming;                        // 0x0B34(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RotationRateMultiplierWhenSwimmingAndDiving;               // 0x0B38(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GroundSlopeAngleForSpeedScalingSmoothingRate;              // 0x0B3C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GroundSlopeAngleSmoothingRate;                             // 0x0B40(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseSmoothedGroundSlopeAngleForPaceChecks;                  // 0x0B44(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PA8I[0x3];                                     // 0x0B45(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinGroundSlopeAngleForJogging;                             // 0x0B48(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxGroundSlopeAngleForJogging;                             // 0x0B4C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinGroundSlopeAngleForRunning;                             // 0x0B50(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxGroundSlopeAngleForRunning;                             // 0x0B54(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinSpeedModifierWhenMovingUphill;                          // 0x0B58(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BaseJumpZVelocity;                                         // 0x0B5C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxAbsoluteVelocityZAfterClimb;                            // 0x0B60(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StaminaUnitsToDrainOnJump;                                 // 0x0B64(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 JumpZVelocityMultiplierVsSpeed;                            // 0x0B68(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 JumpZVelocityMultiplierVsGroundSlopeAngle;                 // 0x0B70(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPrisonerClimbAnimationInfo>         ClimbAnimations;                                           // 0x0B78(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                              ClimbingStaminaDrainModifier;                              // 0x0B88(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClimbingPlayRateMultiplierWhenRequiredHandIsNotFree;       // 0x0B8C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ClimbingDebuggingEnabled;                                  // 0x0B90(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K25Q[0x3];                                     // 0x0B91(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ClimbingDebuggingDrawTime;                                 // 0x0B94(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LadderClimbingCapsuleBias;                                 // 0x0B98(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LadderClimbingMaxSpeed;                                    // 0x0BA4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanClimbOffLadderUpwardsAutomatically;                     // 0x0BA8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanClimbOffLadderDownwardsAutomatically;                   // 0x0BA9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1NZP[0x2];                                     // 0x0BAA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxHorzDistanceToLadderForClimbing;                        // 0x0BAC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumberOfLadderPeekSteps;                                   // 0x0BB0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     PostLadderClimbingLaunchVelocity;                          // 0x0BB4(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxHeightToJumpOffLadderSafely;                            // 0x0BC0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxFallingSpeedAllowedForLadderClimbing;                   // 0x0BC4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxGroundSlopeAllowedForLadderClimbing;                    // 0x0BC8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W40X[0x4];                                     // 0x0BCC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 MaxHorzDistanceToWindowForClimbingVsSpeed;                 // 0x0BD0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWindowClimbingAnimationInfo>        WindowClimbingAnimations;                                  // 0x0BD8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                              WaterImmersionToStartSwimming;                             // 0x0BE8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WaterImmersionToStopSwimming;                              // 0x0BEC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SwimmingToWalkingDepthTolerance;                           // 0x0BF0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SwimmingToWalkingCapsuleCollisionTolerance;                // 0x0BF4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DesiredWaterImmersion;                                     // 0x0BF8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DesiredWaterImmersionCorrectionAcceleration;               // 0x0BFC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 DesiredWaterImmersionCorrectionAccelerationCurve;          // 0x0C00(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WaterResurfaceAcceleration;                                // 0x0C08(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   OceanWavesAcceleration;                                    // 0x0C0C(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WaterImmersionAfterWhichRunningIsDisabled;                 // 0x0C14(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ImmersionCorrectionDownMultiplier;                         // 0x0C18(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RotationRateMultiplierWhenImmersedInWater;                 // 0x0C1C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DiveInAccelerationScale;                                   // 0x0C20(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DiveInAccelerationTimeout;                                 // 0x0C24(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DiveInCollisionCheckOffset;                                // 0x0C28(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BuoyancyWhenDiving;                                        // 0x0C2C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BuoyancyWhenNotDiving;                                     // 0x0C30(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RotationRatePitchWhenDiving;                               // 0x0C34(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal                   _repAccelerationNormal;                                    // 0x0C38(0x000C) (Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3OSB[0x17C];                                   // 0x0C44(0x017C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _repBuoyancy;                                              // 0x0DC0(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7NSM[0x18F];                                   // 0x0DC1(0x018F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FLadderInfoRepData                          _ladderInfoRepData;                                        // 0x0F50(0x0050) (Net, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LM06[0x1C0];                                   // 0x0FA0(0x01C0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerMovementComponent"));
		return ptr;
	}



	void Server_SetDivingState(ConZ_EPrisonerDivingState Value);
	void Server_ClimbOffLadder();
	void OnRep_Buoyancy();
	void OnRep_AccelerationNormal();
	void NetMulticast_PlayAnimMontageIfSimulatedProxy(class UAnimMontage* Montage, float PlayRate);
	void NetMulticast_FinishAnchoring(bool anchoringSucceded);
	bool JumpOffLadder(const struct FVector& jumpVelocity);
	float IsFlyingOrFalling();
	bool IsDiving();
	bool IsClimbingWindow();
	bool IsClimbingLadder();
	bool IsClimbing();
	struct FWindowInfo GetWindowInfo();
	struct FVector GetWaterVolumeHitLocation();
	struct FVector GetWaterSurfaceLocation();
	float GetWaterImmersionDepth();
	float GetTimeSpentInAir();
	float GetTimeSpentFalling();
	ConZ_EPrisonerMovementPace GetMaxAllowedPace();
	struct FLadderInfo GetLadderInfo();
	float GetGroundSlopeAngleSmoothed();
	float GetGroundSlopeAngleForSpeedScaling();
	float GetGroundSlopeAngle();
	float GetDivingDepth();
	float GetDesiredCoursePitchAngle();
	float GetDesiredCourseAngle();
	ConZ_EPrisonerMovementMode GetCustomMovementMode();
	struct FClimbableObstacleInfo GetClimbableObstacleInfo();
	struct FHitResult GetAnticipatedLandingSpot();
	float GetActualCourseAngle();
	bool DetectWindow(struct FWindowInfo* Result);
	bool DetectLadderDisembarkLocation(const struct FLadderInfo& LadderInfo, struct FVector* newCapsuleLocation, struct FRotator* newCapsuleRotation);
	bool DetectLadder(struct FLadderInfo* Result);
	bool DetectClimbableObstacle(struct FClimbableObstacleInfo* Result);
	bool ClimbWindow(const struct FWindowInfo& WindowInfo);
	bool ClimbOntoLadder(const struct FLadderInfo& LadderInfo);
	bool ClimbOffLadder();
	bool Climb();
	bool CanClimbWindow();
	bool CanClimbOntoLadder();
	bool CanClimb();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerMovementSettings
// 0x01E8 (FullSize[0x0218] - InheritedSize[0x0030])
class UPrisonerMovementSettings : public UDataAsset
{
public:
	struct FPrisonerMovementSettings_Ground            Ground;                                                    // 0x0030(0x016C) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPrisonerMovementSettings_Air               Air;                                                       // 0x019C(0x000C) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FPrisonerMovementSettings_Water             Water;                                                     // 0x01A8(0x0054) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                              RotationRateMultiplierWhenDexterityIsMinimal;              // 0x01FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RotationRateMultiplierWhenDexterityIsMaximal;              // 0x0200(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClimbingSpeedMultiplierWhenDexterityIsMinimal;             // 0x0204(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClimbingSpeedMultiplierWhenDexterityIsMaximal;             // 0x0208(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WindowClimbingSpeedMultiplierWhenDexterityIsMinimal;       // 0x020C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WindowClimbingSpeedMultiplierWhenDexterityIsMaximal;       // 0x0210(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HOK5[0x4];                                     // 0x0214(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerMovementSettings"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerRestingComponent
// 0x0058 (FullSize[0x0118] - InheritedSize[0x00C0])
class UPrisonerRestingComponent : public UCharacterActionComponent
{
public:
	struct FPrisonerRestingData                        _restingData;                                              // 0x00C0(0x0010) (Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	struct FPrisonerRestingDataAutonomous              _restingDataAutonomous;                                    // 0x00D0(0x001C) (Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E4QX[0x2C];                                    // 0x00EC(0x002C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerRestingComponent"));
		return ptr;
	}



	void OnRep_RestingDataAutonomous();
	void OnRep_RestingData();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TeleportUserData
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTeleportUserData : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TeleportUserData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerTeleportUserData
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UPrisonerTeleportUserData : public UTeleportUserData
{
public:
	unsigned char                                      UnknownData_3XNH[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerTeleportUserData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerShotsFiredTrackerComponent
// 0x0010 (FullSize[0x00C0] - InheritedSize[0x00B0])
class UPrisonerShotsFiredTrackerComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_I81W[0x4];                                     // 0x00B0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _repNumShotsFired;                                         // 0x00B4(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4831[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerShotsFiredTrackerComponent"));
		return ptr;
	}



	void OnRep_NumShotsFired();
	void Client_SetWidgetVisibilityAndReset(bool Visibility);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerSkillComponent
// 0x01C0 (FullSize[0x0270] - InheritedSize[0x00B0])
class UPrisonerSkillComponent : public UActorComponent
{
public:
	TArray<struct FPrisonerInitialSkillInfo>           InitialSkills;                                             // 0x00B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                              TickFrequency;                                             // 0x00C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ReplicatedMedicalDiagnosisDone;                            // 0x00C4(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B6T6[0x13];                                    // 0x00C5(0x0013) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class USkill*>                              _skills;                                                   // 0x00D8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class USkillAction*>                        _actions;                                                  // 0x00E8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TM4Z[0xA8];                                    // 0x00F8(0x00A8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkillClasses*                               _skillClasses;                                             // 0x01A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AItem*>                               _lastSurroundingItems;                                     // 0x01A8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_W7KO[0x8];                                     // 0x01B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class APrisoner*>                           _detectablePrisoners;                                      // 0x01C0(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VMCM[0x60];                                    // 0x01D0(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FMedicalRecord                              _replicatedMedicalRecord;                                  // 0x0230(0x0028) (Net, RepNotify, NativeAccessSpecifierPrivate)
	TArray<struct FSkillRecord>                        _replicatedSkills;                                         // 0x0258(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_I8VZ[0x4];                                     // 0x0268(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint32_t                                           _replicatedNoiseLevel;                                     // 0x026C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerSkillComponent"));
		return ptr;
	}



	void UpdateNearbyFoliageCoverageOnServer(float coverage, bool isInBushes);
	void UpdateIsInFocusModeOnServer(bool isInFocus);
	void TreatSicknessOnServer(class APrisoner* Patient, ConZ_EDiagnosedResult diagnosedResult, TArray<class AItem*> medicalItems);
	void TreatBrokenLimbsOnServer(class APrisoner* Patient, ConZ_EBrokenLimbsTreatment treatment, TArray<class AItem*> medicalItems);
	void TreatBrokenLimbsOnClients(class APrisoner* Patient);
	void ShowWatchingWarningOnClient();
	void SetSkillStaminaConsumptionOnServer(class USkill* Skill, float consumption);
	void SetDetectablePrisonersOnServer(TArray<class APrisoner*> detectablePrisoners);
	void Server_IncreaseSkillExperiencePoints(ConZ_ESkillReplicationID skillReplicationID, float Points);
	void SendVisiblePrisoners();
	void RevivePatientOnServer(class APrisoner* Patient);
	void RevivePatientOnClients(class APrisoner* Patient);
	void RequestNearbyFoliageUpdateOnClient();
	void PullToothOnServer(class APrisoner* Patient, TArray<class AItem*> medicalItems);
	void PullToothOnClients(class APrisoner* Patient);
	void PerformSurgeryOnServer(class APrisoner* Patient, TArray<class AItem*> medicalItems);
	void PerformSurgeryOnClients(class APrisoner* Patient);
	void PerformAnesthesiaOnServer(class APrisoner* Patient, ConZ_EAnesthesiaType anesthesiaType, TArray<class AItem*> medicalItems);
	void PerformAnesthesiaOnClients(class APrisoner* Patient);
	void PatchWoundsOnServer(class APrisoner* Patient, TArray<class AItem*> medicalItems);
	void PatchWoundsOnClients(class APrisoner* Patient);
	void OnRep_Skills();
	void OnRep_MedicalRecord();
	void MedicalDiagnosisOnServer(class APrisoner* Patient, ConZ_EMedicalDiagnosisType diagnosisType);
	void MakeUnconsciousOnServer(class APrisoner* Patient);
	void MakeUnconsciousOnClients(class APrisoner* Patient);
	void MakeConsciousOnServer(class APrisoner* Patient);
	void MakeConsciousOnClients(class APrisoner* Patient);
	void HighlightNearbyItems();
	void HighlightItemOnClient(class AItem* Item);
	TArray<class USkill*> GetSkills();
	void ForceSkillsReplicationOnServer();
	void ArtificalPerspirationOnServer(class APrisoner* Patient);
	void ArtificalPerspirationOnClients(class APrisoner* Patient);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerSkillComponentUIData
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UPrisonerSkillComponentUIData : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerSkillComponentUIData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerSkillComponentUIDataImpl
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UPrisonerSkillComponentUIDataImpl : public UPrisonerSkillComponentUIData
{
public:
	unsigned char                                      UnknownData_UT41[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UPrisonerSkillUIData*>                SkillsUIData;                                              // 0x0030(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerSkillComponentUIDataImpl"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerSkillUIData
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UPrisonerSkillUIData : public UObject
{
public:
	unsigned char                                      UnknownData_8BYS[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerSkillUIData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerSkillUIDataImpl
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UPrisonerSkillUIDataImpl : public UPrisonerSkillUIData
{
public:
	unsigned char                                      UnknownData_XEB5[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerSkillUIDataImpl"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerSoundComponent
// 0x01C0 (FullSize[0x0298] - InheritedSize[0x00D8])
class UPrisonerSoundComponent : public UCharacterSoundComponent
{
public:
	float                                              MinBreathingRateToPostPeriodicInhaleExhaleAudioEvents;     // 0x00D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDistanceToListenerToPostPeriodicInhaleExhaleAudioEvents; // 0x00DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               PeriodicInhaleAudioEvent;                                  // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               PeriodicExhaleAudioEvent;                                  // 0x00E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               HoldBreathInhaleAudioEvent;                                // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               HoldBreathExhaleAudioEvent;                                // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               HoldBreathBreathlessExhaleAudioEvent;                      // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinHeartRateToPostHeartbeatAudioEvent;                     // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IH5A[0x4];                                     // 0x010C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               HeartbeatAudioEvent;                                       // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               FootstepsAudioEvent;                                       // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               FootstepsEnhancerAudioEvent;                               // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MovingThroughFoliageGateDuration;                          // 0x0128(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_69XU[0x4];                                     // 0x012C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               StartGenericMovingThroughFoliageAudioEvent;                // 0x0130(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopGenericMovingThroughFoliageAudioEvent;                 // 0x0138(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               GenericOneShotMovingThroughFoliageAudioEvent;              // 0x0140(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               GearNoiseAudioEvent;                                       // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               GearNoiseAudioEventWhenInWater;                            // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ItemMotionNoiseTimeToLive;                                 // 0x0158(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7LG6[0x4];                                     // 0x015C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               StartGenericEatItemAudioEvent;                             // 0x0160(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopGenericEatItemAudioEvent;                              // 0x0168(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StartGenericDrinkItemAudioEvent;                           // 0x0170(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopGenericDrinkItemAudioEvent;                            // 0x0178(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StartGenericDrinkWaterAudioEvent;                          // 0x0180(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopGenericDrinkWaterAudioEvent;                           // 0x0188(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StartGenericExamineObjectAudioEvent;                       // 0x0190(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopGenericExamineObjectAudioEvent;                        // 0x0198(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StartGenericCraftAudioEvent;                               // 0x01A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopGenericCraftAudioEvent;                                // 0x01A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StartGenericUncraftAudioEvent;                             // 0x01B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopGenericUncraftAudioEvent;                              // 0x01B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StartGenericVehicleRepairAudioEvent;                       // 0x01C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopGenericVehicleRepairAudioEvent;                        // 0x01C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StartWashClothAudioEvent;                                  // 0x01D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopWashClothAudioEvent;                                   // 0x01D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StartInGameAudioEvent;                                     // 0x01E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopInGameAudioEvent;                                      // 0x01E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               CalmStateAudioEvent;                                       // 0x01F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               IntenseStateAudioEvent;                                    // 0x01F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               CombatStateAudioEvent;                                     // 0x0200(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   OutOfBoundsSound;                                          // 0x0208(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               ChipExplosionSound;                                        // 0x0210(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DKEZ[0x48];                                    // 0x0218(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FActiveMovingThroughFoliageSounds>   _activeMovingThroughFoliageSounds;                         // 0x0260(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XJHW[0x1C];                                    // 0x0270(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _maxNumberOfFootstepsToPlayFootstepEnhancerSound;          // 0x028C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _minNumberOfFootstepsToPlayFootstepEnhancerSound;          // 0x0290(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PJMA[0x4];                                     // 0x0294(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerSoundComponent"));
		return ptr;
	}



	bool UpdateMovingThroughFoliageSounds(int PlayingID, ConZ_EMotionIntensity motionIntensity);
	bool StopMovingThroughFoliageSounds(int PlayingID);
	void StopAllMovingThroughFoliageSounds();
	int PlayMovingThroughFoliageSounds(class UAkAudioEvent* StartAudioEvent, class UAkAudioEvent* StopAudioEvent, ConZ_EMotionIntensity motionIntensity);
	void PlayGearSounds(ConZ_EMotionIntensity motionIntensity);
	void PlayFootstepSounds(TEnumAsByte<PhysicsCore_EPhysicalSurface> inPhysicalSurface);
	void OnOutOfBoundsSoundPercentChanged(class USoundWave* PlayingSoundWave, float PlaybackPercent);
	void OnBorderCrossingStateChanged(class APrisoner* Prisoner, ConZ_EPrisonerBorderCrossingPenalty penalty);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerSubview
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UPrisonerSubview : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerSubview"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerThirdPersonSubviewComponent
// 0x0650 (FullSize[0x08D0] - InheritedSize[0x0280])
class UPrisonerThirdPersonSubviewComponent : public USpringArmComponent
{
public:
	unsigned char                                      UnknownData_J02S[0x8];                                     // 0x0280(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FieldOfView;                                               // 0x0288(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseFieldOfViewForLOD;                                      // 0x028C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ConstrainAspectRatio;                                      // 0x028D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JNZK[0x2];                                     // 0x028E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              AspectRatio;                                               // 0x0290(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinViewYaw;                                                // 0x0294(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxViewYaw;                                                // 0x0298(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinViewPitch;                                              // 0x029C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxViewPitch;                                              // 0x02A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeanOffsetLeft;                                            // 0x02A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeanOffsetRight;                                           // 0x02A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     GlobalOffset;                                              // 0x02AC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               MirrorAroundXZPlane;                                       // 0x02B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZX38[0x3];                                     // 0x02B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     MaxLocalOffsetWhenColliding;                               // 0x02BC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldConstrainTraceOriginToOwnerCapsule;                  // 0x02C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ONDC[0x3];                                     // 0x02C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              OwnerCapsuleContrainBuffer;                                // 0x02CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     TraceOriginGlobalOffset;                                   // 0x02D0(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     TraceOriginRelativeOffset;                                 // 0x02DC(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LocalOffsetCurvesBlendSpeed;                               // 0x02E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UCKF[0x4];                                     // 0x02EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FLocalOffsetCurves                          LocalOffsetCurves[0x2];                                    // 0x02F0(0x0040) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FName                                       AnimationOffsetTZCurveName;                                // 0x0330(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PostProcessBlendWeight;                                    // 0x0338(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3FJK[0x4];                                     // 0x033C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPostProcessSettings                        PostProcessSettings;                                       // 0x0340(0x0550) (Edit, BlueprintVisible, Interp, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W4AL[0x18];                                    // 0x0890(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     _clippingPreventionOffset;                                 // 0x08A8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _clippingPreventionSweepLength;                            // 0x08B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _clippingPreventionAmount;                                 // 0x08B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _clippingPreventionTraceOffset;                            // 0x08BC(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minFactorForPrisonerHiding;                               // 0x08C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Y887[0x4];                                     // 0x08CC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerThirdPersonSubviewComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerThirdPersonViewComponent
// 0x0148 (FullSize[0x0218] - InheritedSize[0x00D0])
class UPrisonerThirdPersonViewComponent : public UPrisonerViewComponent
{
public:
	float                                              StandingToCrouchingSubviewBlendDuration;                   // 0x00D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StandingToProneSubviewBlendDuration;                       // 0x00D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CrouchingToStandingSubviewBlendDuration;                   // 0x00D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CrouchingToProneSubviewBlendDuration;                      // 0x00DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProneToStandingSubviewBlendDuration;                       // 0x00E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProneToCrouchingSubviewBlendDuration;                      // 0x00E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StandingMeleeSubviewBlendDuration;                         // 0x00E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StandingAimingSubviewBlendDuration;                        // 0x00EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CrouchingAimingSubviewBlendDuration;                       // 0x00F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProneAimingSubviewBlendDuration;                           // 0x00F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollToSubviewBlendDuration;                             // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RagdollFromSubviewBlendDuration;                           // 0x00FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NarrowLadderSubviewBlendDuration;                          // 0x0100(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SwimmingSubviewBlendInDuration;                            // 0x0104(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SwimmingSubviewBlendOutDuration;                           // 0x0108(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DivingSubviewBlendInDuration;                              // 0x010C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DivingSubviewBlendOutDuration;                             // 0x0110(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClimbingWindowToSubviewBlendDuration;                      // 0x0114(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClimbingWindowFromSubviewBlendDuration;                    // 0x0118(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefecatingToSubviewBlendDuration;                          // 0x011C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefecatingFromSubviewBlendDuration;                        // 0x0120(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThrowingToSubviewBlendDuration;                            // 0x0124(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThrowingFromSubviewBlendDuration;                          // 0x0128(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       StandingSubviewName;                                       // 0x012C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       CrouchingSubviewName;                                      // 0x0134(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ProneSubviewName;                                          // 0x013C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       StandingMeleeSubviewName;                                  // 0x0144(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       StandingAimingSubviewName;                                 // 0x014C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       CrouchingAimingSubviewName;                                // 0x0154(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ProneAimingSubviewName;                                    // 0x015C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       RagdollSubviewName;                                        // 0x0164(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       NarrowLadderSubviewName;                                   // 0x016C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SwimmingSubviewName;                                       // 0x0174(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       DivingSubviewName;                                         // 0x017C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ClimbingWindowSubviewName;                                 // 0x0184(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       DefecatingSubviewName;                                     // 0x018C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ThrowingSubviewName;                                       // 0x0194(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RR5O[0x7C];                                    // 0x019C(0x007C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerThirdPersonViewComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerThrowComponent
// 0x0010 (FullSize[0x00D0] - InheritedSize[0x00C0])
class UPrisonerThrowComponent : public UCharacterActionComponent
{
public:
	ConZ_EThrowingState                                _throwingState;                                            // 0x00C0(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7T3R[0x3];                                     // 0x00C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AItem>                        _itemToThrow;                                              // 0x00C4(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Y6NR[0x4];                                     // 0x00CC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerThrowComponent"));
		return ptr;
	}



	void OnRep_ThrowState();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerUIData
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UPrisonerUIData : public UObject
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerUIData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerUIDataImpl
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UPrisonerUIDataImpl : public UPrisonerUIData
{
public:
	unsigned char                                      UnknownData_I1N8[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrisonerSkillComponentUIData*               SkillComponentUIData;                                      // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrisonerBodySimulationComponentUIData*      BodySimulationComponentUIData;                             // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerUIDataImpl"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerUIDataRequest
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UPrisonerUIDataRequest : public UPlayerRpcChannelServerDataRequest
{
public:
	unsigned char                                      UnknownData_HFU5[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerUIDataRequest"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerUIDataResponse
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UPrisonerUIDataResponse : public UPlayerRpcChannelServerDataResponse
{
public:
	class UPrisonerUIData*                             _payload;                                                  // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerUIDataResponse"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerUIStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UPrisonerUIStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerUIStatics"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PrisonerUITooltipCache
// 0x00F0 (FullSize[0x0118] - InheritedSize[0x0028])
class UPrisonerUITooltipCache : public UObject
{
public:
	unsigned char                                      UnknownData_EZB3[0xF0];                                    // 0x0028(0x00F0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PrisonerUITooltipCache"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Projectile
// 0x01E8 (FullSize[0x0408] - InheritedSize[0x0220])
class AProjectile : public AActor
{
public:
	class UStaticMeshComponent*                        StaticMesh;                                                // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               RotationFollowsVelocity;                                   // 0x0228(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsInstantHit;                                              // 0x0229(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AddImpulseOnHit;                                           // 0x022A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QGFS[0x1];                                     // 0x022B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ImpulseMultiplier;                                         // 0x022C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxImpulse;                                                // 0x0230(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_361W[0x4];                                     // 0x0234(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UProjectileImpactEffects*                    ImpactEffects;                                             // 0x0238(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProjectileData                             ProjectileData;                                            // 0x0240(0x0058) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              MeshScaleStartLocal;                                       // 0x0298(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeshScaleRangeLocal;                                       // 0x029C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeshScaleMinLocal;                                         // 0x02A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeshScaleMaxLocal;                                         // 0x02A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeshScaleStart;                                            // 0x02A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeshScaleRange;                                            // 0x02AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeshScaleMin;                                              // 0x02B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeshScaleMax;                                              // 0x02B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TraceScaleMultiplier;                                      // 0x02B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GravityScale;                                              // 0x02BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               FlyByAudioEvent;                                           // 0x02C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ColorMaterialParameterName;                                // 0x02C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                InitialColor;                                              // 0x02D0(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                FinalColor;                                                // 0x02E0(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxHitCount;                                               // 0x02F0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NoiseLoudnessOnHit;                                        // 0x02F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IgnoreCallingWeaponsFiringEffects;                         // 0x02F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WZDT[0x3];                                     // 0x02F9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ExperienceMultiplier;                                      // 0x02FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldForceStopWhenNoVelocity;                             // 0x0300(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanEverCollide;                                            // 0x0301(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8VEI[0x16];                                    // 0x0302(0x0016) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _useFixedTimestep;                                         // 0x0318(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7HXJ[0x3];                                     // 0x0319(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _fixedTimestep;                                            // 0x031C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JTXW[0x18];                                    // 0x0320(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _zeroRange;                                                // 0x0338(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _windage;                                                  // 0x033C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _distanceTraveled;                                         // 0x0340(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _meshScaleFactor;                                          // 0x0344(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_E1VC[0x20];                                    // 0x0348(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _offsetFromBarrel;                                         // 0x0368(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BNGZ[0x4];                                     // 0x036C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _randomSeed;                                               // 0x0370(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VQG4[0x54];                                    // 0x0374(0x0054) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _doNotForceInitialReplication;                             // 0x03C8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1P1M[0x3];                                     // 0x03C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _muzzleVelocity;                                           // 0x03CC(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _createdOnServer;                                          // 0x03D0(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_H48G[0x3];                                     // 0x03D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _halfAngle;                                                // 0x03D4(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V3W5[0x20];                                    // 0x03D8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ConZ_EWeaponFiringMode                             _weaponFiringModeWhenShot;                                 // 0x03F8(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0PYF[0x7];                                     // 0x03F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFiredShotDescriptionRep                    _firedShotDescriptionRep;                                  // 0x0400(0x0004) (Net, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NE57[0x4];                                     // 0x0404(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Projectile"));
		return ptr;
	}



	void OnStop(const struct FHitResult& HitResult);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ProjectileArrow
// 0x0040 (FullSize[0x0448] - InheritedSize[0x0408])
class AProjectileArrow : public AProjectile
{
public:
	class USceneComponent*                             _tempSceneComponent;                                       // 0x0408(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                             _relativeRotationSceneComponent;                           // 0x0410(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FProjectileArrowData                        _projectileArrowData;                                      // 0x0418(0x0020) (BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QLBP[0x10];                                    // 0x0438(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ProjectileArrow"));
		return ptr;
	}



	void UpdateParameters();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ProjectileDamageType
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UProjectileDamageType : public UDamageType
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ProjectileDamageType"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ProjectileFlare
// 0x0060 (FullSize[0x0468] - InheritedSize[0x0408])
class AProjectileFlare : public AProjectile
{
public:
	class UParticleSystemComponent*                    _particleSystemComponent;                                  // 0x0408(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPointLightComponent*                        _pointLightComponent;                                      // 0x0410(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkComponent*                                _akFlareComponent;                                         // 0x0418(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _hasParachute;                                             // 0x0420(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AZAR[0x3];                                     // 0x0421(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _parachuteGravityScale;                                    // 0x0424(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _parachuteEffectiveBallisticCoefficient;                   // 0x0428(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _parachuteParticlesScale;                                  // 0x042C(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _parachuteParticlesScaleSpeed;                             // 0x0438(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JZWH[0x4];                                     // 0x043C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               _burnStart;                                                // 0x0440(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _burnEnd;                                                  // 0x0448(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _burnTime;                                                 // 0x0450(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4FQQ[0x14];                                    // 0x0454(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ProjectileFlare"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ProjectileImpactEffects
// 0x02B0 (FullSize[0x02E0] - InheritedSize[0x0030])
class UProjectileImpactEffects : public UDataAsset
{
public:
	float                                              MinDecalSize;                                              // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDecalSize;                                              // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinDecalLifetime;                                          // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDecalLifetime;                                          // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DecalFadeFactor;                                           // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ParticleEffectsInitialScale;                               // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ParticleEffectsScaleDistanceStart;                         // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ParticleEffectsScaleDistanceRange;                         // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ParticleEffectsScaleByDistanceFactor;                      // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JKQ0[0x4];                                     // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             BulletPenetrationExitParticlesDaytime;                     // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             BulletPenetrationExitParticlesNighttime;                   // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterial*                                   DayTimePenetrationDecal;                                   // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterial*                                   NightTimePenetrationDecal;                                 // 0x0070(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AudioEvent;                                                // 0x0078(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Default;                                                   // 0x0080(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           grass;                                                     // 0x0090(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           ForrestGroundCoastal;                                      // 0x00A0(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           ForrestGroundContinental;                                  // 0x00B0(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Rock;                                                      // 0x00C0(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Stone;                                                     // 0x00D0(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Gravel;                                                    // 0x00E0(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           GravelBeach;                                               // 0x00F0(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Pebbles;                                                   // 0x0100(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Snow;                                                      // 0x0110(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Ice;                                                       // 0x0120(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Sand;                                                      // 0x0130(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Asphalt;                                                   // 0x0140(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Dirt;                                                      // 0x0150(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Water;                                                     // 0x0160(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           WaterOcean;                                                // 0x0170(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Cloth;                                                     // 0x0180(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Metal;                                                     // 0x0190(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Aluminium;                                                 // 0x01A0(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Concrete;                                                  // 0x01B0(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Brick;                                                     // 0x01C0(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Wood;                                                      // 0x01D0(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Plastic;                                                   // 0x01E0(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Rubber;                                                    // 0x01F0(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Glass;                                                     // 0x0200(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Folliage;                                                  // 0x0210(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Bark;                                                      // 0x0220(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Flesh;                                                     // 0x0230(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           RoofTile;                                                  // 0x0240(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           CeramicsTiles;                                             // 0x0250(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Scrap;                                                     // 0x0260(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Trunk;                                                     // 0x0270(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Leaves;                                                    // 0x0280(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Cardboard;                                                 // 0x0290(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Plaster;                                                   // 0x02A0(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           Kevlar;                                                    // 0x02B0(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           ForceField;                                                // 0x02C0(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactEffectData                           NoEffect;                                                  // 0x02D0(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ProjectileImpactEffects"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ProjectileShotgun
// 0x0010 (FullSize[0x0418] - InheritedSize[0x0408])
class AProjectileShotgun : public AProjectile
{
public:
	class UClass*                                      projectileClass;                                           // 0x0408(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ShotsCount;                                                // 0x0410(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RQ8A[0x4];                                     // 0x0414(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ProjectileShotgun"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ProjectileStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UProjectileStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ProjectileStatics"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ProteinDeficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UProteinDeficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ProteinDeficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PsilocybeCyanescensPoisoning
// 0x0008 (FullSize[0x01B8] - InheritedSize[0x01B0])
class UPsilocybeCyanescensPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData_K7MU[0x8];                                     // 0x01B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PsilocybeCyanescensPoisoning"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.PullToothAction
// 0x0000 (FullSize[0x00A8] - InheritedSize[0x00A8])
class UPullToothAction : public UMedicalAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.PullToothAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.QuickAccessBarWidget
// 0x0018 (FullSize[0x0290] - InheritedSize[0x0278])
class UQuickAccessBarWidget : public UDesignableUserWidget
{
public:
	TArray<class UQuickAccessItemWidget*>              _quickAccessItemContainers;                                // 0x0278(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_52RX[0x8];                                     // 0x0288(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.QuickAccessBarWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.QuickAccessItemSwitcher3
// 0x0070 (FullSize[0x02E8] - InheritedSize[0x0278])
class UQuickAccessItemSwitcher3 : public UInventoryContainerWidget2
{
public:
	int                                                Index;                                                     // 0x0278(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YLND[0x4];                                     // 0x027C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTextBlock*                                  _nameText;                                                 // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventorySlotUserWidget*                    _slotWidget;                                               // 0x0288(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemWidget2*                                _itemWidget;                                               // 0x0290(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCheckBox*                                   _throwingModeCheckbox;                                     // 0x0298(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CM9X[0x18];                                    // 0x02A0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       _throwingModeCaption;                                      // 0x02B8(0x0018) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _throwingModeDescription;                                  // 0x02D0(0x0018) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.QuickAccessItemSwitcher3"));
		return ptr;
	}



	void SetItemOpacity(float Value, bool Invalidate);
	void OnThrowinModeChanged(bool IsChecked);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.QuickAccessItemWidget
// 0x00F8 (FullSize[0x0370] - InheritedSize[0x0278])
class UQuickAccessItemWidget : public UDesignableUserWidget
{
public:
	unsigned char                                      MaxWidth;                                                  // 0x0278(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      MaxHeight;                                                 // 0x0279(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5067[0x6];                                     // 0x027A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UImage*                                      _imageWidget;                                              // 0x0280(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AItem>                        _item;                                                     // 0x0288(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      _itemClass;                                                // 0x0290(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DefaultWidth;                                              // 0x0298(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              DefaultHeight;                                             // 0x029C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                                   DefaultPosition;                                           // 0x02A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_C6WZ[0x8];                                     // 0x02A8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UImage*                                      _additionalIcon;                                           // 0x02B0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _additionalText;                                           // 0x02B8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8YT5[0x18];                                    // 0x02C0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, float>                          _numberData;                                               // 0x02D8(0x0050) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	bool                                               _shouldUpdateVisuals;                                      // 0x0328(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_023W[0x17];                                    // 0x0329(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USizeBox*                                    _lowerLeftBox;                                             // 0x0340(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                                    _additionalIconSizeBox;                                    // 0x0348(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IAZC[0x20];                                    // 0x0350(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.QuickAccessItemWidget"));
		return ptr;
	}



	void OnQuickAccessItemPickedUpStateChanged(class AItem* Item, bool PickedUpState);
	void OnItemDestroyed(class AActor* itemActor);
	void OnItemAddedToInventory(class APrisoner* Prisoner, class AItem* Item);
	class UWidgetAnimation* GetLowerLeftBoxFadeOutAnimation();
	class UWidgetAnimation* GetLowerLeftBoxFadeInAnimation();
	class UWidgetAnimation* GetBlinkingBackgroundAnimation();
	class UWidgetAnimation* GetAdditionalIconFadeOutAnimation();
	class UWidgetAnimation* GetAdditionalIconFadeInAnimation();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Quiver
// 0x13C0 (FullSize[0x1BD8] - InheritedSize[0x0818])
class AQuiver : public AClothesItem
{
public:
	class USkeletalMesh*                               AlternativeSkeletalMesh;                                   // 0x0818(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ArrowsBoneName;                                            // 0x0820(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UStaticMeshComponent*>                _arrowMeshComponentsArray2;                                // 0x0828(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      _alternativeEquippedMesh;                                  // 0x0838(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y2TV[0x4];                                     // 0x0840(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _containerDepth;                                           // 0x0844(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KAYE[0x1390];                                  // 0x0848(0x1390) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Quiver"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Rabbit2
// 0x0004 (FullSize[0x08D0] - InheritedSize[0x08CC])
class ARabbit2 : public AAnimal2
{
public:
	unsigned char                                      UnknownData_ASW7[0x4];                                     // 0x08CC(0x0004) Fix Super Size


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Rabbit2"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SimpleAnimalAIController
// 0x0090 (FullSize[0x03B8] - InheritedSize[0x0328])
class ASimpleAnimalAIController : public AAIController
{
public:
	float                                              WanderRadius;                                              // 0x0328(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RunAwayTime;                                               // 0x032C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinActionTime;                                             // 0x0330(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxActionTime;                                             // 0x0334(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WalkSpeed;                                                 // 0x0338(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RunSpeed;                                                  // 0x033C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FleeSegmentDistance;                                       // 0x0340(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AlertStartupTime;                                          // 0x0344(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinMoveDistance;                                           // 0x0348(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DoNotDespawnTime;                                          // 0x034C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZA97[0x68];                                    // 0x0350(0x0068) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SimpleAnimalAIController"));
		return ptr;
	}



	void UpdatePerception(TArray<class AActor*> actorsPercepted);
	void StartAlert();
	void OnTakeDamageHandler(class AActor* damageActor, float Damage, const struct FVector& HitLocation, class APawn* eventInstigator);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Rabbit2AIController
// 0x0010 (FullSize[0x03C8] - InheritedSize[0x03B8])
class ARabbit2AIController : public ASimpleAnimalAIController
{
public:
	float                                              MoveSegment;                                               // 0x03B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MovementPauseMinTime;                                      // 0x03BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MovementPauseMaxTime;                                      // 0x03C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AngleOffset;                                               // 0x03C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Rabbit2AIController"));
		return ptr;
	}



	void Wander();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RadiationSickness
// 0x0028 (FullSize[0x01D8] - InheritedSize[0x01B0])
class URadiationSickness : public UDisease
{
public:
	unsigned char                                      UnknownData_M1PW[0x28];                                    // 0x01B0(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RadiationSickness"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RadioComponent
// 0x0034 (FullSize[0x0410] - InheritedSize[0x03DC])
class URadioComponent : public UAkComponent
{
public:
	int                                                _currentStationIndex;                                      // 0x03DC(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_P6SH[0x4];                                     // 0x03E0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isHiFi;                                                   // 0x03E4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isReachableFromSkyWhenMounted;                            // 0x03E5(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V0LR[0x2];                                     // 0x03E6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _attenuationScale;                                         // 0x03E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _turnedOn;                                                 // 0x03EC(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NF8Q[0x23];                                    // 0x03ED(0x0023) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RadioComponent"));
		return ptr;
	}



	void PlayTrackFromRadioStation();
	void OnTrackStarted();
	void OnTrackEnded();
	void OnRep_Volume();
	void OnRep_TurnedOn();
	void OnRep_StationIndex();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RadioItem
// 0x0010 (FullSize[0x0768] - InheritedSize[0x0758])
class ARadioItem : public AItem
{
public:
	class URadioComponent*                             _radioComponent;                                           // 0x0758(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBasicGameResourceContainerComponent*        _resourceContainerComponent;                               // 0x0760(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RadioItem"));
		return ptr;
	}



	void OnComponentDeactivated(class UActorComponent* Component);
	void OnComponentActivated(class UActorComponent* Component, bool wasReset);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RadioTrack
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class URadioTrack : public UDataAsset
{
public:
	class UAkAudioEvent*                               audio;                                                     // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Duration;                                                  // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PXO9[0x4];                                     // 0x003C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RadioTrack"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RadioCategory
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class URadioCategory : public UObject
{
public:
	TArray<class URadioTrack*>                         Tracks;                                                    // 0x0028(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	int                                                _index;                                                    // 0x0038(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9HM8[0x4];                                     // 0x003C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RadioCategory"));
		return ptr;
	}



	class URadioTrack* ProvideNextRadioTrack();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RadioCategoryShuffle
// 0x0018 (FullSize[0x0058] - InheritedSize[0x0040])
class URadioCategoryShuffle : public URadioCategory
{
public:
	bool                                               _canTracksRepeat;                                          // 0x0040(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YCQV[0x7];                                     // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class URadioTrack*>                         _tracksAlreadyPlayed;                                      // 0x0048(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RadioCategoryShuffle"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RadioProgram
// 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
class URadioProgram : public UObject
{
public:
	TArray<class UClass*>                              CategoryClasses;                                           // 0x0028(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class URadioCategory*>                      Categories;                                                // 0x0038(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)
	int                                                _categoryIndex;                                            // 0x0048(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LYNG[0x4];                                     // 0x004C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RadioProgram"));
		return ptr;
	}



	class URadioCategory* ProvideNextRadioCategory();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RadioStation
// 0x0070 (FullSize[0x0290] - InheritedSize[0x0220])
class ARadioStation : public AActor
{
public:
	unsigned char                                      UnknownData_6YOH[0x30];                                    // 0x0220(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FRadioProgramData>                   _programsData;                                             // 0x0250(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	int                                                _maxTracksToQueue;                                         // 0x0260(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _currentIndex;                                             // 0x0264(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class URadioTrack*>                         _playlist;                                                 // 0x0268(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	float                                              _elapsedTime;                                              // 0x0278(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KP0H[0x14];                                    // 0x027C(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RadioStation"));
		return ptr;
	}



	void StartTrack();
	void OnTrackEnded();
	void OnRep_Playlist();
	void Multicast_SendNextTrack(class URadioTrack* Track);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RecastNavMesh_Humanoids
// 0x0000 (FullSize[0x04D8] - InheritedSize[0x04D8])
class ARecastNavMesh_Humanoids : public ARecastNavMesh
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RecastNavMesh_Humanoids"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RecastNavMesh_LargeAnimals
// 0x0000 (FullSize[0x04D8] - InheritedSize[0x04D8])
class ARecastNavMesh_LargeAnimals : public ARecastNavMesh
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RecastNavMesh_LargeAnimals"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RecastNavMesh_Sentries
// 0x0000 (FullSize[0x04D8] - InheritedSize[0x04D8])
class ARecastNavMesh_Sentries : public ARecastNavMesh
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RecastNavMesh_Sentries"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RecastNavMesh_SmallAnimals
// 0x0000 (FullSize[0x04D8] - InheritedSize[0x04D8])
class ARecastNavMesh_SmallAnimals : public ARecastNavMesh
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RecastNavMesh_SmallAnimals"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RegularDoorStatic
// 0x0018 (FullSize[0x0400] - InheritedSize[0x03E8])
class ARegularDoorStatic : public ADoor
{
public:
	struct FRotator                                    _openRotation;                                             // 0x03E8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    _closedRotation;                                           // 0x03F4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RegularDoorStatic"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RegularDoorDestructible
// 0x0018 (FullSize[0x0400] - InheritedSize[0x03E8])
class ARegularDoorDestructible : public ADoor
{
public:
	struct FRotator                                    _openRotation;                                             // 0x03E8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    _closedRotation;                                           // 0x03F4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RegularDoorDestructible"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponActionUnloadAmmoSequence
// 0x0028 (FullSize[0x0050] - InheritedSize[0x0028])
class UWeaponActionUnloadAmmoSequence : public UWeaponAction
{
public:
	struct FBodyWeaponAnimation                        Animations;                                                // 0x0028(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               CanBeInterrupted;                                          // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LIW7[0x17];                                    // 0x0039(0x0017) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponActionUnloadAmmoSequence"));
		return ptr;
	}



	void SetNextMontageSectionFromPrevious(const struct FName& previousSection, const struct FName& NextSection);
	void SetNextMontageSection(const struct FName& NextSection);
	void OnMontageEnded(class UAnimMontage* Montage, bool interrupted);
	void OnMontageBlendingOutStarted(class UAnimMontage* Montage, bool interrupted);
	int GetAmmoCount();
	class UAnimMontage* GetActiveAnimationWeapon();
	class UAnimMontage* GetActiveAnimationBody();
	float Execute(int AmmoCount);
	void End(bool Regular);
	bool CanInterrupt();
	bool CanExecute();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RemoveCartridge
// 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
class URemoveCartridge : public UWeaponActionUnloadAmmoSequence
{
public:
	struct FName                                       MontageEndSectionName;                                     // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RemoveCartridge"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RemoveMagazineInsertCartridge
// 0x0000 (FullSize[0x0090] - InheritedSize[0x0090])
class URemoveMagazineInsertCartridge : public UWeaponActionReloadSequence
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RemoveMagazineInsertCartridge"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RemoveMagazineInsertMagazine
// 0x0000 (FullSize[0x0090] - InheritedSize[0x0090])
class URemoveMagazineInsertMagazine : public UWeaponActionReloadSequence
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RemoveMagazineInsertMagazine"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RemoveMagazineInsertMagazineInsertCartridge
// 0x0010 (FullSize[0x00A0] - InheritedSize[0x0090])
class URemoveMagazineInsertMagazineInsertCartridge : public UWeaponActionReloadSequence
{
public:
	struct FName                                       MontageEndSectionName;                                     // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M535[0x8];                                     // 0x0098(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RemoveMagazineInsertMagazineInsertCartridge"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RemoveMagazineRemoveCartridge
// 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
class URemoveMagazineRemoveCartridge : public UWeaponActionUnloadAmmoSequence
{
public:
	struct FName                                       MontageEndSectionName;                                     // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RemoveMagazineRemoveCartridge"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RepairableItemTag
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
class URepairableItemTag : public UBaseItemTag
{
public:
	struct FRepairableParams                           Params;                                                    // 0x0030(0x0038) (Edit, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RepairableItemTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RepairStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class URepairStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RepairStatics"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RepairToolItemTag
// 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
class URepairToolItemTag : public UBaseItemTag
{
public:
	struct FRepairToolItemParams                       Params;                                                    // 0x0030(0x0040) (Edit, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RepairToolItemTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ReplenishableResourceComponent
// 0x00C0 (FullSize[0x0640] - InheritedSize[0x0580])
class UReplenishableResourceComponent : public UInstancedStaticMeshComponent
{
public:
	struct FReplenishableResourceDescription           _replenishableResourceDescription;                         // 0x0580(0x0070) (Edit, NativeAccessSpecifierPrivate)
	struct FFillItemWithReplenishableResourceInteractionData _replenishableResourceFillItemInteractionData;             // 0x05F0(0x0048) (Edit, NativeAccessSpecifierPrivate)
	struct FName                                       _replenishableResourceAmountMaterialParameterName;         // 0x0638(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ReplenishableResourceComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ReplenishableResourceManager
// 0x0170 (FullSize[0x0220] - InheritedSize[0x00B0])
class UReplenishableResourceManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData_2AZ9[0x110];                                   // 0x00B0(0x0110) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UClass*, int>                           _gameResourceTypeReferences;                               // 0x01C0(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_P0S5[0x8];                                     // 0x0210(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _maxNumReplenishableResourceReplenishmentsPerTick;         // 0x0218(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SU73[0x4];                                     // 0x021C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ReplenishableResourceManager"));
		return ptr;
	}



	void NetMulticast_SetReplenishableResourceAmount(int dataVersion, const struct FPackedLocation& ID, float Value);
	void NetMulticast_ReserveReplenishableResourceSlot(int dataVersion, const struct FPackedLocation& ID, int SlotIndex);
	void NetMulticast_ReleaseReplenishableResourceSlot(int dataVersion, const struct FPackedLocation& ID, int SlotIndex);
	void NetMulticast_DestroyReplenishableResource(int dataVersion, const struct FPackedLocation& ID);
	void NetMulticast_CreateReplenishableResource(int dataVersion, const struct FReplenishableResourceDescription& Description);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ReportingManager
// 0x0538 (FullSize[0x0758] - InheritedSize[0x0220])
class AReportingManager : public AActor
{
public:
	unsigned char                                      UnknownData_RWSC[0x180];                                   // 0x0220(0x0180) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    PrisonerWhistled;                                          // 0x03A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TQQU[0x3A8];                                   // 0x03B0(0x03A8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ReportingManager"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ResistanceSkill
// 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
class UResistanceSkill : public UConstitutionSkill
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ResistanceSkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ResourceIndicatorWidget
// 0x0010 (FullSize[0x0288] - InheritedSize[0x0278])
class UResourceIndicatorWidget : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData_NIZM[0x10];                                    // 0x0278(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ResourceIndicatorWidget"));
		return ptr;
	}



	float GetResourceAmountRatio();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ResourceLockingManager
// 0x00F0 (FullSize[0x01A0] - InheritedSize[0x00B0])
class UResourceLockingManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData_SYWL[0xF0];                                    // 0x00B0(0x00F0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ResourceLockingManager"));
		return ptr;
	}



	void OnResourceDestroyed(class AActor* resource);
	void OnLockOwnerDestroyed(class AActor* lockOwner);
	void NetMulticast_UnlockResource(int dataVersion, const struct FResourceNetworkGUID& ResourceGUID, int ResourceId);
	void NetMulticast_UnlockIntersectingAreas(int dataVersion, const struct FBox& Area);
	void NetMulticast_UnlockArea(int dataVersion, const struct FBox& Area);
	void NetMulticast_RemoveAreaLocks(int dataVersion, TArray<struct FAreaResourceLockNetwork> Locks);
	void NetMulticast_RemoveActorLocks(int dataVersion, TArray<struct FActorResourceLockNetwork> Locks);
	void NetMulticast_LockResource(int dataVersion, const struct FResourceNetworkGUID& LockOwnerGUID, const struct FResourceNetworkGUID& ResourceGUID, int ResourceId);
	void NetMulticast_LockArea(int dataVersion, const struct FResourceNetworkGUID& LockOwnerGUID, const struct FBox& Area);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RespawnSettings
// 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
class URespawnSettings : public UDataAsset
{
public:
	struct FRespawnParameters                          parameters;                                                // 0x0030(0x0058) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RespawnSettings"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RespiratoryRateWidget
// 0x00D8 (FullSize[0x01E0] - InheritedSize[0x0108])
class URespiratoryRateWidget : public UWidget
{
public:
	struct FSlateBrush                                 Brush;                                                     // 0x0108(0x0088) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FScriptDelegate                             BrushDelegate;                                             // 0x0190(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	struct FLinearColor                                ColorAndOpacity;                                           // 0x01A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptDelegate                             ColorAndOpacityDelegate;                                   // 0x01B0(0x0010) (ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	float                                              Thickness;                                                 // 0x01C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Periods;                                                   // 0x01C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MXP7[0x10];                                    // 0x01C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrisonerLifeComponent*                      _prisonerLifeComponent;                                    // 0x01D8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RespiratoryRateWidget"));
		return ptr;
	}



	void SetPrisonerLifeComponent(class UPrisonerLifeComponent* Value);
	class UPrisonerLifeComponent* GetPrisonerLifeComponent();
	float GetMinRespiratoryRate();
	float GetMaxRespiratoryRate();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RestAssetData
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class URestAssetData : public UInteractionAssetData
{
public:
	ConZ_EPrisonerRestingMode                          RestingMode;                                               // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZWSA[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequenceBase*                           RestingAnimation;                                          // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                             AdditionalEndRestLocations;                                // 0x0040(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RestAssetData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RestorableMeshInstancesManager
// 0x02A0 (FullSize[0x0350] - InheritedSize[0x00B0])
class URestorableMeshInstancesManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData_4X3Z[0x110];                                   // 0x00B0(0x0110) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _actorsProcessingDelayOnStreamingLevelLoad;                // 0x01C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _processingBudgetPerTick;                                  // 0x01C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_F320[0x168];                                   // 0x01C8(0x0168) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _generateMeshInstancesToRestoreUpdateInterval;             // 0x0330(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V15D[0x14];                                    // 0x0334(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _minDistanceToPlayerPawnToRestoreMeshInstance;             // 0x0348(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9866[0x4];                                     // 0x034C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RestorableMeshInstancesManager"));
		return ptr;
	}



	void NetMulticast_RestoreRemovedMeshInstance(int dataVersion, const struct FRestorableMeshInstanceId& InstanceId);
	void NetMulticast_RemoveMeshInstance(int dataVersion, class UInstancedStaticMeshComponent* Component, const struct FRestorableMeshInstanceId& InstanceId, const struct FTransform& InstanceTransform);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RevivePatientAction
// 0x0000 (FullSize[0x00A8] - InheritedSize[0x00A8])
class URevivePatientAction : public UMedicalAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RevivePatientAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RewardItemWidget
// 0x0010 (FullSize[0x0270] - InheritedSize[0x0260])
class URewardItemWidget : public UUserWidget
{
public:
	class UImage*                                      _bulletImage;                                              // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _rewardItemText;                                           // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RewardItemWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RichTextInlineTextDecorator
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class URichTextInlineTextDecorator : public URichTextBlockDecorator
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RichTextInlineTextDecorator"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RiflesSkill
// 0x0000 (FullSize[0x00E0] - InheritedSize[0x00E0])
class URiflesSkill : public URangedWeaponsSkill
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RiflesSkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.RunningSkill
// 0x0048 (FullSize[0x0100] - InheritedSize[0x00B8])
class URunningSkill : public UConstitutionSkill
{
public:
	struct FRunningSkillParametersPerSkillLevel        NoSkillParameters;                                         // 0x00B8(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FRunningSkillParametersPerSkillLevel        BasicSkillParameters;                                      // 0x00C8(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FRunningSkillParametersPerSkillLevel        MediumSkillParameters;                                     // 0x00D8(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FRunningSkillParametersPerSkillLevel        AdvancedSkillParameters;                                   // 0x00E8(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_O241[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.RunningSkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SafeZoneRegistry
// 0x0078 (FullSize[0x0128] - InheritedSize[0x00B0])
class USafeZoneRegistry : public UActorComponent
{
public:
	unsigned char                                      UnknownData_ZWYL[0x48];                                    // 0x00B0(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _maxNumOfConfigSaveZones;                                  // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LQ9N[0x4];                                     // 0x00FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FSafeZoneParameters>                 _safeZones;                                                // 0x0100(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FSafeZoneConfigParams>               _safeZoneConfigParams;                                     // 0x0110(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CPU6[0x8];                                     // 0x0120(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SafeZoneRegistry"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SalmonellaDisease
// 0x0008 (FullSize[0x01B8] - InheritedSize[0x01B0])
class USalmonellaDisease : public UDisease
{
public:
	unsigned char                                      UnknownData_R3H4[0x8];                                     // 0x01B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SalmonellaDisease"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Scopeable
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UScopeable : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Scopeable"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ScreenSpaceHealthWidget
// 0x0000 (FullSize[0x0260] - InheritedSize[0x0260])
class UScreenSpaceHealthWidget : public UUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ScreenSpaceHealthWidget"));
		return ptr;
	}



	void SetMaxHealthPercentage(float Value);
	void SetHealthPercentage(float Value);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SearchItemDataAsset
// 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
class USearchItemDataAsset : public UDataAsset
{
public:
	struct FText                                       Caption;                                                   // 0x0030(0x0018) (Edit, NativeAccessSpecifierPublic)
	float                                              Duration;                                                  // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_P33M[0x4];                                     // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FSearchPerItemData>                  SearchData;                                                // 0x0050(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StartSearchAudioEvent;                                     // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopSearchAudioEvent;                                      // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_ENoiseLevel                                   NoiseLevel;                                                // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C824[0x7];                                     // 0x0071(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SearchItemDataAsset"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SearchForItemsAssetData
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class USearchForItemsAssetData : public UInteractionAssetData
{
public:
	class USearchItemDataAsset*                        SearchAsset;                                               // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SearchForItemsAssetData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SearchGroundObjective
// 0x0020 (FullSize[0x0340] - InheritedSize[0x0320])
class ASearchGroundObjective : public AObjective
{
public:
	TArray<class UClass*>                              _itemToSearch;                                             // 0x0320(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	int                                                _itemAmount;                                               // 0x0330(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LOLK[0xC];                                     // 0x0334(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SearchGroundObjective"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SeleniumDeficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class USeleniumDeficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SeleniumDeficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Sentry2
// 0x0358 (FullSize[0x0A20] - InheritedSize[0x06C8])
class ASentry2 : public AConZCharacter
{
public:
	unsigned char                                      UnknownData_FO1I[0x8];                                     // 0x06C8(0x0008) Fix Super Size
	unsigned char                                      UnknownData_9FQB[0x28];                                    // 0x06D0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCapsuleComponent*                           _obstacleCapsule;                                          // 0x06F8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _pelvisBoneName;                                           // 0x0700(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _eyesViewPointSocketName;                                  // 0x0708(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _longRangeWeaponSocketName;                                // 0x0710(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6G6R[0x10];                                    // 0x0718(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               _beginPlayAudioEvent;                                      // 0x0728(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _fireBulletAudioEvent;                                     // 0x0730(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _startHighFireRateAttack;                                  // 0x0738(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _endHighFireRateAttack;                                    // 0x0740(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _reloadAudioEvent;                                         // 0x0748(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _deathAudioEvent;                                          // 0x0750(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _freezeWarningAudioEvent;                                  // 0x0758(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _dropWeaponsRaiseHandsAudioEvent;                          // 0x0760(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _walkAwayAudioEvent;                                       // 0x0768(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _beginCombatAudioEvent;                                    // 0x0770(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _reloadMontageLongRangeWeapon;                             // 0x0778(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _deathMontage;                                             // 0x0780(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UAnimMontage*>                        _kickMontages;                                             // 0x0788(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UClass*                                      _projectileClass;                                          // 0x0798(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6JXH[0x8];                                     // 0x07A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USentryMovementComponent*                    _sentryMovementComponent;                                  // 0x07A8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHitReactComponent*                          _hitReactComponent;                                        // 0x07B0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MDA5[0x4];                                     // 0x07B8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _maxHealth;                                                // 0x07BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_A579[0x8];                                     // 0x07C0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _projectileDamageMultiplier;                               // 0x07C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _armorDamageReductionProjectile;                           // 0x07CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _explosionDamageMultiplier;                                // 0x07D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _armorDamageReductionExplosion;                            // 0x07D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _thrownDamageMultiplier;                                   // 0x07D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _armorDamageReductionThrown;                               // 0x07DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _meleeDamageMultiplier;                                    // 0x07E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _armorDamageReductionMelee;                                // 0x07E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FBodyPartData                               _dataPerBodyPart[0xC];                                     // 0x07E8(0x00F0) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	ConZ_ESentryStance                                 _sentryStance;                                             // 0x08D8(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldAimWeapon;                                          // 0x08D9(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PCC7[0x2];                                     // 0x08DA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _longRangeWeaponFireRate;                                  // 0x08DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _longRangeWeaponHalfAngleDegrees;                          // 0x08E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _maxAmmunitionLongRangeWeapon;                             // 0x08E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SET7[0x4];                                     // 0x08E8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _maxAmmunitionMediumRangeWeapon;                           // 0x08EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WL10[0x4];                                     // 0x08F0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _longRangeWeaponSpreadHalfAngle;                           // 0x08F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumRangeWeaponFireRate;                                // 0x08F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumRangeWeaponHalfAngleDegrees;                        // 0x08FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumRangeWeaponActivationDistance;                      // 0x0900(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _meleeAttackRate;                                          // 0x0904(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _meleeAttackActivationDistance;                            // 0x0908(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DJ8O[0x4];                                     // 0x090C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class ASentryGuardVolume2*>                 _guardedAreas;                                             // 0x0910(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YGLV[0x10];                                    // 0x0920(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FSentryPatrolPoint>                  _patrolPoints;                                             // 0x0930(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UParticleSystem*                             _muzzlePS;                                                 // 0x0940(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*                    _muzzlePSC;                                                // 0x0948(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _muzzleEffectsScaleDistanceStart;                          // 0x0950(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _muzzleEffectsScaleDistanceRange;                          // 0x0954(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _muzzleEffectsScaleByDistanceFactor;                       // 0x0958(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CJKT[0x4];                                     // 0x095C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        _spotlightLeftMesh;                                        // 0x0960(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _spotlightRightMesh;                                       // 0x0968(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USpotLightComponent*                         _spotlight;                                                // 0x0970(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FColor                                      _normalLightColor;                                         // 0x0978(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FColor                                      _alertedLightColor;                                        // 0x097C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FColor                                      _combatLightColor;                                         // 0x0980(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EWH3[0xC];                                     // 0x0984(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _spottingPercentage;                                       // 0x0990(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ULXC[0x4];                                     // 0x0994(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        _laserMeshComponent;                                       // 0x0998(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldDrawLongRangeWeaponLaser;                           // 0x09A0(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8A59[0xF];                                     // 0x09A1(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _autosaveInterval;                                         // 0x09B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GMX4[0x4];                                     // 0x09B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _shouldSaveAndLoadSentry;                                  // 0x09B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9PMK[0x17];                                    // 0x09B9(0x0017) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class APawn>                        _foe;                                                      // 0x09D0(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _weaponFocusLocation;                                      // 0x09D8(0x000C) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2V54[0x4];                                     // 0x09E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxWalkingSpeed;                                           // 0x09E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IKOffsetRightFoot;                                         // 0x09EC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IKOffsetLeftFoot;                                          // 0x09F0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LeftFoorHitNormal;                                         // 0x09F4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     RightFootHitNormal;                                        // 0x0A00(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StompShakeEffectRadius;                                    // 0x0A0C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      StompCameraShake;                                          // 0x0A10(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CDOO[0x8];                                     // 0x0A18(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Sentry2"));
		return ptr;
	}



	void SetFoe(class APawn* Value);
	void OnRep_WeaponFocusLocation();
	void OnRep_SpottingPercentage();
	void OnRep_ShouldDrawLongRangeWeaponLaser();
	void OnRep_SentryStance();
	void ObstacleCapsuleBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void NetMulticast_StopShotEffectsLongRangeWeapon();
	void NetMulticast_StartHighSpreadAttackAudioEvent();
	void NetMulticast_PlayWalkAwaySound();
	void NetMulticast_PlayReloadMontageLongRangeWeapon();
	void NetMulticast_PlayMeleeAttackMontage(int kickIndex);
	void NetMulticast_PlayFreezeWarningSound();
	void NetMulticast_PlayDropWeaponsRaiseHandsSound();
	void NetMulticast_PlayBeginCombatSound();
	void NetMulticast_OnSentryDeath();
	void NetMulticast_FireShotEffectsLongRangeWeapon();
	void NetMulticast_FireShotEffectsHighSpread();
	void NetMulticast_EndHighSpreadAttackAudioEvent();
	struct FVector GetMuzzleLocationLongRangeWeapon();
	struct FVector GetMuzzleDirectionLongRangeWeapon();
	class APawn* GetFoe();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SentryAIController2
// 0x0398 (FullSize[0x06C0] - InheritedSize[0x0328])
class ASentryAIController2 : public AAIController
{
public:
	class ASentry2*                                    _sentry;                                                   // 0x0328(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BRD0[0xB0];                                    // 0x0330(0x00B0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _canHear;                                                  // 0x03E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canSee;                                                   // 0x03E1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FNFB[0x6];                                     // 0x03E2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAISenseConfig_Sight*                        _currentSightSenseConfig;                                  // 0x03E8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAISenseConfig_Hearing*                      _currentHearingSenseConfig;                                // 0x03F0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAISenseConfig_Sight*                        _sightSenseConfigPatrolling;                               // 0x03F8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAISenseConfig_Sight*                        _sightSenseConfigAlerted;                                  // 0x0400(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAISenseConfig_Sight*                        _sightSenseConfigCombat;                                   // 0x0408(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAISenseConfig_Hearing*                      _hearingSenseConfigPatrolling;                             // 0x0410(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAISenseConfig_Hearing*                      _hearingSenseConfigAlerted;                                // 0x0418(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAISenseConfig_Hearing*                      _hearingSenseConfigCombat;                                 // 0x0420(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _spottingTimeDecayMultiplier;                              // 0x0428(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _forgetKnownEnemyTime;                                     // 0x042C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _noiseStimuliBeforeInstantlyLocatingCharacter;             // 0x0430(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5B0X[0x4];                                     // 0x0434(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               _specialNoiseTags;                                         // 0x0438(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	float                                              _timeUntilNoiseStimuliCounterReset;                        // 0x0448(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_R1NJ[0xC];                                     // 0x044C(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _threatLevelAccumulationMultiplier;                        // 0x0458(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _onHearNoiseThreatLevelIncrease;                           // 0x045C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _onDamageTakeThreatLevelIncrease;                          // 0x0460(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SWC6[0x4];                                     // 0x0464(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _switchTargetCharacterTime;                                // 0x0468(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDetectionDelayTimerData                    _detectionDelayTimerData;                                  // 0x046C(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	float                                              _distanceWhenConsideredCharacterEnteredHotZone;            // 0x047C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxDistanceWhenTemporaryPointIsConsideredTooClose;        // 0x0480(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _temporaryPatrolPointVisitsUntilDeleted;                   // 0x0484(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7BIM[0x4];                                     // 0x0488(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _checkSurroundingsTime;                                    // 0x048C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HHOV[0x4];                                     // 0x0490(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _checkSurroundingsAngle;                                   // 0x0494(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KXLP[0x4];                                     // 0x0498(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _investigatingLocationOverallTime;                         // 0x049C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LBRK[0x4];                                     // 0x04A0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _investigatingLocationTime;                                // 0x04A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_T6X9[0x4];                                     // 0x04A8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _investigatingBuildingTime;                                // 0x04AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KFF2[0x28];                                    // 0x04B0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _guardLocationTime;                                        // 0x04D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YVG0[0x4];                                     // 0x04DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _guardLocationSwitchFocusTime;                             // 0x04E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MR22[0x24];                                    // 0x04E4(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _enemySpottedWarningTime;                                  // 0x0508(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SV95[0x4];                                     // 0x050C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _maxTolerance;                                             // 0x0510(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1Q0H[0x4];                                     // 0x0514(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _toleranceIncreaseForObedience;                            // 0x0518(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _enemySpottedOutOfSightTimeLimit;                          // 0x051C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0LLP[0x8];                                     // 0x0520(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _distanceWhenConsideredCharacterLeavingHotZone;            // 0x0528(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _freezeCheckTime;                                          // 0x052C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _freezeCheckToleranceDrainMultiplier;                      // 0x0530(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _numberOfWarningShots;                                     // 0x0534(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KDZV[0x4];                                     // 0x0538(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _raiseHandsCheckTime;                                      // 0x053C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _raiseHandsCheckToleranceDrainMultiplier;                  // 0x0540(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _walkAwayCheckToleranceDrainMultiplier;                    // 0x0544(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _movingToHotZoneToleranceDrainMultiplier;                  // 0x0548(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minMovingToHotZoneRange;                                  // 0x054C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _otherToleranceDrainMultiplier;                            // 0x0550(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minimumAlertedTime;                                       // 0x0554(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5PYV[0x4];                                     // 0x0558(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _observeEnemyMovementTime;                                 // 0x055C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AXJ2[0x4];                                     // 0x0560(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _observeEnemyMovementOpenFireThreshold;                    // 0x0564(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FU18[0xC];                                     // 0x0568(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _beginShootingTime;                                        // 0x0574(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_71I4[0xC];                                     // 0x0578(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _combatSwitchVariationTimeMin;                             // 0x0584(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _combatSwitchVariationTimeMax;                             // 0x0588(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_P7CN[0x8];                                     // 0x058C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _maxFireRateTime;                                          // 0x0594(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_K1QI[0x4];                                     // 0x0598(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _fireRateAccumulationSpeed;                                // 0x059C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _startingHighFireRate;                                     // 0x05A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _highFireRateSpreadMultiplier;                             // 0x05A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1G39[0x4];                                     // 0x05A8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _highPrecisionShotAimTime;                                 // 0x05AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _highPrecisionShotCooldownTime;                            // 0x05B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2DBC[0x4];                                     // 0x05B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _combatMoveCloserDistance;                                 // 0x05B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _combatDistance;                                           // 0x05BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7N5E[0xC];                                     // 0x05C0(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _noWeaponLineOfSightTime;                                  // 0x05CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_G7MH[0x4];                                     // 0x05D0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _combatNoSightTime;                                        // 0x05D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7OKZ[0x4];                                     // 0x05D8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _searchForEnemyAfterLostStimulusTime;                      // 0x05DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _combatLostSightInvestigateLocationTime;                   // 0x05E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_M1YI[0x4];                                     // 0x05E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _distanceFromActorWhenInvestigationLocationIsChanged;      // 0x05E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _relocatingAngle;                                          // 0x05EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _relocatingRadius;                                         // 0x05F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _destroyingVehicleGiveUpTime;                              // 0x05F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_31N8[0x24];                                    // 0x05F8(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _movingAwayHalfAngleDegrees;                               // 0x061C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NKLJ[0x4];                                     // 0x0620(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _movingTowardsHalfAngleDegrees;                            // 0x0624(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GBAY[0x4];                                     // 0x0628(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _acceptanceRadius;                                         // 0x062C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TYBT[0x10];                                    // 0x0630(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _timeToBeConsideredStuck;                                  // 0x0640(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V4P5[0x7C];                                    // 0x0644(0x007C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SentryAIController2"));
		return ptr;
	}



	void SensingComponent_OnSensePawn(TArray<class AActor*> actorsPercepted);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SentryAnimInstance2
// 0x00E8 (FullSize[0x03A0] - InheritedSize[0x02B8])
class USentryAnimInstance2 : public UAnimInstance
{
public:
	unsigned char                                      UnknownData_YU99[0x4];                                     // 0x02B8(0x0004) Fix Super Size
	float                                              BlendInTime;                                               // 0x02BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BlendOutTime;                                              // 0x02C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GunsLerpFactor;                                            // 0x02C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     RightFootEffectorLocation;                                 // 0x02C8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LeftFootEffectorLocation;                                  // 0x02D4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    RightFootRotation;                                         // 0x02E0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    LeftFootRotation;                                          // 0x02EC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               ShouldUseLUWalkStopAnimation;                              // 0x02F8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BW8E[0x3];                                     // 0x02F9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              stoppingDistance;                                          // 0x02FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JHFY[0x38];                                    // 0x0300(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ASentry2*                                    _sentry;                                                   // 0x0338(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USentryMovementComponent*                    _sentryMovementComponent;                                  // 0x0340(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isSentryCompletelyInitialized;                            // 0x0348(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldAimWeapon;                                          // 0x0349(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _wantsToMove;                                              // 0x034A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _previousWantsToMove;                                      // 0x034B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_ESentryMovementPace2                          _movementPace;                                             // 0x034C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_C6MT[0x3];                                     // 0x034D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _actualCourseAngle;                                        // 0x0350(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _desiredCourseAngle;                                       // 0x0354(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _desiredCoursePitchAngle;                                  // 0x0358(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _angularVelocity;                                          // 0x035C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _velocity;                                                 // 0x0360(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _speed;                                                    // 0x036C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _forwardVector;                                            // 0x0370(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isFalling;                                                // 0x037C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isDead;                                                   // 0x037D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9ORJ[0x2];                                     // 0x037E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     _gunsLookAtLocation;                                       // 0x0380(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _leanLeftBlendWeight;                                      // 0x038C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _leanRightBlendWeight;                                     // 0x0390(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GTU7[0xC];                                     // 0x0394(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SentryAnimInstance2"));
		return ptr;
	}



	float GetTurnInPlaceElapsedTimeRight();
	float GetTurnInPlaceElapsedTimeLeft();
	float GetTurnInPlaceDirectionBlendAlpha();
	float GetTurnInPlaceBlendAlpha();
	float FindTimeAtStoppingDistance(class UAnimSequenceBase* AnimSequence, float stoppingDistance);
	void AnimNotify_SentryJump();
	void AnimNotify_RFootDown();
	void AnimNotify_LFootDown();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SentryFirstPersonViewComponent
// 0x0000 (FullSize[0x00D0] - InheritedSize[0x00D0])
class USentryFirstPersonViewComponent : public UPrisonerViewComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SentryFirstPersonViewComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SentryGuardVolume2
// 0x0050 (FullSize[0x02A8] - InheritedSize[0x0258])
class ASentryGuardVolume2 : public AVolume
{
public:
	unsigned char                                      UnknownData_HQ83[0x20];                                    // 0x0258(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FVector>                             _hotZonesLocalLocations;                                   // 0x0278(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0F1V[0x10];                                    // 0x0288(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class ABuilding*>                           _hotZonesBuildings;                                        // 0x0298(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SentryGuardVolume2"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SentryMovementComponent
// 0x0038 (FullSize[0x0B40] - InheritedSize[0x0B08])
class USentryMovementComponent : public UConZCharacterMovementComponent
{
public:
	class UCurveFloat*                                 MaxRotationRateCurve;                                      // 0x0B08(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RotationInterpolationSpeed;                                // 0x0B10(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CorrectServerReceivedZ;                                    // 0x0B14(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XDTT[0x2B];                                    // 0x0B15(0x002B) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SentryMovementComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SentrySpawner2
// 0x0080 (FullSize[0x02A0] - InheritedSize[0x0220])
class ASentrySpawner2 : public AActor
{
public:
	float                                              ActivationDistance;                                        // 0x0220(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y361[0x4];                                     // 0x0224(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      SentryClass;                                               // 0x0228(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSentryPatrolPoint>                  PatrolPoints;                                              // 0x0230(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class ASentryGuardVolume2*>                 GuardedAreas;                                              // 0x0240(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UBillboardComponent*                         Sprite;                                                    // 0x0250(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X5PW[0x24];                                    // 0x0258(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _shouldSaveAndLoadSentry;                                  // 0x027C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TXQ8[0x3];                                     // 0x027D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _autoSaveTime;                                             // 0x0280(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SPO7[0x1C];                                    // 0x0284(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SentrySpawner2"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SentryThirdPersonViewComponent
// 0x0030 (FullSize[0x0100] - InheritedSize[0x00D0])
class USentryThirdPersonViewComponent : public UPrisonerViewComponent
{
public:
	struct FName                                       StandingSubviewName;                                       // 0x00D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       StandingAimingSubviewName;                                 // 0x00D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SAZD[0x20];                                    // 0x00E0(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SentryThirdPersonViewComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SerializableLayoutWidgetInterface
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class USerializableLayoutWidgetInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SerializableLayoutWidgetInterface"));
		return ptr;
	}



	void SaveLayout(const TScriptInterface<class UAttributeMapInterface>& Attributes);
	void ResetLayout();
	void LoadLayout(const TScriptInterface<class UAttributeMapInterface>& Attributes);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ServerAnalyticsManager
// 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
class AServerAnalyticsManager : public AActor
{
public:
	unsigned char                                      UnknownData_7OSK[0x10];                                    // 0x0220(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ServerAnalyticsManager"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ServerBrowser
// 0x0128 (FullSize[0x0388] - InheritedSize[0x0260])
class UServerBrowser : public UUserWidget
{
public:
	int                                                _currentIndex;                                             // 0x0260(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                _widgetCount;                                              // 0x0264(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FServerInfo>                         _serverInfos;                                              // 0x0268(0x0010) (Edit, BlueprintVisible, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FServerInfo>                         _unfilteredServerInfos;                                    // 0x0278(0x0010) (Edit, BlueprintVisible, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FServerInfo>                         _serverInfosToPing;                                        // 0x0288(0x0010) (Edit, BlueprintVisible, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FServerInfo>                         _serverInfosWithPing;                                      // 0x0298(0x0010) (Edit, BlueprintVisible, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FServerInfo>                         _serverInfosLastPlayed;                                    // 0x02A8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<struct FServerInfo>                         _serverInfosFavorites;                                     // 0x02B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	bool                                               _requestingServerList;                                     // 0x02C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N8PA[0x3];                                     // 0x02C9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _desiredMaxPing;                                           // 0x02CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FString                                     _desiredHostName;                                          // 0x02D0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                _desiredMinPlayers;                                        // 0x02E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                _desiredMaxPlayers;                                        // 0x02E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _showFullServers;                                          // 0x02E8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _showOnlyPasswordProtectedServers;                         // 0x02E9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ConZ_EServerBrowserTab                             _currentlyOpenTab;                                         // 0x02EA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_P4MZ[0x5];                                     // 0x02EB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UVerticalBox*                                _serverList;                                               // 0x02F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WTTY[0x90];                                    // 0x02F8(0x0090) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ServerBrowser"));
		return ptr;
	}



	void UpdateSorting();
	void UpdateList();
	void UpdateFilter();
	void StartNewMultiplayerGame(const struct FString& ip, int gameplayPort, int ResponsePort, const struct FString& authToken);
	void ShutdownPingingThread();
	void ShowRentAServerPage();
	void ShowErrorDialog(const struct FText& Message);
	void SetSortType(ConZ_ESortType Type, bool ascending);
	void SetFilter(const struct FString& Filter);
	void RequestServerList();
	void RemoveInfo(int Index);
	void RemoveFavoriteServer(class AActor* Context, const struct FString& Host, int ResponsePort);
	void RefreshServerInfosPing();
	void OpenContinueOrNewDialog(const struct FString& ip, int gameplayPort, int ResponsePort, const struct FString& authToken);
	void OnLastPlayedServersTabOpened();
	void OnInternetTabOpened();
	void OnFavoriteServersTabOpened();
	void EnterPassword();
	void EndWaitingOnServerResponse();
	bool DoesServerInfoSatisfyFilter(const struct FServerInfo& ServerInfo);
	void DisconnectFromServer();
	void ContinueMultiplayerGame(const struct FString& ip, int gameplayPort, int ResponsePort, const struct FString& authToken);
	bool ConnectToServer(const struct FString& ip, int ResponsePort, const struct FString& authToken);
	void CloseSocketAndPingingThreads();
	void CloseConnection();
	void CancelWaitingOnServerResponse();
	void BeginWaitingOnServerResponse();
	void AddNewInfo(const struct FServerInfo& ServerInfo);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ShelterItem
// 0x0010 (FullSize[0x0768] - InheritedSize[0x0758])
class AShelterItem : public AItem
{
public:
	bool                                               _canBeAddedToInventory;                                    // 0x0758(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_N3JH[0xF];                                     // 0x0759(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ShelterItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ShotsFiredTrackerWidget
// 0x0008 (FullSize[0x0280] - InheritedSize[0x0278])
class UShotsFiredTrackerWidget : public UDesignableUserWidget
{
public:
	class UTextBlock*                                  _widgetText;                                               // 0x0278(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ShotsFiredTrackerWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SicknessClasses
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class USicknessClasses : public UObject
{
public:
	unsigned char                                      UnknownData_B966[0x10];                                    // 0x0028(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SicknessClasses"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SilentAlarmTrapItem
// 0x0028 (FullSize[0x08C0] - InheritedSize[0x0898])
class ASilentAlarmTrapItem : public ATrapItem
{
public:
	class UAkAudioEvent*                               _triggerSound;                                             // 0x0898(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _detonationDelay;                                          // 0x08A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_J3E8[0x1C];                                    // 0x08A4(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SilentAlarmTrapItem"));
		return ptr;
	}



	void Detonate();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SingletonStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class USingletonStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SingletonStatics"));
		return ptr;
	}



	class UDataSingleton* GetDataSingleton();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SkillClasses
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class USkillClasses : public UObject
{
public:
	unsigned char                                      UnknownData_3RVV[0x10];                                    // 0x0028(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SkillClasses"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SkillEventHandler
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class USkillEventHandler : public UObject
{
public:
	unsigned char                                      UnknownData_K798[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SkillEventHandler"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Sledge
// 0x0260 (FullSize[0x09B8] - InheritedSize[0x0758])
class ASledge : public AItem
{
public:
	unsigned char                                      UnknownData_4LU6[0x8];                                     // 0x0758(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVehicleSpawnParameters                     _spawnParameters;                                          // 0x0760(0x002C) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_H9M9[0x4];                                     // 0x078C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class USledgeMountSlot*>                    _mountSlots;                                               // 0x0790(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9CY5[0x8C];                                    // 0x07A0(0x008C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _floorTraceDistance;                                       // 0x082C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _tiltAngleToUnmountMountees;                               // 0x0830(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SG40[0x4];                                     // 0x0834(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _accelerationForceMagnitude;                               // 0x0838(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _decelerationForceMagnitude;                               // 0x083C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _steeringForceMagnitude;                                   // 0x0840(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _steeringForceOffset;                                      // 0x0844(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _sidewaysBrakingForceMagnitude;                            // 0x0850(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DZRL[0x4];                                     // 0x0854(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 _dragForceMagnitudeVsSpeed;                                // 0x0858(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 _maxSpeedVsGroundSlopeAngle;                               // 0x0860(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPhysicsAsset*                               _physicsAssetWhenBoarded;                                  // 0x0868(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                             _defaultMovementParticleSystem;                            // 0x0870(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UPhysicalMaterial*, class UParticleSystem*> _movementParticleSystems;                                  // 0x0878(0x0050) (Edit, NativeAccessSpecifierPrivate)
	float                                              _movementParticlesActivationSpeed;                         // 0x08C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _movementParticlesDeleteDelay;                             // 0x08CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _rigidBodyStatePositionErrorTolerance;                     // 0x08D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _rigidBodyStateRotationErrorTolerance;                     // 0x08D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _distanceErrorToHardSnapToRemoteLocation;                  // 0x08D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_L8GK[0x4];                                     // 0x08DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               _sledgeMovementStartAudioEvent;                            // 0x08E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _sledgeMovementStopAudioEvent;                             // 0x08E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _velocityUpdateInterval;                                   // 0x08F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxSledgeEnterAngle;                                      // 0x08F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _allowedWaterImmersionDepth;                               // 0x08F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _disallowedWaterImmersionDepth;                            // 0x08FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _waterImmersionDepthToForceEvictMountees;                  // 0x0900(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _timeToEvictMounteesWhenImmersedIntoWater;                 // 0x0904(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _timeToForceEvictMounteesWhenImmersedIntoWater;            // 0x0908(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _timeToAutoDestructWhenImmersedIntoWater;                  // 0x090C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2WXS[0x1C];                                    // 0x0910(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint32_t                                           _controls;                                                 // 0x092C(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_S5D2[0x18];                                    // 0x0930(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     _movementParticlesPosition;                                // 0x0948(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SRZF[0x4];                                     // 0x0954(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       _healthBarCaption;                                         // 0x0958(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WQCS[0x48];                                    // 0x0970(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Sledge"));
		return ptr;
	}



	void OnRep_Controls();
	float GetWaterImmersionDepthSlow();
	float GetWaterImmersionDepth();
	bool CanBeInteractedWith();
	bool CanBeBoardedBy(class ACharacter* Character, class UPhysicalMaterial* interactionZone);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SledgeMountSlot
// 0x0078 (FullSize[0x0128] - InheritedSize[0x00B0])
class USledgeMountSlot : public UActorComponent
{
public:
	unsigned char                                      UnknownData_OFNW[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       _socketName;                                               // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _mountAudioEvent;                                          // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _mountPriority;                                            // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CCIV[0x4];                                     // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FMountSlotEntryPoint>                _entryPoints;                                              // 0x00D0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _unmountAudioEvent;                                        // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isReachableFromSky;                                       // 0x00E8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EMotionIntensity                              _mountingMotionIntensity;                                  // 0x00E9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EMotionIntensity                              _unmountingMotionIntensity;                                // 0x00EA(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_54YK[0x1];                                     // 0x00EB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     _mounteeCenterOfMassOffset;                                // 0x00EC(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minEffectiveMounteeMass;                                  // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxEffectiveMounteeMass;                                  // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UObject*                                     _mountee;                                                  // 0x0100(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UObject*                                     _reservee;                                                 // 0x0108(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canMounteeBeAttackedByMelee;                              // 0x0110(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_R4CI[0x7];                                     // 0x0111(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UPhysicalMaterial*>                   _interactionZoneMaterials;                                 // 0x0118(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SledgeMountSlot"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SledgeDriverMountSlot
// 0x0030 (FullSize[0x0158] - InheritedSize[0x0128])
class USledgeDriverMountSlot : public USledgeMountSlot
{
public:
	class UBlendSpace*                                 _forwardIdleAnimation;                                     // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _forwardSteeringAnimation;                                 // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _forwardSteeringAnimationFP;                               // 0x0138(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace*                                 _reverseIdleAnimation;                                     // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _reverseSteeringAnimation;                                 // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _reverseSteeringAnimationFP;                               // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SledgeDriverMountSlot"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SledgePassengerMountSlot
// 0x0008 (FullSize[0x0130] - InheritedSize[0x0128])
class USledgePassengerMountSlot : public USledgeMountSlot
{
public:
	class UBlendSpace*                                 _idleAnimation;                                            // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SledgePassengerMountSlot"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SledgeSpringArmComponent
// 0x0000 (FullSize[0x02D0] - InheritedSize[0x02D0])
class USledgeSpringArmComponent : public UConZVehicleSpringArmComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SledgeSpringArmComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SlidingDoorStatic
// 0x0010 (FullSize[0x03F8] - InheritedSize[0x03E8])
class ASlidingDoorStatic : public ADoor
{
public:
	class USceneComponent*                             ClosedPositionComponent;                                   // 0x03E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             OpenPositionComponent;                                     // 0x03F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SlidingDoorStatic"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SlidingDoorDestructible
// 0x0010 (FullSize[0x03F8] - InheritedSize[0x03E8])
class ASlidingDoorDestructible : public ADoor
{
public:
	class USceneComponent*                             ClosedPositionComponent;                                   // 0x03E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             OpenPositionComponent;                                     // 0x03F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SlidingDoorDestructible"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SmokeGrenadeItem
// 0x0030 (FullSize[0x0810] - InheritedSize[0x07E0])
class ASmokeGrenadeItem : public AGrenadeItem
{
public:
	class UAkComponent*                                AudioComponent;                                            // 0x07E0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               SmokeStartedAudioEvent;                                    // 0x07E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               SmokeStoppedAudioEvent;                                    // 0x07F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SmokeSoundDuration;                                        // 0x07F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0OTJ[0x4];                                     // 0x07FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             _smokeParticle;                                            // 0x0800(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_W6WG[0x8];                                     // 0x0808(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SmokeGrenadeItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SnipingSkill
// 0x0008 (FullSize[0x00A8] - InheritedSize[0x00A0])
class USnipingSkill : public UIntelligenceSkill
{
public:
	unsigned char                                      UnknownData_EM6L[0x8];                                     // 0x00A0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SnipingSkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SodiumDeficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class USodiumDeficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SodiumDeficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SoundEmitter
// 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
class ASoundEmitter : public AActor
{
public:
	class UAkAudioEvent*                               AudioEvent;                                                // 0x0220(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SoundEmitter"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SoundReducingItemTag
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class USoundReducingItemTag : public UBaseItemTag
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SoundReducingItemTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Spline
// 0x0010 (FullSize[0x0230] - InheritedSize[0x0220])
class ASpline : public AActor
{
public:
	class USceneComponent*                             SceneComponent;                                            // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineComponent*                            SplineComponent;                                           // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Spline"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SoundSpline
// 0x0050 (FullSize[0x0280] - InheritedSize[0x0230])
class ASoundSpline : public ASpline
{
public:
	float                                              MinCameraLocationDeltaForUpdate;                           // 0x0230(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WorldStreamedCheckInterval;                                // 0x0234(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AudioEvent;                                                // 0x0238(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               InsideSplineAudioEvent;                                    // 0x0240(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               OutsideSplineAudioEvent;                                   // 0x0248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G5NN[0x30];                                    // 0x0250(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SoundSpline"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SpawnDecalWhenParticleCollides
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class USpawnDecalWhenParticleCollides : public UParticleModuleEventSendToGame
{
public:
	TArray<struct FParticleCollisionDecalData>         Decals;                                                    // 0x0028(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SpawnDecalWhenParticleCollides"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SpawnMenuWidget
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
class USpawnMenuWidget : public UDesignableUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SpawnMenuWidget"));
		return ptr;
	}



	float Prisoner_GetHealthRatio(class APrisoner* Prisoner);
	float Prisoner_GetComaDuration(class APrisoner* Prisoner);
	void Prisoner_Die(class APrisoner* Prisoner);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SpawnScreen
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
class USpawnScreen : public UDesignableUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SpawnScreen"));
		return ptr;
	}



	void UpdateInfo(bool loadoutMenu);
	void ResetWakeUpTimer();
	void EnableRespawnOption(ConZ_ERespawnOption option);
	void AllowWakeUp();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SphereProximityTriggerComponent
// 0x0020 (FullSize[0x0510] - InheritedSize[0x04F0])
class USphereProximityTriggerComponent : public UProximityTriggerComponent
{
public:
	class USphereComponent*                            SphereCollisionComponent;                                  // 0x04F0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        VisualizationMeshComponent;                                // 0x04F8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              _triggerRadius;                                            // 0x0500(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LC1V[0x4];                                     // 0x0504(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMesh*                                 _visualizationMesh;                                        // 0x0508(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SphereProximityTriggerComponent"));
		return ptr;
	}



	void SphereComponent_OnComponentEndOverlap(class UPrimitiveComponent* activatedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void SphereComponent_OnComponentBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SquadPanelWidget
// 0x00D8 (FullSize[0x0338] - InheritedSize[0x0260])
class USquadPanelWidget : public UUserWidget
{
public:
	int                                                squadRank;                                                 // 0x0260(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                squadIndex;                                                // 0x0264(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FString>                             SquadTopNames;                                             // 0x0268(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FString>                             SquadTopInformation;                                       // 0x0278(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FConZSquadEmblem>                    SquadTopEmblems;                                           // 0x0288(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<float>                                      SquadTopScore;                                             // 0x0298(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FString>                             SquadRankingNames;                                         // 0x02A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FString>                             SquadRankingInformation;                                   // 0x02B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FConZSquadEmblem>                    SquadRankingEmblems;                                       // 0x02C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<float>                                      SquadRankingScore;                                         // 0x02D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FDbIntegerId>                        MemberUserProfileIds;                                      // 0x02E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FString>                             MemberNames;                                               // 0x02F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<ConZ_EConZSquadMemberRank>                  MemberRanks;                                               // 0x0308(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<float>                                      MemberFamePoints;                                          // 0x0318(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<bool>                                       MemberOnline;                                              // 0x0328(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SquadPanelWidget"));
		return ptr;
	}



	void UpdateSquadTopData();
	void UpdateSquadRankingData();
	void UpdateSquadMemberInfo();
	void Update();
	void RequestSquadTopData(int count);
	void RequestSquadRankingData(int count);
	void RequestSquadMemberInfo();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.StaphylococcalPoisoning
// 0x0008 (FullSize[0x01B8] - InheritedSize[0x01B0])
class UStaphylococcalPoisoning : public UPoisoning
{
public:
	unsigned char                                      UnknownData_HKEY[0x8];                                     // 0x01B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.StaphylococcalPoisoning"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.StarvationSickness
// 0x0008 (FullSize[0x01B8] - InheritedSize[0x01B0])
class UStarvationSickness : public USickness
{
public:
	unsigned char                                      UnknownData_LT2E[0x8];                                     // 0x01B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.StarvationSickness"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.StaticRadioItem
// 0x0000 (FullSize[0x0768] - InheritedSize[0x0768])
class AStaticRadioItem : public ARadioItem
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.StaticRadioItem"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.StatisticsDetailsWidget
// 0x0110 (FullSize[0x0370] - InheritedSize[0x0260])
class UStatisticsDetailsWidget : public UUserWidget
{
public:
	class UStatisticsSubcategoryTab*                   _generalSubcategoryTab;                                    // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatisticsSubcategoryTab*                   _foodSubcategoryTab;                                       // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatisticsSubcategoryTab*                   _huntingSubcategoryTab;                                    // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatisticsSubcategoryTab*                   _travelSubcategoryTab;                                     // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatisticsSubcategoryTab*                   _metabolismSubcategoryTab;                                 // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatisticsSubcategoryTab*                   _craftingSubcategoryTab;                                   // 0x0288(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatisticsSubcategoryTab*                   _combatSubcategoryTab;                                     // 0x0290(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatisticsSubcategoryTab*                   _eventsSubcategoryTab;                                     // 0x0298(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                             _subcategorySwitcher;                                      // 0x02A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_S6E7[0x88];                                    // 0x02A8(0x0088) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStatisticsListWidget*                       _generalStatisticsList;                                    // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatisticsListWidget*                       _foodStatisticsList;                                       // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatisticsListWidget*                       _huntingStatisticsList;                                    // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatisticsListWidget*                       _travelStatisticsList;                                     // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatisticsListWidget*                       _metabolismStatisticsList;                                 // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatisticsListWidget*                       _craftingStatisticsList;                                   // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatisticsListWidget*                       _combatStatisticsList;                                     // 0x0360(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatisticsListWidget*                       _eventsStatisticsList;                                     // 0x0368(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.StatisticsDetailsWidget"));
		return ptr;
	}



	void OnTravelSubcategoryButtonClicked();
	void OnMetabolismSubcategoryButtonClicked();
	void OnHuntingSubcategoryButtonClicked();
	void OnGeneralSubcategoryButtonClicked();
	void OnFoodSubcategoryButtonClicked();
	void OnEventsSubcategoryButtonClicked();
	void OnCraftingSubcategoryButtonClicked();
	void OnCombatSubcategoryButtonClicked();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.StatisticsListRow
// 0x0018 (FullSize[0x0278] - InheritedSize[0x0260])
class UStatisticsListRow : public UUserWidget
{
public:
	class UTextBlock*                                  _statNameTextBox;                                          // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _statValueTextBox;                                         // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _statUnitTextBox;                                          // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.StatisticsListRow"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.StatisticsListWidget
// 0x0028 (FullSize[0x0288] - InheritedSize[0x0260])
class UStatisticsListWidget : public UUserWidget
{
public:
	struct FText                                       _subcategoryName;                                          // 0x0260(0x0018) (Edit, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _subcategoryTextBox;                                       // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScrollBox*                                  _scrollBox;                                                // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.StatisticsListWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.StatisticsPanelWidget
// 0x0148 (FullSize[0x03A8] - InheritedSize[0x0260])
class UStatisticsPanelWidget : public UUserWidget
{
public:
	struct FSurvivalStats                              PlayerSurvivalStats;                                       // 0x0260(0x0140) (BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class UStatisticsDetailsWidget*                    _survivalDetailsWidget;                                    // 0x03A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.StatisticsPanelWidget"));
		return ptr;
	}



	void UpdatePlayerSurvivalStats();
	void RequestPlayerSurvivalStats();
	void OnOpened();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.StatisticsSubcategoryTab
// 0x0040 (FullSize[0x02A0] - InheritedSize[0x0260])
class UStatisticsSubcategoryTab : public UUserWidget
{
public:
	unsigned char                                      UnknownData_B2B7[0x18];                                    // 0x0260(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  _subcategoryIcon;                                          // 0x0278(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _tabSelectionImage;                                        // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _subcategoryImage;                                         // 0x0288(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture2D*                                  _selectedTabTexture;                                       // 0x0290(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2VPU[0x8];                                     // 0x0298(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.StatisticsSubcategoryTab"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.StealthSkill
// 0x0000 (FullSize[0x00A0] - InheritedSize[0x00A0])
class UStealthSkill : public UDexteritySkill
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.StealthSkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.StorageItem
// 0x0008 (FullSize[0x07E8] - InheritedSize[0x07E0])
class AStorageItem : public AChestItem
{
public:
	int                                                _inventoryCount;                                           // 0x07E0(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YOSI[0x4];                                     // 0x07E4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.StorageItem"));
		return ptr;
	}



	void OnRep_InventoryCount();
	void BP_OnNumContainedItemsChanged(int numContainedItems);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.StoreItemAction
// 0x0030 (FullSize[0x00D8] - InheritedSize[0x00A8])
class UStoreItemAction : public UInteractionAction
{
public:
	unsigned char                                      UnknownData_ZA0C[0x30];                                    // 0x00A8(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.StoreItemAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SubtitleWidget
// 0x0010 (FullSize[0x0270] - InheritedSize[0x0260])
class USubtitleWidget : public UUserWidget
{
public:
	class UTextBlock*                                  _subtitle;                                                 // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                                    _subtitleOverlay;                                          // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SubtitleWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SunburnSickness
// 0x0008 (FullSize[0x01B8] - InheritedSize[0x01B0])
class USunburnSickness : public USickness
{
public:
	unsigned char                                      UnknownData_R0S9[0x8];                                     // 0x01B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SunburnSickness"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SurvivalSkill
// 0x0008 (FullSize[0x00A8] - InheritedSize[0x00A0])
class USurvivalSkill : public UIntelligenceSkill
{
public:
	struct FCompassSkillParametersPerSkillLevel        NoSkillParameters;                                         // 0x00A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FCompassSkillParametersPerSkillLevel        BasicSkillParameters;                                      // 0x00A1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FCompassSkillParametersPerSkillLevel        MediumSkillParameters;                                     // 0x00A2(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FCompassSkillParametersPerSkillLevel        AdvancedSkillParameters;                                   // 0x00A3(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FCompassSkillParametersPerSkillLevel        AboveAdvancedSkillParameters;                              // 0x00A4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7TT6[0x3];                                     // 0x00A5(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SurvivalSkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SurvivalStatsHandler
// 0x0078 (FullSize[0x0298] - InheritedSize[0x0220])
class ASurvivalStatsHandler : public AActor
{
public:
	unsigned char                                      UnknownData_S2EE[0x78];                                    // 0x0220(0x0078) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SurvivalStatsHandler"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.SwimmingSkill
// 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
class USwimmingSkill : public UConstitutionSkill
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.SwimmingSkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Switch
// 0x0038 (FullSize[0x0258] - InheritedSize[0x0220])
class ASwitch : public AActor
{
public:
	unsigned char                                      UnknownData_OQV4[0x18];                                    // 0x0220(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        Mesh;                                                      // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FText                                       _interactionText;                                          // 0x0240(0x0018) (Edit, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Switch"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TabElement
// 0x0050 (FullSize[0x02C8] - InheritedSize[0x0278])
class UTabElement : public UDesignableUserWidget
{
public:
	class UWidget*                                     CategoryNameWidget;                                        // 0x0278(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      maxIndex;                                                  // 0x0280(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Index;                                                     // 0x0281(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EVFT[0x2];                                     // 0x0282(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector2D                                   _initialPosition;                                          // 0x0284(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   _oldPosition;                                              // 0x028C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   _newPosition;                                              // 0x0294(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   _initialSize;                                              // 0x029C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   _oldSize;                                                  // 0x02A4(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   _newSize;                                                  // 0x02AC(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _oldAlpha;                                                 // 0x02B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _newAlpha;                                                 // 0x02B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _interpolationTime;                                        // 0x02BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _interpolationDuration;                                    // 0x02C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QLAI[0x4];                                     // 0x02C4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TabElement"));
		return ptr;
	}



	void Update(bool Up, const struct FVector2D& Offset);
	int GetNextIndex(bool Up);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TabModeSwitcherWidget
// 0x0008 (FullSize[0x0280] - InheritedSize[0x0278])
class UTabModeSwitcherWidget : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData_BTB6[0x8];                                     // 0x0278(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TabModeSwitcherWidget"));
		return ptr;
	}



	ConZ_ETabMode GetSelectedTabMode();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TabRowWidget
// 0x0018 (FullSize[0x0290] - InheritedSize[0x0278])
class UTabRowWidget : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData_QRVM[0x18];                                    // 0x0278(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TabRowWidget"));
		return ptr;
	}



	void SelectTab(int selectedTabIndex, int deselectedTabIndex);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TacticsSkill
// 0x00B0 (FullSize[0x0150] - InheritedSize[0x00A0])
class UTacticsSkill : public UIntelligenceSkill
{
public:
	unsigned char                                      UnknownData_Z6S9[0x50];                                    // 0x00A0(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _updateTime;                                               // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _serverUpdateTime;                                         // 0x00F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _noSkillDetectionRange;                                    // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _basicDetectionRange;                                      // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumDetectionRange;                                     // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _advancedDetectionRange;                                   // 0x0104(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _aboveAdvancedDetectionRange;                              // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _noSkillDetectionTime;                                     // 0x010C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _basicDetectionTime;                                       // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumDetectionTime;                                      // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _advancedDetectionTime;                                    // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _aboveAdvancedDetectionTime;                               // 0x011C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _fadeOutTime;                                              // 0x0120(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0Y5B[0x4];                                     // 0x0124(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 _detectionTimeDistanceScale;                               // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _noSkillExperiencePerSecond;                               // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _basicExperiencePerSecond;                                 // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mediumExperiencePerSecond;                                // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _advancedExperiencePerSecond;                              // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _tacticsDetectionCurveCoefficient1;                        // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _tacticsDetectionCurveCoefficient2;                        // 0x0144(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _tacticsDetectionCurveCoefficient3;                        // 0x0148(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_J92P[0x4];                                     // 0x014C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TacticsSkill"));
		return ptr;
	}



	bool ShouldDetectPrisoner(class APrisoner* Prisoner);
	bool IsPrisonerDetected(class APrisoner* Prisoner);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.HandsCorrectionsData
// 0x0208 (FullSize[0x0238] - InheritedSize[0x0030])
class UHandsCorrectionsData : public UDataAsset
{
public:
	struct FHandsPoseCorrections                       Corrections[0x4];                                          // 0x0030(0x0100) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FHandsPoseCorrections                       FirstPersonCorrections[0x4];                               // 0x0130(0x0100) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               OverrideFingersOnlyInProne;                                // 0x0230(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UVT3[0x7];                                     // 0x0231(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.HandsCorrectionsData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TakeInHandsAssetData
// 0x00C8 (FullSize[0x00F8] - InheritedSize[0x0030])
class UTakeInHandsAssetData : public UInteractionAssetData
{
public:
	class UClass*                                      AttachmentSocketMountType;                                 // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       GripSocketName;                                            // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SupportingHandIKSocketName;                                // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                TakeInHandsMontage;                                        // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                RemoveFromHandsMontage;                                    // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeleeSkillAnimationsPreset*                 MeleeSkillAnimationsPreset;                                // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHandsCorrectionsData*                       HandsCorrectionssData;                                     // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UItemFirstPersonAnimationsDataAsset*         FirstPersonAnimationsData;                                 // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MovementSpeedModifier;                                     // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SwimmingMovementSpeedModifier;                             // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DivingMovementSpeedModifier;                               // 0x0078(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BuoyancyMultiplier;                                        // 0x007C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldActionConstrainStance;                               // 0x0080(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldActionConstrainMove;                                 // 0x0081(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldActionConstrainTurn;                                 // 0x0082(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldActionForceStance;                                   // 0x0083(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EPrisonerStance                               ActionStance;                                              // 0x0084(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EStanceChangeFlag                             ActionStanceFlag;                                          // 0x0085(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsCarried;                                                 // 0x0086(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EPrisonerStance                               StanceWhileCarrying;                                       // 0x0087(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EStanceChangeFlag                             CarryStanceFlag;                                           // 0x0088(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldDropWhenEnteringCombatMode;                          // 0x0089(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EPrisonerMovementPace                         MaxPaceWhileCarrying;                                      // 0x008A(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4E73[0x5];                                     // 0x008B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequenceBase*                           CarryItemIdleAnimationFP;                                  // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           CarryItemIdleAnimationTP;                                  // 0x0098(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                PlayerLongThrowMontage;                                    // 0x00A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                PlayerLongThrowLoopMontage;                                // 0x00A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                PlayerShortThrowMontage;                                   // 0x00B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                PlayerThrowbackMontage;                                    // 0x00B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                ThrowingItemToWeaponMontage;                               // 0x00C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                WeaponToThrowingItemMontage;                               // 0x00C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxObstructedDepenetrationDepth;                           // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxObstructedDepenetrationDepthProne;                      // 0x00D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           LeftObstructedIdleAnimationFP;                             // 0x00D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           RightObstructedIdleAnimationFP;                            // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           ObstructedIdleAnimationTP;                                 // 0x00E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           ObstructedIdleAnimationProneTP;                            // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TakeInHandsAssetData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TargetObjective
// 0x00D0 (FullSize[0x0400] - InheritedSize[0x0330])
class ATargetObjective : public ARequirementObjective
{
public:
	unsigned char                                      _targetClasses[0x50];                                      // 0x0330(0x0050) UNKNOWN PROPERTY: MapProperty
	bool                                               _specificTarget;                                           // 0x0380(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WN0U[0x7];                                     // 0x0381(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _targetMeshes[0x50];                                       // 0x0381(0x0050) UNKNOWN PROPERTY: MapProperty
	unsigned char                                      _targetItems[0x10];                                        // 0x03D8(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      UnknownData_M8Q4[0x18];                                    // 0x03E8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TargetObjective"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TeamDeathmatchParticipantStats
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
class UTeamDeathmatchParticipantStats : public UGameEventParticipantStats
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TeamDeathmatchParticipantStats"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TeamDeathmatchGameEvent
// 0x0020 (FullSize[0x0598] - InheritedSize[0x0578])
class ATeamDeathmatchGameEvent : public AGameEventBase
{
public:
	struct FTeamDeathmatchParameters                   _teamDeathmatchParameters;                                 // 0x0578(0x0014) (Net, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TMBG[0xC];                                     // 0x058C(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TeamDeathmatchGameEvent"));
		return ptr;
	}



	void SetTeamDeathmatchParameters(const struct FTeamDeathmatchParameters& Params);
	void RestrictGameEventArea();
	struct FTeamDeathmatchParameters GetTeamDeathmatchParameters();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TeamDeathmatchLocationMarker
// 0x0028 (FullSize[0x0440] - InheritedSize[0x0418])
class ATeamDeathmatchLocationMarker : public AGameEventLocationMarker
{
public:
	struct FTeamDeathmatchParameters                   TeamDeathmatchParameters;                                  // 0x0418(0x0014) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     FocusOffset;                                               // 0x042C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimalRadius;                                             // 0x0438(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MRYU[0x4];                                     // 0x043C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TeamDeathmatchLocationMarker"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TeamInfoWidget
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
class UTeamInfoWidget : public UDesignableUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TeamInfoWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TeamInvitationWidget
// 0x0028 (FullSize[0x02A0] - InheritedSize[0x0278])
class UTeamInvitationWidget : public UDesignableUserWidget
{
public:
	struct FText                                       InvitationText;                                            // 0x0278(0x0018) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class APrisoner*                                   invitor;                                                   // 0x0290(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APrisoner*                                   invited;                                                   // 0x0298(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TeamInvitationWidget"));
		return ptr;
	}



	void StartTimer(float Timeout);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TeammateNameWidget
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
class UTeammateNameWidget : public UDesignableUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TeammateNameWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TeleportComponent
// 0x0040 (FullSize[0x00F0] - InheritedSize[0x00B0])
class UTeleportComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_6U0Q[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTeleportRepData                            _repData;                                                  // 0x00B8(0x0030) (Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_S34I[0x8];                                     // 0x00E8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TeleportComponent"));
		return ptr;
	}



	void Server_ReportClientReadyToFinishTeleport(unsigned char RequestID);
	void OnRep_Data();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TeleportComponentOwner
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTeleportComponentOwner : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TeleportComponentOwner"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TeleportStagingLocation
// 0x0000 (FullSize[0x0220] - InheritedSize[0x0220])
class ATeleportStagingLocation : public AActor
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TeleportStagingLocation"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TeleportSubject
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTeleportSubject : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TeleportSubject"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TempPlayerStart
// 0x0000 (FullSize[0x0250] - InheritedSize[0x0250])
class ATempPlayerStart : public APlayerStart
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TempPlayerStart"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TextStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UTextStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TextStatics"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ThieverySkill
// 0x0020 (FullSize[0x00C0] - InheritedSize[0x00A0])
class UThieverySkill : public UDexteritySkill
{
public:
	class UCurveFloat*                                 _lockpickingDurationModifierCurve;                         // 0x00A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 _lockpickingStartAngleModifierCurve;                       // 0x00A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 _lockpickingAngleModifierCurve;                            // 0x00B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 _lockpickingDurabilityModifierCurve;                       // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ThieverySkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ThrowableItemTag
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
class UThrowableItemTag : public UBaseItemTag
{
public:
	struct FMeleeWeaponDesc                            WeaponDesc;                                                // 0x0030(0x0038) (Edit, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ThrowableItemTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ThrowingComponent
// 0x13F0 (FullSize[0x15C0] - InheritedSize[0x01D0])
class UThrowingComponent : public UProjectileMovementComponent
{
public:
	ConZ_EItemThrowingBehavior                         ItemThrowingBehavior;                                      // 0x01D0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KBH3[0x3];                                     // 0x01D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PierceMaxDensity;                                          // 0x01D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThrowSpeedMultiplier;                                      // 0x01D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    InitialRotation;                                           // 0x01DC(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    UpdatedRotation;                                           // 0x01E8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    MinRandomImpactRotation;                                   // 0x01F4(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                                    MaxRandomImpactRotation;                                   // 0x0200(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              PenetrationDepth;                                          // 0x020C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_96HD[0x13B0];                                  // 0x0210(0x13B0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ThrowingComponent"));
		return ptr;
	}



	void OnProjectileStopped(const struct FHitResult& ImpactResult);
	void OnProjectileBounced(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity);
	void Multicast_PierceHitObject(const struct FVector& ImpactVelocity, const struct FHitResult& ZeroBasedImpactResult);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ThrowingDamageType
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UThrowingDamageType : public UDamageType
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ThrowingDamageType"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ThrowingQuickAccessItemWidget
// 0x0048 (FullSize[0x02C0] - InheritedSize[0x0278])
class UThrowingQuickAccessItemWidget : public UDesignableUserWidget
{
public:
	unsigned char                                      MaxWidth;                                                  // 0x0278(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      MaxHeight;                                                 // 0x0279(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3JBS[0x6];                                     // 0x027A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UImage*                                      _imageWidget;                                              // 0x0280(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      _itemClass;                                                // 0x0288(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DefaultWidth;                                              // 0x0290(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              DefaultHeight;                                             // 0x0294(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                                   DefaultPosition;                                           // 0x0298(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MN3E[0x8];                                     // 0x02A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UImage*                                      _additionalIcon;                                           // 0x02A8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  _additionalText;                                           // 0x02B0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_S4RD[0x8];                                     // 0x02B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ThrowingQuickAccessItemWidget"));
		return ptr;
	}



	void OnThrowingQuickAccessItemPickedUpStateChanged(class AItem* Item, bool PickedUpState);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ThrowingSkill
// 0x0010 (FullSize[0x00B0] - InheritedSize[0x00A0])
class UThrowingSkill : public UDexteritySkill
{
public:
	unsigned char                                      UnknownData_JAFN[0x4];                                     // 0x00A0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _minPlayRate;                                              // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxPlayRate;                                              // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_R1TX[0x4];                                     // 0x00AC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ThrowingSkill"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TimeControllableLight
// 0x0018 (FullSize[0x0248] - InheritedSize[0x0230])
class ATimeControllableLight : public ALight
{
public:
	bool                                               _shouldExistOnDedicatedServer;                             // 0x0230(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_951R[0x7];                                     // 0x0231(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 _intensityVsTimeOfDayCurve;                                // 0x0238(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPointLightComponent*                        _pointLightComponent;                                      // 0x0240(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TimeControllableLight"));
		return ptr;
	}



	void OnTimeOfDayChanged(float TimeOfDay);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TimeControllableSpotLight
// 0x0018 (FullSize[0x0248] - InheritedSize[0x0230])
class ATimeControllableSpotLight : public ALight
{
public:
	bool                                               _shouldExistOnDedicatedServer;                             // 0x0230(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VHJO[0x7];                                     // 0x0231(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 _intensityVsTimeOfDayCurve;                                // 0x0238(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpotLightComponent*                         _pointLightComponent;                                      // 0x0240(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TimeControllableSpotLight"));
		return ptr;
	}



	void OnTimeOfDayChanged(float TimeOfDay);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TimedTriggerComponent
// 0x0028 (FullSize[0x04D0] - InheritedSize[0x04A8])
class UTimedTriggerComponent : public UTriggerComponent
{
public:
	unsigned char                                      UnknownData_GWII[0x8];                                     // 0x04A8(0x0008) Fix Super Size
	class UAkAudioEvent*                               _countdownStartAudioEvent;                                 // 0x04B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _countdownStopAudioEvent;                                  // 0x04B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDateTime                                   _countdownStartTimestmap;                                  // 0x04C0(0x0008) (Net, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SUOG[0x8];                                     // 0x04C8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TimedTriggerComponent"));
		return ptr;
	}



	void OnCountdownTimer();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TireToSurfaceAudioData
// 0x0228 (FullSize[0x0258] - InheritedSize[0x0030])
class UTireToSurfaceAudioData : public UDataAsset
{
public:
	float                                              _maxSoundRange;                                            // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JXRC[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               _movementStarted;                                          // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _movementStopped;                                          // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _noSurface;                                                // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FTireSurfaceAudioEntry>              _soundGroups;                                              // 0x0050(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_011J[0x1F8];                                   // 0x0060(0x01F8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TireToSurfaceAudioData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ToggleCamouflageAction
// 0x0008 (FullSize[0x00A8] - InheritedSize[0x00A0])
class UToggleCamouflageAction : public USkillAction
{
public:
	unsigned char                                      UnknownData_ABV4[0x8];                                     // 0x00A0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ToggleCamouflageAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ToothacheSickness
// 0x0008 (FullSize[0x01B8] - InheritedSize[0x01B0])
class UToothacheSickness : public USickness
{
public:
	unsigned char                                      UnknownData_YRJM[0x8];                                     // 0x01B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ToothacheSickness"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Tournament
// 0x0050 (FullSize[0x0270] - InheritedSize[0x0220])
class ATournament : public AActor
{
public:
	unsigned char                                      UnknownData_HL5B[0x10];                                    // 0x0220(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               StartAnnouncement;                                         // 0x0230(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               SuddenDeathAnnouncement;                                   // 0x0238(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               EndAnnouncement;                                           // 0x0240(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               _inProgress;                                               // 0x0248(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _inSuddenDeath;                                            // 0x0249(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _hasEnded;                                                 // 0x024A(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3U9N[0x5];                                     // 0x024B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTournamentStats>                    _stats;                                                    // 0x0250(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	class UTournamentScoreboardWidget*                 _scoreboardWidget;                                         // 0x0260(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KXHJ[0x8];                                     // 0x0268(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Tournament"));
		return ptr;
	}



	void OnRep_Stats();
	void Multicast_PlayAnnouncement(class UAkAudioEvent* AudioEvent);
	bool IsInSuddenDeath();
	bool IsInProgress();
	bool HasEnded();
	void GetStatsOrderedByDeath(TArray<struct FTournamentStats>* stats);
	TArray<struct FTournamentStats> GetStats();
	class UTournamentScoreboardWidget* GetScoreboardWidget();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TournamentScoreboardWidget
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
class UTournamentScoreboardWidget : public UDesignableUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TournamentScoreboardWidget"));
		return ptr;
	}



	void UpdateStats();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TrackingMarker2
// 0x0068 (FullSize[0x0288] - InheritedSize[0x0220])
class ATrackingMarker2 : public AActor
{
public:
	unsigned char                                      UnknownData_Z5ZB[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneComponent*                             SceneComponent;                                            // 0x0228(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                             DirectionArrow;                                            // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDecalComponent*                             ConeDecal;                                                 // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    Particles;                                                 // 0x0240(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TickFrequency;                                             // 0x0248(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N6F0[0x4];                                     // 0x024C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      AnimalClass;                                               // 0x0250(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Duration;                                                  // 0x0258(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     Direction;                                                 // 0x025C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              health;                                                    // 0x0268(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EBleedingSeverity                             BleedingSeverity;                                          // 0x026C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShowBleedingInfo;                                          // 0x026D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShowWoundInfo;                                             // 0x026E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShowBasicWoundInfo;                                        // 0x026F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSevereBleedTime;                                        // 0x0270(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxHeavyBleedTime;                                         // 0x0274(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxModerateBleedTime;                                      // 0x0278(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxLightBleedTime;                                         // 0x027C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F9VV[0x8];                                     // 0x0280(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TrackingMarker2"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Tractor4WAnimInstance
// 0x0018 (FullSize[0x0A90] - InheritedSize[0x0A78])
class UTractor4WAnimInstance : public UConZVehicleAnimInstance
{
public:
	struct FTractor4WAnimWheelData                     FLWheelData;                                               // 0x0A78(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FTractor4WAnimWheelData                     FRWheelData;                                               // 0x0A80(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y3M9[0x8];                                     // 0x0A88(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Tractor4WAnimInstance"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TrapData
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UTrapData : public UDataAsset
{
public:
	class UClass*                                      SphereProximityTriggerComponentClass;                      // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      BoxProximityTriggerComponentClass;                         // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      LaserTriggerComponentClass;                                // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      TimedTriggerComponentClass;                                // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TrapData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TrapItemUserData
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UTrapItemUserData : public UVirtualizedItemUserData
{
public:
	struct FDbIntegerId                                OwnerUserProfileId;                                        // 0x0028(0x0008) (SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsOwnerUserProfileIdDirty;                                 // 0x0030(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OZ6T[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TrapItemUserData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TrapRefuelItemTag
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UTrapRefuelItemTag : public UBaseItemTag
{
public:
	int                                                UsesOnRefuel;                                              // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UL97[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TrapRefuelItemTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TreatBrokenLimbsAction
// 0x0008 (FullSize[0x00B0] - InheritedSize[0x00A8])
class UTreatBrokenLimbsAction : public UMedicalAction
{
public:
	unsigned char                                      UnknownData_RL1V[0x8];                                     // 0x00A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TreatBrokenLimbsAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TreatSicknessAction
// 0x0008 (FullSize[0x00B0] - InheritedSize[0x00A8])
class UTreatSicknessAction : public UMedicalAction
{
public:
	unsigned char                                      UnknownData_FA6D[0x8];                                     // 0x00A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TreatSicknessAction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TrenchFootDisease
// 0x0010 (FullSize[0x01C0] - InheritedSize[0x01B0])
class UTrenchFootDisease : public UDisease
{
public:
	unsigned char                                      UnknownData_KE05[0x10];                                    // 0x01B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TrenchFootDisease"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TriggerFailurePenalty
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTriggerFailurePenalty : public UFailurePenalty
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TriggerFailurePenalty"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.TriggerItemTag
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UTriggerItemTag : public UBaseItemTag
{
public:
	ConZ_ETrapTriggerType                              TriggerType;                                               // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QETO[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.TriggerItemTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.UIStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UUIStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.UIStatics"));
		return ptr;
	}



	bool ProjectWorldToScreen(class APlayerController* Controller, struct FVector* WorldPosition, struct FVector2D* Size, struct FVector2D* ScreenPosition);
	class UWidget* GetWidgetParentOfType(class UWidget* Widget, class UClass* Type, bool includeUserWidgets);
	struct FVector GetMuscleLeanFatFactorsFromCoordinates(const struct FVector2D& Coordinates);
	class UClass* GetDesiredWidgetClass(ConZ_EWidgetType Type);
	struct FText GetDataForFieldName(const struct FName& Name, class UStruct* str, class UStruct* Type);
	struct FVector4 GetAttributesFromMuscularAndFatFactors(float muscular, float Fat);
	struct FVector4 GetAgeModifiersFromAge(int Age);
	struct FString FilterNonNumbersFromString(struct FString* string);
	void ColorToHex(const struct FSlateColor& Color, struct FText* Text);
	bool CanDropIfDraggingItem(class UObject* draggedObject, class APawn* draggingPlayerPawn);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.UnarmedCombatInputRedirector
// 0x0038 (FullSize[0x0060] - InheritedSize[0x0028])
class UUnarmedCombatInputRedirector : public UObject
{
public:
	unsigned char                                      UnknownData_GRGG[0x38];                                    // 0x0028(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.UnarmedCombatInputRedirector"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.UnderwaterPostProcessVolume
// 0x0000 (FullSize[0x07C0] - InheritedSize[0x07C0])
class AUnderwaterPostProcessVolume : public APostProcessVolume
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.UnderwaterPostProcessVolume"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.UpdateableNotification
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UUpdateableNotification : public UBasicNotification
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.UpdateableNotification"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.UpdateableNotificationDescription
// 0x0018 (FullSize[0x0070] - InheritedSize[0x0058])
class UUpdateableNotificationDescription : public UBasicNotificationDescription
{
public:
	struct FString                                     notificationName;                                          // 0x0058(0x0010) (ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SQAI[0x8];                                     // 0x0068(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.UpdateableNotificationDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.UseItemObjective
// 0x0058 (FullSize[0x0378] - InheritedSize[0x0320])
class AUseItemObjective : public AObjective
{
public:
	unsigned char                                      _targetMeshes[0x50];                                       // 0x0320(0x0050) UNKNOWN PROPERTY: MapProperty
	unsigned char                                      UnknownData_DB7R[0x8];                                     // 0x0370(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.UseItemObjective"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.UserManager
// 0x0078 (FullSize[0x00A0] - InheritedSize[0x0028])
class UUserManager : public UObject
{
public:
	unsigned char                                      UnknownData_7CHP[0x78];                                    // 0x0028(0x0078) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.UserManager"));
		return ptr;
	}



	class UUserProfile* FindUserProfile(const struct FDbIntegerId& ID);
	class UUser* FindUser(const struct FString& ID);
	class UUser* FindOrCreateUser(const struct FString& ID);
	bool DeleteUser(const struct FString& ID);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.User
// 0x00E8 (FullSize[0x0110] - InheritedSize[0x0028])
class UUser : public UObject
{
public:
	unsigned char                                      UnknownData_44O7[0xE8];                                    // 0x0028(0x00E8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.User"));
		return ptr;
	}



	void SetRecentServers(TArray<struct FUserServerHistoryItem> Value);
	void SetProvider(const struct FString& Value);
	void SetName(const struct FString& Value);
	void SetLastLoginTime(const struct FDateTime& Value);
	void SetLastDirectConnectionAddress(const struct FString& Value);
	void SetIsBanned(bool Value);
	void SetFavoriteServers(TArray<struct FUserServerHistoryItem> Value);
	void RemoveRecentServerAt(int Index);
	void RemoveRecentServer(const struct FUserServerHistoryItem& Item);
	void RemoveFavoriteServerAt(int Index);
	void RemoveFavoriteServer(const struct FUserServerHistoryItem& Item);
	bool HasProfileWithName(ConZ_EUserProfileType Type, const struct FString& Name);
	TArray<struct FUserServerHistoryItem> GetRecentServers();
	struct FString GetProvider();
	TArray<struct FString> GetProfileNames(ConZ_EUserProfileType Type);
	struct FString GetName();
	struct FDateTime GetLastLoginTime();
	struct FString GetLastDirectConnectionAddress();
	bool GetIsBanned();
	struct FString GetID();
	TArray<struct FUserServerHistoryItem> GetFavoriteServers();
	TArray<class UUserProfile*> FindProfiles(ConZ_EUserProfileType Type);
	class UUserProfile* FindProfile(const struct FDbIntegerId& ID);
	class UUserProfile* FindMultiplayerCacheProfile(const struct FString& ServerIp, int ServerResponsePort);
	bool DeleteProfile(const struct FDbIntegerId& ID);
	class UUserProfile* CreateProfileFromTemplate(ConZ_EUserProfileType Type, const struct FCharacterTemplate& Value);
	class UUserProfile* CreateEmptyProfile(ConZ_EUserProfileType Type);
	class UUserProfile* CreateDefaultProfile(ConZ_EUserProfileType Type);
	void ClearRecentServers();
	void ClearFavoriteServers();
	void AddRecentServer(const struct FUserServerHistoryItem& Item);
	void AddFavoriteServer(const struct FUserServerHistoryItem& Item);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.UserProfile
// 0x00C8 (FullSize[0x00F0] - InheritedSize[0x0028])
class UUserProfile : public UObject
{
public:
	unsigned char                                      UnknownData_HPNI[0xC8];                                    // 0x0028(0x00C8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.UserProfile"));
		return ptr;
	}



	void SetPrisonerId(const struct FDbIntegerId& Value);
	void SetName(const struct FString& Value);
	void SetLastLogoutTime(const struct FDateTime& Value);
	void SetLastLoginTime(const struct FDateTime& Value);
	void SetFamePoints(float Value);
	void SetCreationTemplateXml(const struct FString& Value);
	void SetAuthorityInfo(const struct FUserProfileAuthorityInfo& Value);
	struct FCharacterTemplate MakeCharacterTemplate();
	struct FCharacterTemplate LoadCharacterTemplate();
	class UUser* GetUser();
	ConZ_EUserProfileType GetType();
	struct FDbIntegerId GetPrisonerId();
	struct FString GetName();
	struct FDateTime GetLastLogoutTime();
	struct FDateTime GetLastLoginTime();
	struct FDbIntegerId GetID();
	float GetFamePoints();
	struct FString GetCreationTemplateXml();
	struct FCharacterTemplate GetCreationTemplate();
	struct FUserProfileAuthorityInfo GetAuthorityInfo();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Vehicle
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UVehicle : public UMountable
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Vehicle"));
		return ptr;
	}



	bool VehicleHasFuel();
	bool VehicleHasEngine();
	bool VehicleHasBattery();
	void UpdateNavigationMeshes();
	void StopVehicleEngine();
	void StartVehicleEngine();
	bool ShouldShowVehicleHud();
	void SetVehicleWheelTireDeflated(int WheelIndex, bool isDeflated);
	void SetVehicleThrottleAmount(float Value);
	void SetVehicleSteerAmount(float Value);
	void SetVehicleLightsActive(bool Value);
	void SetVehicleHornActive(bool Value);
	void SetVehicleHealth(float Value);
	void SetVehicleHandbrakeAmount(float Value);
	void SetVehicleGearUp(bool Value);
	void SetVehicleGearDown(bool Value);
	void SetVehicleFuelAmount(float Value);
	void SetVehicleFreeLookEnabled(bool Value);
	void SetVehicleEngineBlockHealth(float Value);
	void SetVehicleDoorWindowCollisionAttached(int DoorIndex, bool Value);
	void SetVehicleDoorCollisionAttached(int DoorIndex, bool Value);
	void SetVehicleBrakeAmount(float Value);
	void SetVehicleBatteryAmount(float Value);
	void SetCurrentVehicleGear(int Value);
	struct FDbIntegerId SaveState(const struct FDbIntegerId& ID);
	void ResetVehicle();
	bool RepairVehicle(float healthToRepair);
	void LoadState(const struct FDbIntegerId& ID);
	bool IsVehicleWheelTireDeflated(int WheelIndex);
	bool IsVehicleUpright();
	bool IsVehicleInteriorExposed();
	bool IsVehicleHornActive();
	bool IsVehicleFreeLookEnabled();
	bool IsVehicleDoorWindowCollisionAttached(int DoorIndex);
	bool IsVehicleDoorCollisionAttached(int DoorIndex);
	float GetVehicleWheelsSteerAmount();
	struct FVector GetVehicleVelocity();
	float GetVehicleThrottleAmount();
	float GetVehicleSteerAmount();
	struct FVehicleSpawnParameters GetVehicleSpawnParameters();
	float GetVehicleHealthRatio();
	struct FText GetVehicleHealthBarCaption();
	float GetVehicleHealth();
	float GetVehicleHandbrakeAmount();
	class UClass* GetVehicleFuelResourceType();
	float GetVehicleFuelAmountRatio();
	float GetVehicleFuelAmount();
	ConZ_EVehicleEngineState GetVehicleEngineState();
	float GetVehicleEngineRpm();
	float GetVehicleEngineBlockHealth();
	float GetVehicleBrakeAmount();
	class UClass* GetVehicleBatteryResourceType();
	float GetVehicleBatteryAmountRatio();
	float GetVehicleBatteryAmount();
	class UAnimInstance* GetVehicleAnimInstance();
	int GetNumVehicleReverseGears();
	int GetNumVehicleForwardGears();
	int GetNumVehicleDoorWindows();
	int GetNumVehicleDoors();
	float GetMaxVehicleHealth();
	float GetMaxVehicleFuelAmount();
	float GetMaxVehicleEngineBlockHealth();
	float GetMaxVehicleBatteryAmount();
	int GetCurrentVehicleGear();
	bool AreVehicleLightsActive();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VehicleCorpse
// 0x0080 (FullSize[0x02A0] - InheritedSize[0x0220])
class AVehicleCorpse : public AActor
{
public:
	unsigned char                                      UnknownData_EK4E[0x8];                                     // 0x0220(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        _mesh;                                                     // 0x0228(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                             _explosionParticles;                                       // 0x0230(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_91DO[0x8];                                     // 0x0238(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  _explosionParticlesTransform;                              // 0x0240(0x0030) (Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _explosionAudioEvent;                                      // 0x0270(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _explosionForceMagnitude;                                  // 0x0278(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZR8M[0x4];                                     // 0x027C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FVehicleCorpseBurningParticles>      _burningParticles;                                         // 0x0280(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _burningAudioEvent;                                        // 0x0290(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OEDH[0x8];                                     // 0x0298(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VehicleCorpse"));
		return ptr;
	}



	class UStaticMeshComponent* GetMesh();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VehicleHitZoneManager
// 0x0050 (FullSize[0x0120] - InheritedSize[0x00D0])
class UVehicleHitZoneManager : public UMeshHitZones
{
public:
	struct FName                                       _vehicleHitMeshName;                                       // 0x00D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UMaterialInterface*>                  _engineBlock;                                              // 0x00D8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FVehicleHitZoneData>                 _doors;                                                    // 0x00E8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FVehicleHitZoneData>                 _doorWindows;                                              // 0x00F8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FVehicleHitZoneData>                 _wheelTires;                                               // 0x0108(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AM5I[0x8];                                     // 0x0118(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VehicleHitZoneManager"));
		return ptr;
	}



	void SetVehicleDoorWindowHitMeshAttached(int DoorIndex, bool Value);
	void SetVehicleDoorHitMeshAttached(int DoorIndex, bool Value);
	TArray<struct FVehicleHitZoneData> GetWheelTires();
	struct FName GetVehicleHitMeshName();
	TArray<struct FVehicleHitZoneData> GetDoorWindows();
	TArray<struct FVehicleHitZoneData> GetDoors();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VehicleHudWidget
// 0x0000 (FullSize[0x0278] - InheritedSize[0x0278])
class UVehicleHudWidget : public UDesignableUserWidget
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VehicleHudWidget"));
		return ptr;
	}



	bool ShouldShowVehicleHud();
	bool ShouldShowVehicleFuelAmountIndicator();
	bool ShouldShowVehicleBatteryAmountIndicator();
	bool IsVehicleEngineBroken();
	bool HasVehicle();
	float GetVehicleSpeed();
	float GetVehicleHealthRatio();
	struct FText GetVehicleHealthBarCaption();
	int GetVehicleGear();
	float GetVehicleFuelAmountRatio();
	float GetVehicleBatteryAmountRatio();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VehicleItemContainer
// 0x0000 (FullSize[0x07E0] - InheritedSize[0x07E0])
class AVehicleItemContainer : public AChestItem
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VehicleItemContainer"));
		return ptr;
	}



	TScriptInterface<class UVehicle> GetOwningVehicle();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.MountSlot
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UMountSlot : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.MountSlot"));
		return ptr;
	}



	bool ShouldHideAttachedItems();
	bool Reserve(const TScriptInterface<class UMountee>& reservee);
	bool IsReachableFromSky();
	void HandlePreUnmount();
	void HandlePreMount(const TScriptInterface<class UMountee>& Mountee);
	void HandlePostUnmount();
	void HandlePostMount(const TScriptInterface<class UMountee>& Mountee);
	ConZ_EMotionIntensity GetUnmountingMotionIntensity();
	float GetUnmountDuration();
	class UAkAudioEvent* GetUnmountAudioEvent();
	struct FName GetSocketToMount();
	TScriptInterface<class UMountee> GetReservee();
	TScriptInterface<class UMountable> GetOwningMountable();
	int GetMountPriority();
	ConZ_EMotionIntensity GetMountingMotionIntensity();
	float GetMounteeWeightLoad();
	struct FRotator GetMounteeFirstPersonViewRotationBase();
	struct FVector GetMounteeCenterOfMassOffset();
	TScriptInterface<class UMountee> GetMountee();
	class UAnimSequenceBase* GetMountedAnimation();
	float GetMountDuration();
	class UAkAudioEvent* GetMountAudioEvent();
	float GetMinEffectiveMounteeMass();
	float GetMaxEffectiveMounteeMass();
	void GetEntryPoints(TArray<struct FMountSlotEntryPoint>* entryPoints);
	class USceneComponent* GetComponentToMount();
	void ClearReservation();
	bool CanUnmount();
	bool CanMounteeBeAttackedByMelee();
	bool CanMount(const TScriptInterface<class UMountee>& Mountee);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VehicleMountSlot
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UVehicleMountSlot : public UMountSlot
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VehicleMountSlot"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VehiclePartDescriptionComponent
// 0x0000 (FullSize[0x0470] - InheritedSize[0x0470])
class UVehiclePartDescriptionComponent : public UBoxComponent
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VehiclePartDescriptionComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VehicleWeaponAimingParameters
// 0x00F0 (FullSize[0x0118] - InheritedSize[0x0028])
class UVehicleWeaponAimingParameters : public UObject
{
public:
	TArray<ConZ_EVehicleWeaponAimingStance>            SupportedStance;                                           // 0x0028(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FVehicleWeaponAimingStanceData              StanceData[0x2];                                           // 0x0038(0x00E0) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VehicleWeaponAimingParameters"));
		return ptr;
	}



	bool CanPrisonerTakeItemInHands(class APrisoner* Prisoner, class AItem* Item, ConZ_EVehicleWeaponAimingStance Stance);
	bool CanPrisonerEnterCombatModeUsingItem(class APrisoner* Prisoner, class AItem* Item, ConZ_EVehicleWeaponAimingStance Stance);
	bool CanExecutePrisonerAction(class APrisoner* Prisoner, class UPrisonerActionDescription* desc);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VehicleSpawner
// 0x0008 (FullSize[0x0228] - InheritedSize[0x0220])
class AVehicleSpawner : public AActor
{
public:
	class UVehicleSpawnerComponent*                    SpawnerComponent;                                          // 0x0220(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VehicleSpawner"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VehicleSpawnerComponent
// 0x0018 (FullSize[0x0210] - InheritedSize[0x01F8])
class UVehicleSpawnerComponent : public USceneComponent
{
public:
	TArray<struct FVehicleSpawnerMarker>               SpawnerMarkers;                                            // 0x01F8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NA9Z[0x8];                                     // 0x0208(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VehicleSpawnerComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VehicleSpawningManager
// 0x01D8 (FullSize[0x03F8] - InheritedSize[0x0220])
class AVehicleSpawningManager : public AActor
{
public:
	unsigned char                                      UnknownData_GPC4[0x120];                                   // 0x0220(0x0120) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _defaultMaxNumSpawnersPerSpawnGroup;                       // 0x0340(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                                _spawnGroupParentTag;                                      // 0x0344(0x0008) (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FBF7[0x54];                                    // 0x034C(0x0054) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _preferredDistanceBetweenSpawners;                         // 0x03A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _relevantSpawnersUpdateInterval;                           // 0x03A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0GQE[0x4];                                     // 0x03A8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _minVisitorPawnLocationDeltaToUpdateRelevantSpawners;      // 0x03AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _vehicleActorCullDistance;                                 // 0x03B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _addSpawnerUpdateInterval;                                 // 0x03B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_M0QQ[0x4];                                     // 0x03B8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _numDaysToKeepSpawnerAliveIfVehicleIsInactive;             // 0x03BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FExpirableVehicleSpawner>            _expirableSpawners;                                        // 0x03C0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	float                                              _newVehicleMinHealthAmount;                                // 0x03D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _newVehicleMaxHealthAmount;                                // 0x03D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _newVehicleMinFuelAmount;                                  // 0x03D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _newVehicleMaxFuelAmount;                                  // 0x03DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _newVehicleMinBatteryAmount;                               // 0x03E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _newVehicleMaxBatteryAmount;                               // 0x03E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _autoSaveCheckInterval;                                    // 0x03E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HSGB[0x4];                                     // 0x03EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _autosaveInterval;                                         // 0x03F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E95Q[0x4];                                     // 0x03F4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VehicleSpawningManager"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VehicleSpawnerPreset
// 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
class UVehicleSpawnerPreset : public UObject
{
public:
	struct FVehicleSpawnerData                         SpawnerData;                                               // 0x0028(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VehicleSpawnerPreset"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VerificationStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UVerificationStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VerificationStatics"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VibrioVulnificusInfection
// 0x0008 (FullSize[0x01B8] - InheritedSize[0x01B0])
class UVibrioVulnificusInfection : public UPoisoning
{
public:
	unsigned char                                      UnknownData_21M2[0x8];                                     // 0x01B0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VibrioVulnificusInfection"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VicinityContainer3
// 0x0028 (FullSize[0x02A0] - InheritedSize[0x0278])
class UVicinityContainer3 : public UDesignableUserWidget
{
public:
	unsigned char                                      UnknownData_QSTO[0x18];                                    // 0x0278(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UItemInventoryWidget2*                       _container;                                                // 0x0290(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LJ9J[0x8];                                     // 0x0298(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VicinityContainer3"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VicinityPanel3
// 0x0210 (FullSize[0x0488] - InheritedSize[0x0278])
class UVicinityPanel3 : public UDesignableUserWidget
{
public:
	class UWrapBox*                                    _searchedItemsBox;                                         // 0x0278(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWrapBox*                                    _vicinityBox;                                              // 0x0280(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                              _vicinityContainersBox;                                    // 0x0288(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UObject*, class UWidget*>               _searchedItems;                                            // 0x0290(0x0050) (ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<class UObject*, class UWidget*>               _vicinityItems;                                            // 0x02E0(0x0050) (ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<class UObject*, class UWidget*>               _vicinityContainers;                                       // 0x0330(0x0050) (ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZA9N[0x50];                                    // 0x0380(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UCheckBox*, struct FClassesArray>       _filterCheckboxes;                                         // 0x03D0(0x0050) (Edit, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<struct FName, struct FClassesArray>           _filterCheckboxesNames;                                    // 0x0420(0x0050) (Edit, NativeAccessSpecifierPrivate)
	struct FMargin                                     _vicinityContainersPadding;                                // 0x0470(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GMQW[0x8];                                     // 0x0480(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VicinityPanel3"));
		return ptr;
	}



	void OnVicinityContainerInitialized(const TScriptInterface<class UInventoryNode>& Item, class UItemWidget2* Widget);
	void OnItemActorDestroyed(class AActor* Actor);
	void OnCheckBoxCheckedChanged(bool checked);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VisionEffectsComponent
// 0x0D30 (FullSize[0x0DE0] - InheritedSize[0x00B0])
class UVisionEffectsComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_KPLJ[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PostProcessPriority;                                       // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZAZL[0x4];                                     // 0x00BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          FadeOutMaterial;                                           // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          LowLightVisionMaterial;                                    // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          NightVisionMaterial;                                       // 0x00D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NightVisionBlendInDuration;                                // 0x00D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NightVisionBlendOutDuration;                               // 0x00DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialParameterCollection*                AnimalEyesMaterialParameterCollection;                     // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AnimalEyesEmissiveMaterialName;                            // 0x00E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AnimalEyesEmissiveValueWhenNightVisionIsEnabled;           // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XY71[0x4];                                     // 0x00F4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          FlashbangEffectMaterial;                                   // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          TakenDamageMaterial;                                       // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialParameterCollection*                TakenDamageMaterialParameterCollection;                    // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       TakenDamageBlurIntensityParameterName;                     // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       TakenDamageStainsIntensityParameterName;                   // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       TakenDamageVignetteIntensityParameterName;                 // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 TakenDamageBlurShapeCurve;                                 // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 TakenDamageBlurIntensityCurve;                             // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 TakenDamageBlurDurationCurve;                              // 0x0138(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 TakenDamageStainsShapeCurve;                               // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 TakenDamageStainsIntensityCurve;                           // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 TakenDamageStainsDurationCurve;                            // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 TakenDamageVignetteShapeCurve;                             // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 TakenDamageVignetteIntensityCurve;                         // 0x0160(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 TakenDamageVignetteDurationCurve;                          // 0x0168(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TakenDamageMaxChromaticAberration;                         // 0x0170(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WZ1V[0x4];                                     // 0x0174(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      TakenDamageCameraShakeClass;                               // 0x0178(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 TakenDamageCameraShakeScaleCurve;                          // 0x0180(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldDesaturateIfHealthIsLow;                             // 0x0188(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7F17[0x3];                                     // 0x0189(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HealthAtWhichDesaturationIsMinimal;                        // 0x018C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HealthAtWhichDesaturationIsMaximal;                        // 0x0190(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KZVD[0x4];                                     // 0x0194(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          TacticsEffectMaterial;                                     // 0x0198(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          FocusModeMaterial;                                         // 0x01A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          DrunkennessMaterial;                                       // 0x01A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       DrunkennessIntensityParameterName;                         // 0x01B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          UnderwaterBlurMaterial;                                    // 0x01B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          UnderwaterDivingMaskMaterial;                              // 0x01C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          ScopeZoomMaterial;                                         // 0x01C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomBlendPPParameterName;                             // 0x01D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomBlackoutDensityParameterName;                     // 0x01D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomChromaticAberrationDampeningParameterName;        // 0x01E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomCrosshairBaseScaleParameterName;                  // 0x01E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomCrosshairDepthOffsetMultiplierParameterName;      // 0x01F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomCrosshairScaleMultiplierParameterName;            // 0x01F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomDistortionPowerParameterName;                     // 0x0200(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomDistortionScaleParameterName;                     // 0x0208(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomEyeDistanceBlackoutMultiplierParameterName;       // 0x0210(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomGlowIntensityAtNightParameterName;                // 0x0218(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomLensDepthOffsetMultiplierParameterName;           // 0x0220(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomLensScaleParameterName;                           // 0x0228(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomLensUIScaleParameterName;                         // 0x0230(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomLensZoomParameterName;                            // 0x0238(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomOptimalEyeDistanceParameterName;                  // 0x0240(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomCrosshairCenterScreenOffsetParameterName;         // 0x0248(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomLensCenterScreenOffsetParameterName;              // 0x0250(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomCrosshairParameterName;                           // 0x0258(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomCrosshairColorParameterName;                      // 0x0260(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomCrosshairColorAtNightParameterName;               // 0x0268(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomCrosshairGlowColorParameterName;                  // 0x0270(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomDirtMaskParameterName;                            // 0x0278(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomDirtinessParameterName;                           // 0x0280(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomDarkeningParameterName;                           // 0x0288(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomLensNormalMapParameterName;                       // 0x0290(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeZoomLensUIParameterName;                              // 0x0298(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPostProcessSettings                        _postProcessSettings;                                      // 0x02A0(0x0550) (Edit, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YJGB[0x5C0];                                   // 0x07F0(0x05C0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInstanceDynamic*                    _drunkennessMaterialInstance;                              // 0x0DB0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInterface*                          _headgearOverlayMaterialInstance;                          // 0x0DB8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*                    _scopeZoomMaterialInstance;                                // 0x0DC0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GRIH[0x4];                                     // 0x0DC8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _DOFBlurTime;                                              // 0x0DCC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _DOFClearBlurTime;                                         // 0x0DD0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _DOFScopingBlurTime;                                       // 0x0DD4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _DOFBlurDistanceADS;                                       // 0x0DD8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _DOFFstopADS;                                              // 0x0DDC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VisionEffectsComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VisualOverlayItemTag
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UVisualOverlayItemTag : public UBaseItemTag
{
public:
	class UMaterialInterface*                          OverlayMaterial;                                           // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Priority;                                                  // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldBeVisibleInFirstPersonView;                          // 0x003C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldBeVisibleInThirdPersonView;                          // 0x003D(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9LQD[0x2];                                     // 0x003E(0x0002) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VisualOverlayItemTag"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VitaminADeficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UVitaminADeficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VitaminADeficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VitaminB12Deficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UVitaminB12Deficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VitaminB12Deficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VitaminB1Deficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UVitaminB1Deficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VitaminB1Deficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VitaminB2Deficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UVitaminB2Deficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VitaminB2Deficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VitaminB3Deficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UVitaminB3Deficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VitaminB3Deficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VitaminB4Deficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UVitaminB4Deficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VitaminB4Deficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VitaminB5Deficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UVitaminB5Deficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VitaminB5Deficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VitaminB6Deficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UVitaminB6Deficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VitaminB6Deficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VitaminB9Deficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UVitaminB9Deficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VitaminB9Deficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VitaminCDeficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UVitaminCDeficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VitaminCDeficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VitaminDDeficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UVitaminDDeficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VitaminDDeficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VitaminEDeficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UVitaminEDeficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VitaminEDeficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VitaminKDeficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UVitaminKDeficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VitaminKDeficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VoiceAudioComponent
// 0x0020 (FullSize[0x0880] - InheritedSize[0x0860])
class UVoiceAudioComponent : public UAudioComponent
{
public:
	unsigned char                                      UnknownData_W2CF[0x8];                                     // 0x0860(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UVoiceDecoder*                               VoiceDecoder;                                              // 0x0868(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XN89[0x10];                                    // 0x0870(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VoiceAudioComponent"));
		return ptr;
	}



	void QueueVoiceData(TArray<unsigned char> CompressedVoiceData);
	void InitializeVoiceAudioComponent();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VoiceChatComponent
// 0x0078 (FullSize[0x0128] - InheritedSize[0x00B0])
class UVoiceChatComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_IYIY[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxVoiceDistance;                                          // 0x00B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ActiveTalker;                                              // 0x00BC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U8MY[0x3];                                     // 0x00BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StopTalkingTimeThreshold;                                  // 0x00C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_G08J[0x64];                                    // 0x00C4(0x0064) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VoiceChatComponent"));
		return ptr;
	}



	void ServerProcessVoiceChatData(TArray<unsigned char> compressedVoiceDataBuffer);
	bool GetIsActiveTalker();
	bool GetCompressedVoiceData(TArray<unsigned char>* OutBuffer);
	void GetAllVoiceChatComponentsInRange(TArray<class UVoiceChatComponent*>* pawnList);
	void ClientRecieveVoiceData(class UVoiceChatComponent* from, TArray<unsigned char> compressedVoiceDataBuffer);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VoiceDecoder
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UVoiceDecoder : public UObject
{
public:
	unsigned char                                      UnknownData_JQ57[0x10];                                    // 0x0028(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VoiceDecoder"));
		return ptr;
	}



	void DecompressVoiceData(TArray<unsigned char> InCompressedVoiceData, int InCompressedVoiceBytes, TArray<unsigned char>* OutDecompressedVoiceData, int* OutDecompressedVoiceBytes);
	class UVoiceDecoder* CreateVoiceDecoder(class UObject* Owner);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VomitingSickness
// 0x0020 (FullSize[0x01D0] - InheritedSize[0x01B0])
class UVomitingSickness : public USickness
{
public:
	unsigned char                                      UnknownData_N7ZG[0x20];                                    // 0x01B0(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VomitingSickness"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VoteSystemManager
// 0x00A8 (FullSize[0x02C8] - InheritedSize[0x0220])
class AVoteSystemManager : public AActor
{
public:
	TArray<class UClass*>                              VoteTopics;                                                // 0x0220(0x0010) (Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class UUpdateableNotificationDescription*          _activeTopicDesc;                                          // 0x0230(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVoteTopic*                                  _activeTopic;                                              // 0x0238(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LIMT[0x88];                                    // 0x0240(0x0088) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VoteSystemManager"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VoteTopic
// 0x0020 (FullSize[0x0048] - InheritedSize[0x0028])
class UVoteTopic : public UObject
{
public:
	unsigned char                                      UnknownData_I04S[0x20];                                    // 0x0028(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VoteTopic"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VoteTopic_InitiateCargoDrop
// 0x0000 (FullSize[0x0048] - InheritedSize[0x0048])
class UVoteTopic_InitiateCargoDrop : public UVoteTopic
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VoteTopic_InitiateCargoDrop"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VoteTopic_SetTimeOfDay
// 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
class UVoteTopic_SetTimeOfDay : public UVoteTopic
{
public:
	unsigned char                                      UnknownData_QXW9[0x8];                                     // 0x0048(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VoteTopic_SetTimeOfDay"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.VoteTopic_SetWeather
// 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
class UVoteTopic_SetWeather : public UVoteTopic
{
public:
	unsigned char                                      UnknownData_XB1I[0x8];                                     // 0x0048(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.VoteTopic_SetWeather"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WarningNotification
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UWarningNotification : public UConZNotification
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WarningNotification"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WarningNotificationDescription
// 0x0018 (FullSize[0x0058] - InheritedSize[0x0040])
class UWarningNotificationDescription : public UNotificationDescription
{
public:
	struct FString                                     Message;                                                   // 0x0040(0x0010) (ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Duration;                                                  // 0x0050(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                      Color;                                                     // 0x0054(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WarningNotificationDescription"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WashClothesData
// 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
class UWashClothesData : public UDataAsset
{
public:
	TMap<class UClass*, struct FWashItemData>          WashClothes;                                               // 0x0030(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UClass*                                      SkillToIncrease;                                           // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SkillIncreaseAmount;                                       // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SkillIncreaseModifier;                                     // 0x008C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WashClothesData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WaterSurfaceAssetData
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UWaterSurfaceAssetData : public UAssetUserData
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WaterSurfaceAssetData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.AnimalSpawner2
// 0x00A0 (FullSize[0x02C0] - InheritedSize[0x0220])
class AAnimalSpawner2 : public AActor
{
public:
	unsigned char                                      UnknownData_2CS1[0x18];                                    // 0x0220(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinSpawnAwayDistance;                                      // 0x0238(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSpawnAwayDistance;                                      // 0x023C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UClass*, struct FAnimalSpawnInfo>       SpawnInfo;                                                 // 0x0240(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class USphereComponent*                            SphereComponent;                                           // 0x0290(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGlobalAnimalSpawner*                        _globalSpawner;                                            // 0x0298(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AE92[0x10];                                    // 0x02A0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FAnimalManagementData>               _animalsData;                                              // 0x02B0(0x0010) (Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.AnimalSpawner2"));
		return ptr;
	}



	void SphereComponent_OnComponentEndOverlap(class UPrimitiveComponent* activatedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void SphereComponent_OnComponentBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnPlayerDespawned(class AActor* despawnedActor);
	bool IsSpawnerActive();
	int GetSpawnedAnimalsAmount(class UClass* AnimalClass);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WaypointGroup
// 0x0040 (FullSize[0x0300] - InheritedSize[0x02C0])
class AWaypointGroup : public AAnimalSpawner2
{
public:
	struct FColor                                      DebugColor;                                                // 0x02C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EWaypointTraverseType                         WaypointTraverseType;                                      // 0x02C4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F2JC[0x3];                                     // 0x02C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MaxSpawnInstancesPerWaypoint;                              // 0x02C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WaypointSpawningResetTime;                                 // 0x02CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWaypoint>                           Waypoints;                                                 // 0x02D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N9NN[0x20];                                    // 0x02E0(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WaypointGroup"));
		return ptr;
	}



	struct FVector GetWaypointLocation(int waypointIndex);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WaypointScreenWidget
// 0x0018 (FullSize[0x0290] - InheritedSize[0x0278])
class UWaypointScreenWidget : public UDesignableUserWidget
{
public:
	class UClass*                                      WaypointClass;                                             // 0x0278(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7ETB[0x10];                                    // 0x0280(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WaypointScreenWidget"));
		return ptr;
	}



	void UpdateWaypoints();
	void RemoveWaypointWidgetFromScreen(class UWaypointWidget* Widget);
	void RemoveWaypoint(class UWaypointWidget* Waypoint);
	void RemoveAllWaypoints();
	void AddWaypointWidgetToScreen(class UWaypointWidget* Widget);
	class UWaypointWidget* AddWaypoint(class UClass* WidgetClass);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponAccuracyGroup
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UWeaponAccuracyGroup : public UDataAsset
{
public:
	float                                              NormalStandFrom;                                           // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NormalStandTo;                                             // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NormalCrouchFrom;                                          // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NormalCrouchTo;                                            // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NormalProneFrom;                                           // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NormalProneTo;                                             // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ScopedStandFrom;                                           // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ScopedStandTo;                                             // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ScopedCrouchFrom;                                          // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ScopedCrouchTo;                                            // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ScopedProneFrom;                                           // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ScopedProneTo;                                             // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponAccuracyGroup"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponActionWornOutFiringConditions
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UWeaponActionWornOutFiringConditions : public UWeaponAction
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponActionWornOutFiringConditions"));
		return ptr;
	}



	bool CanExecuteForWeapon(class AWeapon* Weapon);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponAmmoDisplayContainerWidget
// 0x0028 (FullSize[0x02A0] - InheritedSize[0x0278])
class UWeaponAmmoDisplayContainerWidget : public UDesignableUserWidget
{
public:
	class UClass*                                      _ammoDisplayWidgetClass;                                   // 0x0278(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                                _displayList;                                              // 0x0280(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                                _displayListCentered;                                      // 0x0288(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OP7D[0x10];                                    // 0x0290(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponAmmoDisplayContainerWidget"));
		return ptr;
	}



	void OnTabModeOpened(ConZ_ETabMode tabMode);
	void OnTabModeClosed();
	void Init(class AWeapon* Weapon, float onScreenDuration, bool displayOnCenter, class UTexture2D* iconOverride);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponAmmoDisplayWidget
// 0x0010 (FullSize[0x0288] - InheritedSize[0x0278])
class UWeaponAmmoDisplayWidget : public UDesignableUserWidget
{
public:
	class UTextBlock*                                  _ammoCountText;                                            // 0x0278(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                      _ammoIcon;                                                 // 0x0280(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponAmmoDisplayWidget"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponAnimInstance
// 0x0020 (FullSize[0x02F0] - InheritedSize[0x02D0])
class UWeaponAnimInstance : public UItemAnimInstance
{
public:
	float                                              _owningPrisonerWeaponBreathFactor;                         // 0x02D0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _owningPrisonerWeaponAimDownTheSightsStillBlendFactor;     // 0x02D4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isOwningPrisonerAimingDownTheSights;                      // 0x02D8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isChamberOpened;                                          // 0x02D9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_I3O2[0x2];                                     // 0x02DA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _ammoCount;                                                // 0x02DC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldPlayChamberOpenedIdle;                              // 0x02E0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isInGameEvent;                                            // 0x02E1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EWeaponMalfunction                            _malfunction;                                              // 0x02E2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _useFiringModeBoneRotation;                                // 0x02E3(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                                    _firingModeBoneRotation;                                   // 0x02E4(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponAnimInstance"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponAttachmentBayonet
// 0x0000 (FullSize[0x0778] - InheritedSize[0x0778])
class AWeaponAttachmentBayonet : public AWeaponAttachment
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponAttachmentBayonet"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponAttachmentFlashlight
// 0x0028 (FullSize[0x07A0] - InheritedSize[0x0778])
class AWeaponAttachmentFlashlight : public AWeaponAttachment
{
public:
	class UAkAudioEvent*                               _lightActivatedAudioEvent;                                 // 0x0778(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _lightSocketName;                                          // 0x0780(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _materialEmissiveParameterName;                            // 0x0788(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VHC3[0x8];                                     // 0x0790(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBasicGameResourceContainerComponent*        _resourceContainerComponent;                               // 0x0798(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponAttachmentFlashlight"));
		return ptr;
	}



	void Server_SetTurnedOn(bool Value);
	void OnComponentDeactivated(class UActorComponent* Component);
	void OnComponentActivated(class UActorComponent* Component, bool wasReset);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponAttachmentGhillie
// 0x0058 (FullSize[0x07D0] - InheritedSize[0x0778])
class AWeaponAttachmentGhillie : public AWeaponAttachment
{
public:
	class USkeletalMeshComponent*                      EquippedSkeletalMeshComponent;                             // 0x0778(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UClass*, struct FMeshMaterialPair>      WeaponToSkeletalMeshMapping;                               // 0x0780(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponAttachmentGhillie"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponAttachmentMagazine
// 0x0060 (FullSize[0x07D8] - InheritedSize[0x0778])
class AWeaponAttachmentMagazine : public AWeaponAttachment
{
public:
	struct FGameplayTagContainer                       AmmunitionTags;                                            // 0x0778(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                               RequiresFullCapacityOnLoad;                                // 0x0798(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_P8U0[0x7];                                     // 0x0799(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      DefaultFillAmmo;                                           // 0x07A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                InitialAmmo;                                               // 0x07A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AGSK[0x4];                                     // 0x07AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FAmmunitionData>                     _ammoData;                                                 // 0x07B0(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TArray<struct FAmmunitionData>                     _ammoOwnerHelper;                                          // 0x07C0(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	int                                                _capacity;                                                 // 0x07D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0YOV[0x4];                                     // 0x07D4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponAttachmentMagazine"));
		return ptr;
	}



	void SetAmmo(TArray<struct FAmmunitionData> ammo);
	void Server_InsertCartridgeIntoMagazine(class AAmmunitionItem* ammo);
	struct FAmmunitionData RemoveAmmo();
	void OnRep_AmmoOwnerHelper();
	void OnRep_AmmoData();
	void OnAmmoChangedEvent();
	void Multicast_SetLoadedVariables(TArray<struct FAmmunitionData> ammo);
	class UClass* GetTopmostProjectileClass();
	bool GetTopmostAmmunitionData(struct FAmmunitionData* Data);
	int GetCapacity();
	int GetAmmoCount();
	void GetAmmo(TArray<struct FAmmunitionData>* ammo);
	void FillWithDefaultAmmo(int count);
	void EmptyAmmo();
	void AddAmmoSingle(const struct FAmmunitionData& ammo);
	void AddAmmo(TArray<struct FAmmunitionData> ammo);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponAttachmentSight
// 0x0018 (FullSize[0x0790] - InheritedSize[0x0778])
class AWeaponAttachmentSight : public AWeaponAttachment
{
public:
	struct FName                                       ViewCenterSocketName;                                      // 0x0778(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     AimingDownTheSightsLocationOffset;                         // 0x0780(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_53KV[0x4];                                     // 0x078C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponAttachmentSight"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponAttachmentScope
// 0x01B0 (FullSize[0x0940] - InheritedSize[0x0790])
class AWeaponAttachmentScope : public AWeaponAttachmentSight
{
public:
	unsigned char                                      UnknownData_881K[0x8];                                     // 0x0790(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     ScopeViewOffset;                                           // 0x0798(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y2R8[0x4];                                     // 0x07A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FScopeZoomLevelSettings>             ZoomLevelSettings;                                         // 0x07A8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          ScopeLensPostProcess;                                      // 0x07B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       LensZoomParameterName;                                     // 0x07C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               FrontFocalPlane;                                           // 0x07C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HasCrosshairParallax;                                      // 0x07C9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GJHP[0x6];                                     // 0x07CA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  ScopingTexture;                                            // 0x07D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 ScopeViewMesh;                                             // 0x07D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 ScopeViewLensMesh;                                         // 0x07E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                _montageStandingFP;                                        // 0x07E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                _montageCrouchingFP;                                       // 0x07F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                _montageProneFP;                                           // 0x07F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                _montageStandingTP;                                        // 0x0800(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                _montageCrouchingTP;                                       // 0x0808(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                _montageProneTP;                                           // 0x0810(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              _scopingStartDelay;                                        // 0x0818(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              _scopingStopDelay;                                         // 0x081C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               _canToggleDownTheSightsMode;                               // 0x0820(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G08A[0x7];                                     // 0x0821(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTextureRenderTarget2D*                      TextRenderTarget;                                          // 0x0828(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      WeaponScopeWidget;                                         // 0x0830(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       GlassCenterSocketName;                                     // 0x0838(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                WindageInitialOffset;                                      // 0x0840(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OCMI[0x4];                                     // 0x0844(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               WindageClickAudioEvent;                                    // 0x0848(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        _scopeViewMesh;                                            // 0x0850(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _scopeViewLensMesh;                                        // 0x0858(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _fakeGlassMinOpacity;                                      // 0x0860(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_90CV[0x78];                                    // 0x0864(0x0078) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _displayBrightnessMultiplier;                              // 0x08DC(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CH1O[0x60];                                    // 0x08E0(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponAttachmentScope"));
		return ptr;
	}



	void SetZoomLevelOnServer(int zoomLevel);
	void SetWindageOnServer(int Windage);
	void SetLoadedVariablesOnClient(int zoomLevel, int Windage, float displayBrightnessMultiplier);
	void Server_SetDisplayBrightnessMultiplier(float Value);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponAttachmentScopeRail
// 0x0008 (FullSize[0x0780] - InheritedSize[0x0778])
class AWeaponAttachmentScopeRail : public AWeaponAttachment
{
public:
	struct FName                                       ScopeSocketName;                                           // 0x0778(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponAttachmentScopeRail"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponAttachmentSuppressor
// 0x0010 (FullSize[0x0788] - InheritedSize[0x0778])
class AWeaponAttachmentSuppressor : public AWeaponAttachment
{
public:
	struct FName                                       MuzzleSocketName;                                          // 0x0778(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NoiseMultiplier;                                           // 0x0780(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsImprovised;                                              // 0x0784(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y9A6[0x3];                                     // 0x0785(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponAttachmentSuppressor"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponAttachmentUniversalFlashlight
// 0x0050 (FullSize[0x07F0] - InheritedSize[0x07A0])
class AWeaponAttachmentUniversalFlashlight : public AWeaponAttachmentFlashlight
{
public:
	TMap<class UClass*, class UStaticMesh*>            WeaponToStaticMeshMapping;                                 // 0x07A0(0x0050) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponAttachmentUniversalFlashlight"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Weapon
// 0x25A8 (FullSize[0x2D48] - InheritedSize[0x07A0])
class AWeapon : public AWeaponItem
{
public:
	struct FScriptMulticastDelegate                    AttachmentAdded;                                           // 0x07A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    AttachmentRemoved;                                         // 0x07B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TIQS[0x30];                                    // 0x07C0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMeshComponent*                      SkeletalMesh;                                              // 0x07F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EWeaponFiringStateType                        WeaponFiringStateType;                                     // 0x07F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1G1Q[0x7];                                     // 0x07F9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWeaponStateFiring*                          TempWeaponStateFiringAutomatic;                            // 0x0800(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponStateFiring*                          TempWeaponStateFiringSemiAutomatic;                        // 0x0808(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponStateFiring*                          TempWeaponStateFiringManual;                               // 0x0810(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponStateFiring*                          TempWeaponStateFiringBurst;                                // 0x0818(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponStateActiveManualFiring*              TempWeaponStateActiveManualFiring;                         // 0x0820(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponStateFiring*                          FiringState;                                               // 0x0828(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<ConZ_EWeaponFiringMode>                     SupportedFiringModes;                                      // 0x0830(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UStaticMeshComponent*>                CartridgeMeshComponents;                                   // 0x0840(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              ReloadActionSequenceClasses;                               // 0x0850(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              UnloadAmmoActionSequenceClasses;                           // 0x0860(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              CheckAmmoActionSequenceClasses;                            // 0x0870(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UWeaponActionReloadSequence*>         ReloadActionSequences;                                     // 0x0880(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UWeaponActionClearMalfunctionSequence*> ClearMalfunctionActionSequences;                           // 0x0890(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UWeaponActionUnloadAmmoSequence*>     UnloadAmmoActionSequences;                                 // 0x08A0(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UWeaponActionCheckAmmoSequence*>      CheckAmmoActionSequences;                                  // 0x08B0(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       AmmunitionTags;                                            // 0x08C0(0x0020) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UClass*                                      DefaultAmmunitionItemClass;                                // 0x08E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RequiredAmmoForShot;                                       // 0x08E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxLoadedAmmo;                                             // 0x08EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                InitialAmmo;                                               // 0x08F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                InternalMagazineCapacity;                                  // 0x08F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                BurstShotsCount;                                           // 0x08F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IgnoreProceduralDownTheSightFiringAnimation;               // 0x08FC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W3BA[0x3];                                     // 0x08FD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                FireAnimation;                                             // 0x0900(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                FireAnimationLastRound;                                    // 0x0908(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                FireAnimationBody;                                         // 0x0910(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                FirstPersonFireAnimationBody;                              // 0x0918(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                FireAutomaticAnimationBody;                                // 0x0920(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBodyWeaponAnimation                        BodyWeaponAnimationChamber;                                // 0x0928(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class UAnimMontage*                                CheckFiringModeAnimationBody;                              // 0x0938(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimMontage*                                ChangeFiringModeAnimationBody;                             // 0x0940(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UClass*, struct FWeaponAttachmentAnimations> AttachmentsAnimations;                                     // 0x0948(0x0050) (Edit, NativeAccessSpecifierPublic)
	struct FName                                       MuzzleSocketName;                                          // 0x0998(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       GripCorrectionSocketName;                                  // 0x09A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AimingDownTheSightsCenterSocketName;                       // 0x09A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       EjectCasingSocketName;                                     // 0x09B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IgnoreSupportingHandIK;                                    // 0x09B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N3O8[0x3];                                     // 0x09B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       SupportingHandIKSocketName;                                // 0x09BC(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SupportingHandIKLocation;                                  // 0x09C4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     AimingDownTheSightsLocationOffset;                         // 0x09D0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     HolsteredOnPrisonerLocationOffset;                         // 0x09DC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    HolsteredOnPrisonerRotationOffset;                         // 0x09E8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               UseWeaponFOVWhileScoping;                                  // 0x09F4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EIJK[0x3];                                     // 0x09F5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              WeaponFOVWhileScoping;                                     // 0x09F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     WeaponCameraOffsetWhileScoping;                            // 0x09FC(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                          OffsetPerAspectRatioWhileScoping;                          // 0x0A08(0x0088) (Edit, NativeAccessSpecifierPublic)
	bool                                               IgnoreZeroRangeChange;                                     // 0x0A90(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JPSI[0x3];                                     // 0x0A91(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ZeroRange;                                                 // 0x0A94(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ZeroRangeStep;                                             // 0x0A98(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ZeroRangeMax;                                              // 0x0A9C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UProjectileImpactEffects*                    InstantHitImpactEffects;                                   // 0x0AA0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FieldOfView;                                               // 0x0AA8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DepthOfFieldFocalDistance;                                 // 0x0AAC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DepthOfFieldFstop;                                         // 0x0AB0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ObstaclesDetectionOffset;                                  // 0x0AB4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseFiringModeBoneRotation;                                 // 0x0AB8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8DTL[0x3];                                     // 0x0AB9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRotator                                    FiringModeBoneRotations[0x3];                              // 0x0ABC(0x0024) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FPostProcessSettings                        PostProcessSettings;                                       // 0x0AE0(0x0550) (Edit, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           RelaxedGripCorrectionAnimationPose[0x4];                   // 0x1030(0x0020) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           AimingHipAnimationPose[0x4];                               // 0x1050(0x0020) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           AimingDownTheSightsAnimationPose[0x4];                     // 0x1070(0x0020) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           AimingDownTheSightsStillAnimationPose[0x4];                // 0x1090(0x0020) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           AimingDownTheSightsWalkingAnimationPose[0x4];              // 0x10B0(0x0020) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           AimingDownTheSightsLimpingWalkingAnimationPose[0x4];       // 0x10D0(0x0020) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           FirstPersonUpperBodyStandIdleAnimation;                    // 0x10F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           FirstPersonUpperBodyStandWalkAnimation;                    // 0x10F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace1D*                               FirstPersonUpperBodyStandWalkBlendSpace;                   // 0x1100(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace1D*                               FirstPersonUpperBodyLimpingStandWalkBlendSpace;            // 0x1108(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           FirstPersonUpperBodyStandJogAnimation;                     // 0x1110(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace1D*                               FirstPersonUpperBodyStandJogBlendSpace;                    // 0x1118(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace1D*                               FirstPersonUpperBodyLimpingStandJogBlendSpace;             // 0x1120(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           FirstPersonUpperBodyStandRunAnimation;                     // 0x1128(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           FirstPersonUpperBodyCrouchIdleAnimation;                   // 0x1130(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           FirstPersonUpperBodyCrouchWalkAnimation;                   // 0x1138(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace1D*                               FirstPersonUpperBodyCrouchWalkBlendSpace;                  // 0x1140(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace1D*                               FirstPersonUpperBodyLimpingCrouchWalkBlendSpace;           // 0x1148(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           FirstPersonUpperBodyProneIdleAnimation;                    // 0x1150(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                                 WeaponAimOffsets[0x7];                                     // 0x1158(0x0038) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ConZ_EWeaponCategory                               WeaponCategory;                                            // 0x1190(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IgnoreAimingSpread;                                        // 0x1191(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseCustomWeaponSpreadData;                                 // 0x1192(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y3QU[0x1];                                     // 0x1193(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FWeaponSpreadData                           WeaponSpreadData;                                          // 0x1194(0x0040) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               UseCustomWeaponViewKickData;                               // 0x11D4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XUXX[0x3];                                     // 0x11D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FWeaponViewKickData                         WeaponViewKickData;                                        // 0x11D8(0x0018) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                              ViewKickMultiplier;                                        // 0x11F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxRecoilOffset;                                           // 0x11F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoilRecoverySpeed;                                       // 0x11F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MuzzleEffectsScaleDistanceStart;                           // 0x11FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MuzzleEffectsScaleDistanceRange;                           // 0x1200(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MuzzleEffectsScaleByDistanceFactor;                        // 0x1204(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChamberBulletDelay;                                        // 0x1208(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ChamberBulletAutomatically;                                // 0x120C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_J40R[0x3];                                     // 0x120D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DamagePerShot;                                             // 0x1210(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               TestWeapon;                                                // 0x1214(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F0TT[0x3];                                     // 0x1215(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FFireAnimationData>                  WornOutFiringAnimations;                                   // 0x1218(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                               CanBeInspectedWhenMalfunctioned;                           // 0x1228(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_P5ZU[0x7];                                     // 0x1229(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                InspectModeAnimation;                                      // 0x1230(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseCustomMalfunctionChances;                               // 0x1238(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YDL2[0x3];                                     // 0x1239(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FWeaponMalfunctionChances                   MalfunctionChances;                                        // 0x123C(0x0038) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FName                                       StovePipeSocketName;                                       // 0x1274(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N3IZ[0x4];                                     // 0x127C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMesh*                                 StovePipeMesh;                                             // 0x1280(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       DoubleFeedSocketName;                                      // 0x1288(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 DoubleFeedMesh;                                            // 0x1290(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              ClearMalfunctionSequenceClasses;                           // 0x1298(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<ConZ_EWeaponMalfunction, struct FWeaponMalfunctionData> MalfunctionsData;                                          // 0x12A8(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              DTSModeLerpDurationIn;                                     // 0x12F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DTSModeLerpDurationOut;                                    // 0x12FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 DownTheSightsModeLerpCurveOverride;                        // 0x1300(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponState*                                _currentState;                                             // 0x1308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponState*                                _activeState;                                              // 0x1310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponStateEquipping*                       _equippingState;                                           // 0x1318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponState*                                _unequippingStateDefault;                                  // 0x1320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponState*                                _unequippingState;                                         // 0x1328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponState*                                _inactiveState;                                            // 0x1330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponState*                                _chamberBulletState;                                       // 0x1338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponStateReload*                          _reloadState2;                                             // 0x1340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponStateClearMalfunction*                _clearMalfunctionState;                                    // 0x1348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponStateUnloadAmmo*                      _unloadAmmoState;                                          // 0x1350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponStateCheckAmmo*                       _checkAmmoState;                                           // 0x1358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             _muzzlePS;                                                 // 0x1360(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             _suppressorMuzzlePS;                                       // 0x1368(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    _muzzlePSC;                                                // 0x1370(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             _smokeAfterShotFiredPS;                                    // 0x1378(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    _smokeAfterShotFiredPSC;                                   // 0x1380(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             _ejectCasingPS;                                            // 0x1388(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             _ejectLiveRoundPS;                                         // 0x1390(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APrisoner*                                   _weaponOwner;                                              // 0x1398(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FAmmunitionData>                     _loadedAmmoData;                                           // 0x13A0(0x0010) (Net, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8YRJ[0x2];                                     // 0x13B0(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _shouldOverrideUseMuzzleDirectionForShooting;              // 0x13B2(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _useMuzzleDirectionForShootingOverride;                    // 0x13B3(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AActor>                       _projectileTargetLocationOverride;                         // 0x13B4(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_F44O[0x70];                                    // 0x13BC(0x0070) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ConZ_EWeaponFiringMode                             _firingMode;                                               // 0x142C(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0J3O[0x13];                                    // 0x142D(0x0013) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AWeaponAttachment*>                   _weaponAttachmentsReplicated;                              // 0x1440(0x0010) (Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_31MM[0x28];                                    // 0x1450(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FAmmunitionData>                     _internalMagazineAmmoData;                                 // 0x1478(0x0010) (Net, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int                                                _usedAmmoCount;                                            // 0x1488(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3Q5D[0x1];                                     // 0x148C(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _shouldPlayChamberOpenedIdle;                              // 0x148D(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2VCZ[0xB];                                     // 0x148E(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isInGameEvent;                                            // 0x1499(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HGAW[0x6];                                     // 0x149A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               _fireSingleShotAudioEvent;                                 // 0x14A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _startAutoFireAudioEvent;                                  // 0x14A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _stopAutoFireAudioEvent;                                   // 0x14B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _suppressorFireSingleShotAudioEvent;                       // 0x14B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _suppressorStartAutoFireAudioEvent;                        // 0x14C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _suppressorStopAutoFireAudioEvent;                         // 0x14C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _improvisedSuppressorFireSingleShotAudioEvent;             // 0x14D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _improvisedSuppressorStartAutoFireAudioEvent;              // 0x14D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _improvisedSuppressorStopAutoFireAudioEvent;               // 0x14E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _noAmmoAudioEvent;                                         // 0x14E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _dryFireUncockedAudioEvent;                                // 0x14F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _zeroRangeClickAudioEvent;                                 // 0x14F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _changeFiringModeAudioEvent;                               // 0x1500(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _onMalfunctionAudioEvent;                                  // 0x1508(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _switchADSStateAudioEvent;                                 // 0x1510(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _indoorSmallHearingDamageAudioEvent;                       // 0x1518(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _indoorMediumHearingDamageAudioEvent;                      // 0x1520(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _indoorLargeHearingDamageAudioEvent;                       // 0x1528(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _outdoorLargeHearingDamageAudioEvent;                      // 0x1530(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _makeNoiseLoudness;                                        // 0x1538(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LKMS[0x20];                                    // 0x153C(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _staminaDrainMultiplier;                                   // 0x155C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EPrisonerTempCategory                         _staminaDrainCategory;                                     // 0x1560(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PBGH[0xB];                                     // 0x1561(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ConZ_EWeaponMalfunction                            _malfunction;                                              // 0x156C(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EWeaponBehaviourMode                          _behaviourMode;                                            // 0x156D(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZXEI[0x22];                                    // 0x156E(0x0022) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _loadedAmmunitionItemClass;                                // 0x1590(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IJMZ[0x8];                                     // 0x1598(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _loadedProjectileClass;                                    // 0x15A0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _defaultProjectileClass;                                   // 0x15A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ODY8[0xC];                                     // 0x15B0(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _totalControllerPitchAmountToAdd;                          // 0x15BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _controllerPitchAddTimeFrame;                              // 0x15C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_O45X[0x1784];                                  // 0x15C4(0x1784) Fix Super Size


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Weapon"));
		return ptr;
	}



	void UpdateReloadData(struct FWeaponReloadData* reloadDataIn, struct FWeaponReloadData* reloadDataOut);
	void UpdateAmmunitionMeshes(TArray<int> ammoIndices);
	void Unequip();
	void StopFiringEffects();
	void StopFireOnServer();
	void StopFire();
	void StartFireOnServer();
	void StartFire();
	bool ShouldPlayChamberOpenedIdle();
	bool ShouldPlayCasingEjectedSound();
	bool ShouldClearMalfunctionOnEvent(ConZ_EWeaponMalfunction malfunction, ConZ_EWeaponMalfunctionEvent malfunctionEvent);
	void SetZeroRangeOnServer(int ZeroRange);
	void SetUseMuzzleDirectionForShooting(bool Value);
	void SetStaminaAmountToDrain(float Value);
	void SetShouldPlayChamberOpenedIdle(bool Value);
	void SetMalfunction(ConZ_EWeaponMalfunction Type);
	void SetMakeNoiseLoudness(bool Value);
	void SetLoadedProjectileClass(class UClass* projectileClass);
	void SetIsScopingAllowed(bool Value);
	void SetIsChambering(bool Value);
	void SetFiringModeOnServer(ConZ_EWeaponFiringMode Value);
	void SetFiringMode(ConZ_EWeaponFiringMode Value);
	void Server_SwapAttachments(class AWeaponAttachment* oldAttachment, class AWeaponAttachment* newAttachment);
	void Server_StopFiringEffects();
	void Server_StopChamberEffects();
	void Server_SetMalfunction(ConZ_EWeaponMalfunction Type);
	void Server_SetBehaviourMode(ConZ_EWeaponBehaviourMode Mode);
	void Server_RemoveCartridgeFromWeapon();
	void Server_PlayFiringEffects(bool isLastShot);
	void Server_PlayChamberEffects(bool playDryFireSound);
	void Server_OnChamberOpenedClosed();
	void Server_OnChamberOpened();
	void Server_OnChamberClosed();
	void Server_InsertCartridgeIntoWeapon(class AAmmunitionItem* ammo);
	void Server_FireShotProjectile(const struct FFireShotProjectileData& Data, const struct FFireShotDescription& desc);
	void Server_CancelFiringEffects();
	void ResetZeroRange();
	void RequestClearMalfunction(ConZ_EWeaponMalfunction malfunction);
	void RemoveAttachmentOnServer(class AWeaponAttachment* attachment);
	void RemoveAttachmentLocal(class AWeaponAttachment* attachment);
	void RemoveAttachment(class AWeaponAttachment* attachment);
	void RemoveAmmo(int Amount);
	void PlayFiringEffects(bool isLastShot);
	void OnWeaponActionAnimNotify(ConZ_EWeaponActionNotifyType notifyType);
	void OnStaminaDrained();
	void OnShotFired(bool isLastShot);
	void OnRep_WeaponAttachmentsReplicated();
	void OnRep_Malfunction();
	void OnRep_FireShotCounterEffectsSync();
	void OnRep_BehaviourMode();
	void OnChamberOpened();
	void OnChamberClosed();
	void NotifyMissOnServer(const struct FVector_NetQuantizeNormal& shootDirection, int randomSeed, float reticleSpread);
	void NotifyHitOnServer(const struct FHitResult& HitResult, const struct FVector_NetQuantizeNormal& shootDirection, int randomSeed, float reticleSpread);
	void NetMulticast_StopFiringEffects();
	void NetMulticast_StopFire();
	void NetMulticast_StopChamberEffects();
	void NetMulticast_StartFire();
	void NetMulticast_PlayFiringEffects(bool isLastShot);
	void NetMulticast_PlayChamberEffects(bool playDryFireSound);
	void NetMulticast_CancelFiringEffects();
	bool IsMalfunctionSupported(ConZ_EWeaponMalfunction malfunction);
	bool IsInGameEvent();
	bool IsFiring();
	bool IsChamberOpened();
	bool IsAmmoInMagazineCompatible(class AWeaponAttachmentMagazine* magazine);
	bool IsAmmoCompatible(const struct FGameplayTag& AmmunitionTag);
	void IncrementZeroRange();
	bool HasEnoughAmmo();
	int GetZeroRange();
	class APrisoner* GetWeaponOwner();
	bool GetUseMuzzleDirectionForShooting();
	int GetUsedAmmoCount();
	ConZ_EWeaponType GetType();
	float GetStaminaAmountToDrain();
	float GetSpread();
	float GetShakiness();
	class UWeaponActionReloadSequence* GetReloadActionSequenceForData(const struct FWeaponReloadData& reloadData);
	class URangedWeaponsSkill* GetRangedWeaponsSkill();
	float GetProbabilityForMalfunction(ConZ_EWeaponMalfunction malfunction, float normalizedHealth);
	struct FVector GetMuzzleLocation();
	struct FVector GetMuzzleDirection();
	void GetMalfunctionsForEvent(ConZ_EWeaponMalfunctionEvent malfunctionEvent, const struct FWeaponMalfunctionEventDescription& desc, TArray<struct FWeaponMalfunctionProbability>* malfunctionsIn, TArray<struct FWeaponMalfunctionProbability>* malfunctionsOut);
	float GetMakeNoiseLoudness();
	class AWeaponAttachmentMagazine* GetMagazine();
	class UClass* GetLoadedProjectileClass();
	int GetLoadedAmmoCount();
	bool GetIsScopingAllowed();
	bool GetIsChambering();
	int GetInternalMagazineSpace();
	int GetInternalMagazineAmmoCount();
	class UAnimMontage* GetFiringMontage(bool isLastShot);
	ConZ_EWeaponFiringMode GetFiringMode();
	struct FBodyWeaponAnimation GetFiringBodyWeaponAnimation();
	struct FAmmunitionData GetDefaultAmmunitionData();
	class UClass* GetAmmunitionItemClass();
	struct FString GetAmmoTypeString();
	int GetAmmoReloadCapacity(class AAmmunitionItem* ammo);
	int GetAmmoCount();
	void FireShot();
	bool FindReloadData(TArray<class AItem*> Items, struct FWeaponReloadData* reloadData);
	void FillUpWithDefaultAmmo();
	void Equip();
	void DestroyAmmunitionMeshes();
	void DecrementZeroRange();
	void CreateAmmunitionMeshes();
	void Client_SetupForEvent();
	void Client_SetLoadedVariables(const struct FWeaponLoadStateSyncData& Data);
	bool CanSwitchFiringMode();
	bool CanReloadUsingData(const struct FWeaponReloadData& Data);
	bool CanFireAgain();
	void CancelFire();
	bool CanBeginFiringSequenceWithMalfunction(ConZ_EWeaponMalfunction malfunction);
	bool CanAddAttachment(class AWeaponAttachment* attachment);
	void AttachmentRemovedSignature__DelegateSignature(class AWeapon* sender, class AWeaponAttachment* attachment);
	void AttachmentAddedSignature__DelegateSignature(class AWeapon* sender, class AWeaponAttachment* attachment);
	void AddAttachmentOnServer(class AWeaponAttachment* attachment);
	void AddAttachmentLocal(class AWeaponAttachment* attachment, bool attach);
	void AddAttachment(class AWeaponAttachment* attachment, bool attach, bool removeExistingOnTheSameMountType);
	void AddAmmoSingle(const struct FAmmunitionData& ammoData);
	void AddAmmo(TArray<struct FAmmunitionData> ammoData);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponBow
// 0x0458 (FullSize[0x31A0] - InheritedSize[0x2D48])
class AWeaponBow : public AWeapon
{
public:
	struct FBodyWeaponAnimation                        InsertArrowAnimations;                                     // 0x2D48(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FBodyWeaponAnimation                        RemoveArrowAnimations;                                     // 0x2D58(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FBodyWeaponAnimation                        UnableToDrawAnimations;                                    // 0x2D68(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FBodyWeaponAnimation                        DrawAnimations2[0x3];                                      // 0x2D78(0x0030) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBodyWeaponAnimation                        DrawWhileAnticipatingDrawAnimations2[0x3];                 // 0x2DA8(0x0030) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBodyWeaponAnimation                        CancelDrawAnimations2[0x3];                                // 0x2DD8(0x0030) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBodyWeaponAnimation                        LooseAnimations2[0x3];                                     // 0x2E08(0x0030) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBodyWeaponAnimation                        LooseLastShotAnimations2[0x3];                             // 0x2E38(0x0030) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponBowAimOffsets                        AimOffsets[0x7];                                           // 0x2E68(0x00A8) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponBowArmsShake                         ArmsShakeAnimamtion[0x4];                                  // 0x2F10(0x00C0) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FBodyWeaponAnimation                        DrawAnimations;                                            // 0x2FD0(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FBodyWeaponAnimation                        DrawWhileAnticipatingDrawAnimations;                       // 0x2FE0(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FBodyWeaponAnimation                        CancelDrawAnimations;                                      // 0x2FF0(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FBodyWeaponAnimation                        LooseAnimations;                                           // 0x3000(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FBodyWeaponAnimation                        LooseLastShotAnimations;                                   // 0x3010(0x0010) (Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           WeaponAimingDownTheSightsAnimationPose;                    // 0x3020(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequenceBase*                           WeaponAimingDownTheSightsStillAnimationPose;               // 0x3028(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponState*                                AnticipateDrawState2;                                      // 0x3030(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponState*                                DrawState3;                                                // 0x3038(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponState*                                CancelFiringState;                                         // 0x3040(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponState*                                AnticipateFiringState;                                     // 0x3048(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponState*                                FireState;                                                 // 0x3050(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponState*                                FireAndInsertArrowState;                                   // 0x3058(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               _fireNoArrowAudioEvent;                                    // 0x3060(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       _arrowSocketName;                                          // 0x3068(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _muzzleVelocity;                                           // 0x3070(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _drawWeight;                                               // 0x3074(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _compoundBowFullDrawHoldTime;                              // 0x3078(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _armShakeTimerDecreaseRate;                                // 0x307C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _damageOnUsage;                                            // 0x3080(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UM1W[0x4];                                     // 0x3084(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWeaponState*                                _bowActiveState2;                                          // 0x3088(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWeaponState*                                _bowInsertArrowState;                                      // 0x3090(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWeaponState*                                _bowRemoveArrowState;                                      // 0x3098(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWeaponStateFiring*                          _bowFiringState2;                                          // 0x30A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YGFE[0x28];                                    // 0x30A8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ConZ_EWeaponBowState                               _bowState;                                                 // 0x30D0(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_12O6[0x3];                                     // 0x30D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FWeaponBowStateDataReplicated               _weaponBowStateDataReplicated;                             // 0x30D4(0x000C) (Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                        _arrowMeshComponent;                                       // 0x30E0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FProjectileArrowData                        _projectileArrowData;                                      // 0x30E8(0x0020) (Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_84GH[0x50];                                    // 0x3108(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isCompound;                                               // 0x3158(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BWYB[0x7];                                     // 0x3159(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        _handTriggerMeshComponent;                                 // 0x3160(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _ignoreArrowStiffness;                                     // 0x3168(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TAE9[0x3];                                     // 0x3169(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _letOff;                                                   // 0x316C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _handTriggerBoneName;                                      // 0x3170(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Q6ER[0x28];                                    // 0x3178(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponBow"));
		return ptr;
	}



	void SetDrawWeight(float drawWeight);
	void Server_SetPendingArrow(class AAmmunitionArrow* arrow);
	void Server_SetDrawAmount(float drawAmount);
	void Server_SetBowStateData(const struct FWeaponBowStateDataReplicated& State);
	void Server_SetBowState(ConZ_EWeaponBowState State);
	void Server_RemoveArrow();
	void Server_InsertArrow(class AAmmunitionArrow* arrow);
	void ReloadArrow();
	void OnRep_BowStateData();
	void OnRep_BowState();
	void OnRep_Arrow();
	void GotoInsertArrowState();
	class AAmmunitionArrow* GetPendingArrow();
	float GetOwnersTotalDrawWeight();
	float GetOwnersDrawWeightByStrength();
	float GetOwnersDrawWeightBySkill();
	float GetDrawWeightDefaultsByStrength(float Strength);
	float GetDrawWeight();
	float GetDrawPercentageDefaultsForParameters(float characterDrawWeight, float bowDrawWeight);
	void EquipArrow(class AAmmunitionArrow* arrow);
	bool CanInsertArrow(class AAmmunitionArrow* arrowItem);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponBowAnimInstance
// 0x0020 (FullSize[0x0310] - InheritedSize[0x02F0])
class UWeaponBowAnimInstance : public UWeaponAnimInstance
{
public:
	unsigned char                                      UnknownData_UDCB[0x8];                                     // 0x02F0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _armsShakeValue;                                           // 0x02F8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _useArrowLookAt;                                           // 0x02FC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WQPJ[0x3];                                     // 0x02FD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequenceBase*                           _aimingDownTheSightsAnimation;                             // 0x0300(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                           _aimingDownTheSightsStillAnimation;                        // 0x0308(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponBowAnimInstance"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponCrossbow
// 0x0058 (FullSize[0x2DA0] - InheritedSize[0x2D48])
class AWeaponCrossbow : public AWeapon
{
public:
	class UWeaponStateFiring*                          FireState;                                                 // 0x2D48(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponState*                                FireAndInsertArrowState;                                   // 0x2D50(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              _muzzleVelocity;                                           // 0x2D58(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9TTO[0x4];                                     // 0x2D5C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCharacterAndItemAnimation                  _crossbowFireAnimation;                                    // 0x2D60(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _crossbowFireAudioEvent;                                   // 0x2D70(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _crossbowDryFireAudioEvent;                                // 0x2D78(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWeaponState*                                _crossbowActiveState;                                      // 0x2D80(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isCocked;                                                 // 0x2D88(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_726M[0x17];                                    // 0x2D89(0x0017) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponCrossbow"));
		return ptr;
	}



	void SetIsCocked(bool Value);
	void Server_HandleFiringEffects(bool shotFired);
	void NetMulticast_SetLoadedVariablesForCrossbow(bool isCocked);
	void Multicast_HandleFiringEffects(bool shotFired);
	bool GetIsCocked();
	ConZ_EWeaponCrossbowDrawCategory GetDrawCategory();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponCrossbowAnimInstance
// 0x0010 (FullSize[0x0300] - InheritedSize[0x02F0])
class UWeaponCrossbowAnimInstance : public UWeaponAnimInstance
{
public:
	unsigned char                                      UnknownData_LJMC[0x8];                                     // 0x02F0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isCocked;                                                 // 0x02F8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HMZI[0x7];                                     // 0x02F9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponCrossbowAnimInstance"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponDamageGroup
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UWeaponDamageGroup : public UDataAsset
{
public:
	float                                              head;                                                      // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Neck;                                                      // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Torso;                                                     // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ArmUpper;                                                  // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Abdomen;                                                   // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LegUpper;                                                  // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OtherLimbs;                                                // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L94S[0x4];                                     // 0x004C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponDamageGroup"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponDamageStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UWeaponDamageStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponDamageStatics"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponHolsterItem
// 0x0038 (FullSize[0x0850] - InheritedSize[0x0818])
class AWeaponHolsterItem : public AClothesItem
{
public:
	unsigned char                                      UnknownData_BU8U[0x8];                                     // 0x0818(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AWeapon*                                     _holsteredWeaponRep;                                       // 0x0820(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _maxLocationSocketName;                                    // 0x0828(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _minLocationSocketName;                                    // 0x0830(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _fatLocationSocketName;                                    // 0x0838(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _leanLocationSocketName;                                   // 0x0840(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _staticMeshSocketName;                                     // 0x0848(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponHolsterItem"));
		return ptr;
	}



	void OnRep_HolsteredWeapon();
	bool HolsterWeapon(class AWeapon* Weapon);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponRecoilGroup
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UWeaponRecoilGroup : public UDataAsset
{
public:
	float                                              Up;                                                        // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Down;                                                      // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Left;                                                      // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Right;                                                     // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponRecoilGroup"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponScopeWidget
// 0x0018 (FullSize[0x0290] - InheritedSize[0x0278])
class UWeaponScopeWidget : public UDesignableUserWidget
{
public:
	class UTexture2D*                                  ReticleTexture;                                            // 0x0278(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                      TextRenderTarget;                                          // 0x0280(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FadeFactor;                                                // 0x0288(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OnHideDelay;                                               // 0x028C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponScopeWidget"));
		return ptr;
	}



	void OnShowElements();
	void OnHideElements();
	void OnFadeOutComplete();
	void OnFadeInComplete();
	void OnConstructFinished();
	void BeginFadeIn();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ItemFirstPersonAnimationsDataAsset
// 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
class UItemFirstPersonAnimationsDataAsset : public UDataAsset
{
public:
	struct FItemFirstPersonUpperBodyAnimationsData     UpperBody;                                                 // 0x0030(0x0050) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	class UBlendSpace*                                 AimOffsetStanding;                                         // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                                 AimOffsetCrouching;                                        // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                                 AimOffsetProne;                                            // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ItemFirstPersonAnimationsDataAsset"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponFirstPersonAnimationsDataAsset
// 0x0050 (FullSize[0x00E8] - InheritedSize[0x0098])
class UWeaponFirstPersonAnimationsDataAsset : public UItemFirstPersonAnimationsDataAsset
{
public:
	struct FItemFirstPersonUpperBodyAnimationsData     UpperBodyAimingHip;                                        // 0x0098(0x0050) (Edit, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponFirstPersonAnimationsDataAsset"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponState
// 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
class UWeaponState : public UObject
{
public:
	unsigned char                                      UnknownData_5PHV[0x8];                                     // 0x0028(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponState"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateActive
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UWeaponStateActive : public UWeaponState
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateActive"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateActiveManualFiring
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UWeaponStateActiveManualFiring : public UWeaponState
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateActiveManualFiring"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateBowActive
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UWeaponStateBowActive : public UWeaponState
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateBowActive"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateBowAnticipateDraw
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UWeaponStateBowAnticipateDraw : public UWeaponState
{
public:
	unsigned char                                      UnknownData_5WIY[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateBowAnticipateDraw"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateBowAnticipateFiring
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UWeaponStateBowAnticipateFiring : public UWeaponState
{
public:
	unsigned char                                      UnknownData_DIDI[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateBowAnticipateFiring"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateBowCancelFiring
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UWeaponStateBowCancelFiring : public UWeaponState
{
public:
	unsigned char                                      UnknownData_WJ6K[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateBowCancelFiring"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateBowDraw
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UWeaponStateBowDraw : public UWeaponState
{
public:
	unsigned char                                      UnknownData_99TO[0x20];                                    // 0x0030(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateBowDraw"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateFiring
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UWeaponStateFiring : public UWeaponState
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateFiring"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateBowFire
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UWeaponStateBowFire : public UWeaponStateFiring
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateBowFire"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateBowFireAndInsertArrow
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UWeaponStateBowFireAndInsertArrow : public UWeaponStateFiring
{
public:
	unsigned char                                      UnknownData_NXDO[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateBowFireAndInsertArrow"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateBowFiring
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UWeaponStateBowFiring : public UWeaponStateFiring
{
public:
	unsigned char                                      UnknownData_IUYZ[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateBowFiring"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateBowInsertArrow
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UWeaponStateBowInsertArrow : public UWeaponState
{
public:
	unsigned char                                      UnknownData_EAU2[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateBowInsertArrow"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateBowRemoveArrow
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UWeaponStateBowRemoveArrow : public UWeaponState
{
public:
	unsigned char                                      UnknownData_9877[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateBowRemoveArrow"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateChamberBullet
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UWeaponStateChamberBullet : public UWeaponState
{
public:
	unsigned char                                      UnknownData_O9LZ[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateChamberBullet"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateCheckAmmo
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UWeaponStateCheckAmmo : public UWeaponState
{
public:
	unsigned char                                      UnknownData_CCWI[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateCheckAmmo"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateClearMalfunction
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UWeaponStateClearMalfunction : public UWeaponState
{
public:
	unsigned char                                      UnknownData_C4IK[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateClearMalfunction"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateCrossbowActive
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UWeaponStateCrossbowActive : public UWeaponState
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateCrossbowActive"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateCrossbowFire
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UWeaponStateCrossbowFire : public UWeaponStateFiring
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateCrossbowFire"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateCrossbowFireAndInsertArrow
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UWeaponStateCrossbowFireAndInsertArrow : public UWeaponStateFiring
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateCrossbowFireAndInsertArrow"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateEquipping
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UWeaponStateEquipping : public UWeaponState
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateEquipping"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateFiringAutomatic
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UWeaponStateFiringAutomatic : public UWeaponStateFiring
{
public:
	unsigned char                                      UnknownData_DZ6G[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateFiringAutomatic"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateFiringBurst
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UWeaponStateFiringBurst : public UWeaponStateFiringAutomatic
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateFiringBurst"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateFiringManual
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UWeaponStateFiringManual : public UWeaponStateFiring
{
public:
	unsigned char                                      UnknownData_T2GY[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateFiringManual"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateFiringSemiAutomatic
// 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
class UWeaponStateFiringSemiAutomatic : public UWeaponStateFiringAutomatic
{
public:
	unsigned char                                      UnknownData_8AT8[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateFiringSemiAutomatic"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateInactive
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UWeaponStateInactive : public UWeaponState
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateInactive"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateReload
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
class UWeaponStateReload : public UWeaponState
{
public:
	unsigned char                                      UnknownData_X6GC[0x38];                                    // 0x0030(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateReload"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateUnEquipping
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UWeaponStateUnEquipping : public UWeaponState
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateUnEquipping"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeaponStateUnloadAmmo
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UWeaponStateUnloadAmmo : public UWeaponState
{
public:
	unsigned char                                      UnknownData_R6HY[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeaponStateUnloadAmmo"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeatherAmbientSounds
// 0x0038 (FullSize[0x0258] - InheritedSize[0x0220])
class AWeatherAmbientSounds : public AActor
{
public:
	float                                              WeatherRTPCsUpdateInterval;                                // 0x0220(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeOfDayRTPCUpdateInterval;                               // 0x0224(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeOfDayRTPCInterpolationSpeed;                           // 0x0228(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SBHF[0x4];                                     // 0x022C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               RainAudioEvent;                                            // 0x0230(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               WindAudioEvent;                                            // 0x0238(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FTR9[0x18];                                    // 0x0240(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeatherAmbientSounds"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeatherCapture2D
// 0x0008 (FullSize[0x0240] - InheritedSize[0x0238])
class AWeatherCapture2D : public ASceneCapture2D
{
public:
	unsigned char                                      UnknownData_HFC3[0x8];                                     // 0x0238(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeatherCapture2D"));
		return ptr;
	}



	void CaptureNextFrame();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WeatherController
// 0x0098 (FullSize[0x02B8] - InheritedSize[0x0220])
class AWeatherController : public AActor
{
public:
	unsigned char                                      UnknownData_GMS2[0x18];                                    // 0x0220(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              TimeOfDay;                                                 // 0x0238(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TimeOfDaySpeed;                                            // 0x023C(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Level1_RainStartWhenStormIs;                               // 0x0240(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Level2_RainStartWhenStormIs;                               // 0x0244(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Level3_RainStartWhenStormIs;                               // 0x0248(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WaterTemperature;                                          // 0x024C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WaterTemperature_Storm;                                    // 0x0250(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WaterTemperatureHeightModifier;                            // 0x0254(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AirTemperature;                                            // 0x0258(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AirTemperature_Storm;                                      // 0x025C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AirTemperatureHeightModifier;                              // 0x0260(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AirPressure;                                               // 0x0264(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AirPressure_Storm;                                         // 0x0268(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AirPressureHeightModifier;                                 // 0x026C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RelativeHumidity;                                          // 0x0270(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RelativeHumidity_Storm;                                    // 0x0274(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RelativeHumidityHeightModifier;                            // 0x0278(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxHeightAboveSeaLevelMeters;                              // 0x027C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              StormIntensity;                                            // 0x0280(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              stormProbabilityMultiplier;                                // 0x0284(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DarknessIntensityMultiplier;                               // 0x0288(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentDarknessIntensityMultiplier;                        // 0x028C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   WindDir;                                                   // 0x0290(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WindSpeed_Result;                                          // 0x0298(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _nightTimeBegin;                                           // 0x029C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _nightTimeEnd;                                             // 0x02A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _duskTimeBegin;                                            // 0x02A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _dawnTimeEnd;                                              // 0x02A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _autosaveInterval;                                         // 0x02AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_K8KX[0x4];                                     // 0x02B0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _shouldSerializeData;                                      // 0x02B4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_D8RZ[0x3];                                     // 0x02B5(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WeatherController"));
		return ptr;
	}



	void UpdateWeatherVisuals(bool shouldStopWeatherTransition);
	void SetTimeOfDay(float Value);
	void SetStormProbabilityMultiplier(float stormProbabilityMultiplier);
	void SetStormIntensity(float Value);
	void SetDarknessIntensityMultiplier(float Intensity);
	void SetCurrentDarknessIntensityMultiplier(float Intensity);
	void NetMulticast_UpdateWeatherVisuals(float newTimeOfDay, float newStormIntensity, bool shouldStopWeatherTransition);
	void HaltWeatherTransition();
	struct FVector GetWindVelocity();
	float GetWaterTemperature(const struct FVector& Location);
	float GetTimeOfDaySpeed();
	float GetTimeOfDay();
	float GetStormProbabilityMultiplier();
	float GetStormIntensity();
	float GetRelativeHumidity(const struct FVector& Location);
	float GetRainIntensity();
	ConZ_EDayPeriod GetDayPeriod();
	float GetDarknessIntensityMultiplier();
	float GetCurrentDarknessIntensityMultiplier();
	float GetAirTemperature(const struct FVector& Location);
	float GetAirPressure(const struct FVector& Location);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WetnessManager
// 0x0048 (FullSize[0x0268] - InheritedSize[0x0220])
class AWetnessManager : public AActor
{
public:
	int                                                MaxNumberOfActiveWettables;                                // 0x0220(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxWettableLifeTime;                                       // 0x0224(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WeatherAndWettableObjectParametersUpdateInterval;          // 0x0228(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8YO3[0x4];                                     // 0x022C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 WettingRateFromRainVsRainIntensity;                        // 0x0230(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WettingRateFromWaterImmersion;                             // 0x0238(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DryingRate;                                                // 0x023C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 DryingRateModifierVsTemperature;                           // 0x0240(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 DryingRateModifierVsRelativeHumidity;                      // 0x0248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AirTemperatureModifierWhenNotExposedToSunlight;            // 0x0250(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_86GW[0x14];                                    // 0x0254(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WetnessManager"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WetnessStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UWetnessStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WetnessStatics"));
		return ptr;
	}



	void SetMaterialsWetness(class UPrimitiveComponent* Component, float wetness);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Wettable
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UWettable : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Wettable"));
		return ptr;
	}



	void SetWaterWeight(float Value);
	float GetWaterWeight();
	float GetMaxWaterWeight();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WheelBarrow
// 0x06E0 (FullSize[0x0960] - InheritedSize[0x0280])
class AWheelBarrow : public APawn
{
public:
	unsigned char                                      UnknownData_WN6G[0x10];                                    // 0x0280(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStaticMeshComponent*                        _meshComponent;                                            // 0x0290(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_B4RQ[0x4];                                     // 0x0298(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _maxDriveOrBoardAngle;                                     // 0x029C(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _speedThresholdToEvictAllMountees;                         // 0x02A0(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _vertSpeedThresholdToEvictAllMountees;                     // 0x02A4(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TYD3[0x18];                                    // 0x02A8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _wheelMeshRadius;                                          // 0x02C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minWheelMeshWobbleAngle;                                  // 0x02C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxWheelMeshWobbleAngle;                                  // 0x02C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_B2ZN[0x24];                                    // 0x02CC(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UWheelBarrowMountSlot*>               _mountSlots;                                               // 0x02F0(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V8GA[0x50];                                    // 0x0300(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVehicleSpawnParameters                     _spawnParameters;                                          // 0x0350(0x002C) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	ConZ_EConZPxDominanceGroup                         _physicsDominanceGroup;                                    // 0x037C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_K6Z3[0x3];                                     // 0x037D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     _driverCapsuleRelativeLocation;                            // 0x0380(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _driverCapsuleMass;                                        // 0x038C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _driverCapsuleLinearDamping;                               // 0x0390(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _driverCapsuleAngularDamping;                              // 0x0394(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _driverCapsuleConstraintRelativeLocation;                  // 0x0398(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _driverCapsuleConstraintSwingLimit;                        // 0x03A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _driverCapsuleConstraintTwistLimit;                        // 0x03A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1IK2[0x4];                                     // 0x03AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  _driverTransformRelativeToCapsule;                         // 0x03B0(0x0030) (Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	float                                              _forwardDriveForceMagnitude;                               // 0x03E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _reverseDriveForceMagnitude;                               // 0x03E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _steerForceMagnitude;                                      // 0x03E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _steerForceMagnitudeWhenLimping;                           // 0x03EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _steerRollTorqueMagnitude;                                 // 0x03F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _meshBrakeForceScale;                                      // 0x03F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _meshBrakeForceMagnitudeWhenCloseToMaxSpeed;               // 0x03F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _meshSidewaysBrakeForceScale;                              // 0x03FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _driverCapsuleBrakeForceScale;                             // 0x0400(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _driverCapsuleBrakeForceMagnitudeWhenCloseToMaxSpeed;      // 0x0404(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _driverCapsuleSidewaysBrakeForceScale;                     // 0x0408(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _physicsMaterialFrictionWhenDriven;                        // 0x040C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _physicsMaterialRestitutionWhenDriven;                     // 0x0410(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _stickyFrictionEnabled;                                    // 0x0414(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Q5V8[0x3];                                     // 0x0415(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _stickyFrictionSpeedThreshold;                             // 0x0418(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _stickyFriction;                                           // 0x041C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _startedMovingAudioEvent;                                  // 0x0420(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _stoppedMovingAudioEvent;                                  // 0x0428(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OUQC[0x10];                                    // 0x0430(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRuntimeFloatCurve                          _driverActionDifficultyVsSpeed;                            // 0x0440(0x0088) (Edit, NativeAccessSpecifierPrivate)
	struct FRuntimeFloatCurve                          _driverActionDifficultyVsSpeedWhenLimping;                 // 0x04C8(0x0088) (Edit, NativeAccessSpecifierPrivate)
	struct FWheelBarrowParametersPerMovementPace       _parametersPerMovementPace[0x4];                           // 0x0550(0x0080) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FFloatInterval                              _maxSpeedModifierInterpedWithDriverDexterity;              // 0x05D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFloatInterval                              _loadModifierInterpedWithDriverStrength;                   // 0x05D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRuntimeFloatCurve                          _weightLoadFactorVsFloorSlopeAngle;                        // 0x05E0(0x0088) (Edit, NativeAccessSpecifierPrivate)
	float                                              _pushImpulseMagnitude;                                     // 0x0668(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NHGN[0x4];                                     // 0x066C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 _pushIntensityCurve;                                       // 0x0670(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _pushDirectionRatioBetweenForwardAndUp;                    // 0x0678(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxDistanceToAllowThePush;                                // 0x067C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxAngularVelocityToAllowThePush;                         // 0x0680(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MACU[0x4];                                     // 0x0684(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _maxHealth;                                                // 0x0688(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5EMO[0x4];                                     // 0x068C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRepairableParams                           _repairableParams;                                         // 0x0690(0x0038) (Edit, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _destroyedAudioEvent;                                      // 0x06C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                             _destroyedParticleSystem;                                  // 0x06D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _healthDrainPerSpeed;                                      // 0x06D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _healthDrainPerLoad;                                       // 0x06DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _healthDrainPerWaterImmersionDepth;                        // 0x06E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _healthDrainUpdateInterval;                                // 0x06E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XCO3[0x8];                                     // 0x06E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRuntimeFloatCurve                          _hitDamageVsHitImpulse;                                    // 0x06F0(0x0088) (Edit, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _damagedByHitAudioEvent;                                   // 0x0778(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _itemContainerClass;                                       // 0x0780(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldDropItemsWhenDestroyed;                             // 0x0788(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TY0Z[0x7];                                     // 0x0789(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AVehicleItemContainer*                       _itemContainer;                                            // 0x0790(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _allowedWaterImmersionDepth;                               // 0x0798(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_F07W[0x4];                                     // 0x079C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWheelBarrowDriverCapsuleComponent*          _driverPhysicsCapsuleComponent;                            // 0x07A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPhysicsConstraintComponent*                 _driverPhysicsConstraintComponent;                         // 0x07A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SQ1G[0x18];                                    // 0x07B0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPhysicalMaterial*                           _physicsMaterialWhenDriven;                                // 0x07C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_M6LL[0x17C];                                   // 0x07D0(0x017C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _sendStateFrequency;                                       // 0x094C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _repState1;                                                // 0x0950(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FXSY[0xF];                                     // 0x0951(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WheelBarrow"));
		return ptr;
	}



	void Server_SendState_Unreliable(const struct FRigidBodyState& meshState, const struct FRigidBodyState& driverState, uint32_t packedControls);
	void Server_SendState_Reliable(const struct FRigidBodyState& meshState, const struct FRigidBodyState& driverState, uint32_t packedControls);
	void OnRep_State1();
	void NetMulticast_PlayDamagedByHitEffects(float Damage);
	void MeshComponent_PhysicsVolumeChanged(class APhysicsVolume* newPhysicsVolume);
	void MeshComponent_OnComponentWake(class UPrimitiveComponent* Component, const struct FName& BoneName);
	void MeshComponent_OnComponentSleep(class UPrimitiveComponent* Component, const struct FName& BoneName);
	class UStaticMeshComponent* GetMesh();
	class AVehicleItemContainer* GetItemContainer();
	class UWheelBarrowDriverCapsuleComponent* GetDriverPhysicsCapsuleComponent();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WheelBarrowCraftedItem
// 0x0008 (FullSize[0x0760] - InheritedSize[0x0758])
class AWheelBarrowCraftedItem : public AItem
{
public:
	class UClass*                                      _wheelBarrowClass;                                         // 0x0758(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WheelBarrowCraftedItem"));
		return ptr;
	}



	class AWheelBarrow* SpawnWheelBarrow(class UClass* wheelBarrowClass);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WheelBarrowDriverCapsuleComponent
// 0x0030 (FullSize[0x0490] - InheritedSize[0x0460])
class UWheelBarrowDriverCapsuleComponent : public UCapsuleComponent
{
public:
	unsigned char                                      UnknownData_1EHM[0x30];                                    // 0x0460(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WheelBarrowDriverCapsuleComponent"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WheelBarrowMountSlot
// 0x0058 (FullSize[0x0108] - InheritedSize[0x00B0])
class UWheelBarrowMountSlot : public UActorComponent
{
public:
	unsigned char                                      UnknownData_UOQ8[0x8];                                     // 0x00B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               _mountAudioEvent;                                          // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _mountPriority;                                            // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _mountUnmountDuration;                                     // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FMountSlotEntryPoint>                _entryPoints;                                              // 0x00C8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _unmountAudioEvent;                                        // 0x00D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EMotionIntensity                              _mountingMotionIntensity;                                  // 0x00E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_EMotionIntensity                              _unmountingMotionIntensity;                                // 0x00E1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XA2X[0x6];                                     // 0x00E2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UObject*                                     _mountee;                                                  // 0x00E8(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UObject*                                     _reservee;                                                 // 0x00F0(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UPhysicalMaterial*>                   _interactionZoneMaterials;                                 // 0x00F8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WheelBarrowMountSlot"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WheelBarrowDriverMountSlot
// 0x0018 (FullSize[0x0120] - InheritedSize[0x0108])
class UWheelBarrowDriverMountSlot : public UWheelBarrowMountSlot
{
public:
	class UAnimSequence*                               _idleAnimation;                                            // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace*                                 _walkJogAnimation;                                         // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace*                                 _walkJogLimpingAnimation;                                  // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WheelBarrowDriverMountSlot"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WheelBarrowPassengerMountSlot
// 0x0018 (FullSize[0x0120] - InheritedSize[0x0108])
class UWheelBarrowPassengerMountSlot : public UWheelBarrowMountSlot
{
public:
	struct FName                                       _socketName;                                               // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlendSpace*                                 _idleAnimation;                                            // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVehicleWeaponAimingParameters*              _vehicleWeaponAimingParameters;                            // 0x0118(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WheelBarrowPassengerMountSlot"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WindowFortificationsType
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UWindowFortificationsType : public UDataAsset
{
public:
	TMap<class UClass*, class UStaticMesh*>            MeshForFortification;                                      // 0x0030(0x0050) (Edit, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WindowFortificationsType"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WorldCraftingMarkerWidget
// 0x0008 (FullSize[0x0318] - InheritedSize[0x0310])
class UWorldCraftingMarkerWidget : public UWaypointWidget
{
public:
	class UCraftingInfoWidget*                         _craftingInfo;                                             // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WorldCraftingMarkerWidget"));
		return ptr;
	}



	void ChangeMode(ConZ_ECraftingMarkerMode Mode);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WorldEventManager
// 0x0030 (FullSize[0x0250] - InheritedSize[0x0220])
class AWorldEventManager : public AActor
{
public:
	TArray<class UClass*>                              EventTypes;                                                // 0x0220(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                              TimeBetweenEventsMin;                                      // 0x0230(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeBetweenEventsMax;                                      // 0x0234(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2GND[0x8];                                     // 0x0238(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AWorldEvent*>                         _events;                                                   // 0x0240(0x0010) (Net, ZeroConstructor, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WorldEventManager"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.WorldStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UWorldStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.WorldStatics"));
		return ptr;
	}



	struct FVector TransformWorldPositionToTargetFOV(class UObject* WorldContextObject, float FieldOfView, const struct FVector& WorldPosition);
	bool IsWorldStreamed(class UObject* WorldContextObject);
	bool IsLocationOverWaterSurface(class UObject* WorldContextObject, const struct FVector& Location);
	bool IsLocationInSafeZone(class UObject* WorldContextObject, const struct FVector& Location);
	bool IsLocationInDangerZone(class UObject* WorldContextObject, const struct FVector& Location);
	bool IsEveryStreamedLevelLoadedAtLocation(class UObject* WorldContextObject, const struct FVector& Location);
	bool IsEnvironmentClassOutdoor(ConZ_EEnvironmentClass Value);
	bool IsEnvironmentClassIndoor(ConZ_EEnvironmentClass Value);
	float GetExtraAirTemperatureFromHeatSourcesAtLocation(class UObject* WorldContextObject, const struct FVector& Location);
	struct FEnvironmentDescription GetEnvironmentDescriptionAtLocation(class UObject* WorldContextObject, const struct FVector& Location);
	float GetDistanceToClosestPlayerPawnOrSpectator(class UWorld* World, const struct FVector& Location);
	bool FindTeleportSpotInArea(class AActor* Actor, struct FVector* Location, struct FRotator* Rotation, float MinRadius, float MaxRadius, int numIterationsPerRadius, int numIterationsPerSlice);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Wristwatch
// 0x0030 (FullSize[0x0250] - InheritedSize[0x0220])
class AWristwatch : public AActor
{
public:
	class USkeletalMeshComponent*                      SkeletalMesh;                                              // 0x0220(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextureRenderTarget2D*                      TextRenderTarget;                                          // 0x0228(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFont*                                       TimeFont;                                                  // 0x0230(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TextScaleX;                                                // 0x0238(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TextScaleY;                                                // 0x023C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Time;                                                      // 0x0240(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_H8WJ[0xC];                                     // 0x0244(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Wristwatch"));
		return ptr;
	}



	void SetDisplayBrightness(float Value);
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.XMLAttributeMap
// 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
class UXMLAttributeMap : public UObject
{
public:
	unsigned char                                      UnknownData_GJHD[0x10];                                    // 0x0028(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.XMLAttributeMap"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.XMLStatics
// 0x0000 (FullSize[0x0028] - InheritedSize[0x0028])
class UXMLStatics : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.XMLStatics"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ZincDeficiency
// 0x0000 (FullSize[0x01C0] - InheritedSize[0x01C0])
class UZincDeficiency : public UDeficiency
{
public:


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ZincDeficiency"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.Zombie2
// 0x02B8 (FullSize[0x0980] - InheritedSize[0x06C8])
class AZombie2 : public AConZCharacter
{
public:
	unsigned char                                      UnknownData_XZWZ[0x8];                                     // 0x06C8(0x0008) Fix Super Size
	unsigned char                                      UnknownData_CC5A[0x8];                                     // 0x06D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UNavigationInvokerComponent*                 _navigationInvokerComponent;                               // 0x06D8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHitReactComponent*                          _hitReactComponent;                                        // 0x06E0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FZombieMeshVariation2>               _meshVariations;                                           // 0x06E8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FZombieRelaxedStanceVariation2>      _relaxedStanceVariations;                                  // 0x06F8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FZombieCombatStanceVariation2>       _combatStanceVariations;                                   // 0x0708(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FZombieTurnMontageDescription               _turnMontageDescriptions[0x4];                             // 0x0718(0x00A0) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	class UAnimMontage*                                _gettingUpMontage;                                         // 0x07B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UAnimMontage*>                        _intimidateMontages;                                       // 0x07C0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FZombieAttackDescription>            _attacks;                                                  // 0x07D0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FGameplayTag                                _hitReactType;                                             // 0x07E0(0x0008) (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _throwingDamageMultiplier;                                 // 0x07E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _throwingDamageMultiplierPerBodyPart[0xC];                 // 0x07EC(0x0030) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _projectileDamageMultiplier;                               // 0x081C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _projectileDamageMultiplierPerBodyPart[0xC];               // 0x0820(0x0030) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _explosionDamageMultiplier;                                // 0x0850(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _ragdollHitImpulseStrengthPerUnitDamage;                   // 0x0854(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minDynamicMovementBaseSpeedForRagdoll;                    // 0x0858(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _eyeViewPointOffset;                                       // 0x085C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _receivedMeleeDamageMultiplier;                            // 0x0860(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _meleeDamageMultiplierPerBodyPart[0xC];                    // 0x0864(0x0030) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _receivedDamageComboCooldown;                              // 0x0894(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _receivedMeleeHitComboCooldown;                            // 0x0898(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _inflictedMeleeHitComboCooldown;                           // 0x089C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minRagdollRecoveryTimeAfterKnockout;                      // 0x08A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxRagdollRecoveryTimeAfterKnockout;                      // 0x08A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minLandingImpactSpeedForDamage;                           // 0x08A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _landingDamagePerImpactSpeed;                              // 0x08AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _landingImpactSpeedForRagdoll;                             // 0x08B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minRagdollRecoveryTimeAfterLanding;                       // 0x08B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxRagdollRecoveryTimeAfterLanding;                       // 0x08B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5VJS[0x4];                                     // 0x08BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ULandingEffects*                             _landingEffects;                                           // 0x08C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _corpseSearchDuration;                                     // 0x08C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _corpseMaxLifeTimeInMinutes;                               // 0x08CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _destroyCorpseTimerInterval;                               // 0x08D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minDistanceToPlayerPawnOrSpectatorToDestroyCorpse;        // 0x08D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32_t                                           _packedZombieVariationIndices;                             // 0x08D8(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _hitPoints;                                                // 0x08DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _receivedMeleeDamageKnockoutChanceMultiplier;              // 0x08E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _inflictedMeleeDamageMultiplier;                           // 0x08E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ConZ_ECharacterKnockoutRestistance                 _knockoutResistance;                                       // 0x08E8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_A69J[0x3];                                     // 0x08E9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _knockoutChanceIncreasePerHit;                             // 0x08EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _health;                                                   // 0x08F0(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isSearched;                                               // 0x08F4(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SRCX[0x1];                                     // 0x08F5(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	ConZ_EZombieStance                                 _stance;                                                   // 0x08F6(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CLCW[0x1];                                     // 0x08F7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class APawn>                        _foe;                                                      // 0x08F8(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7MBU[0x78];                                    // 0x0900(0x0078) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _inflictedDamageMultiplierConfig;                          // 0x0978(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FFQR[0x4];                                     // 0x097C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.Zombie2"));
		return ptr;
	}



	bool StartAttack(class APawn* foe);
	void SetStance(ConZ_EZombieStance Value);
	void SetFoe(class APawn* Value);
	void Server_StartAttack(int attackDescriptionIndex);
	void Server_SetStance(ConZ_EZombieStance Value);
	void Server_PlayTurnMontage(ConZ_EZombieTurnMontage turnMontage, float turnAngle);
	void Server_PlayMontage(class UAnimMontage* Montage);
	void RecoverFromRagdoll();
	void OnRep_Stance(ConZ_EZombieStance OldValue);
	void OnRep_IsSearched(bool OldValue);
	void OnRep_Health(float OldValue);
	void NetMulticast_StartAttack(int attackDescriptionIndex);
	void NetMulticast_PlayTurnMontage(ConZ_EZombieTurnMontage turnMontage, float turnAngle);
	void NetMulticast_PlaySound(class UAkAudioEvent* Sound);
	void NetMulticast_PlayMontage(class UAnimMontage* Montage);
	void NetMulticast_HandleLanded(const struct FVector& ImpactVelocity, const struct FHitResult& HitResult);
	bool IsRagdollAtRest();
	bool IsInRagdoll();
	bool IsAttacking();
	void GoToRagdoll(const struct FZombieRagdollAutoRecovery& autoRecovery);
	class UZombieSoundComponent2* GetZombieSoundComponent();
	class UZombieMovementComponent2* GetZombieMovement();
	ConZ_EZombieStance GetStance();
	float GetMaxHealth();
	class UHitReactComponent* GetHitReactComponent();
	float GetHealthRatio();
	float GetHealth();
	class APawn* GetFoe();
	struct FRotator GetAimOffset();
	bool CanStartAttack();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ZombieAIController2
// 0x0328 (FullSize[0x0650] - InheritedSize[0x0328])
class AZombieAIController2 : public AAIController
{
public:
	class UAISenseConfig_Sight*                        _lyingSightSenseConfig;                                    // 0x0328(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAISenseConfig_Hearing*                      _lyingHearingSenseConfig;                                  // 0x0330(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _stateMachineTickIntervalWhenInRelaxedState;               // 0x0338(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldWander;                                             // 0x033C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldWanderAroundWanderOrigin;                           // 0x033D(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7V3C[0x2];                                     // 0x033E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _maxWanderingRadius;                                       // 0x0340(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minTimeToRestBeforeWandering;                             // 0x0344(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxTimeToRestBeforeWandering;                             // 0x0348(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldBecomeAlertedBySight;                               // 0x034C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3FZ8[0x3];                                     // 0x034D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _minLineOfSightDurationToBecomeAlerted;                    // 0x0350(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxLineOfSightDurationToBecomeAlerted;                    // 0x0354(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldBecomeAlertedByHearing;                             // 0x0358(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_G42M[0x3];                                     // 0x0359(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _minDelayBeforeBecomingAlertedByHearing;                   // 0x035C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxDelayBeforeBecomingAlertedByHearing;                   // 0x0360(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_93M8[0x4];                                     // 0x0364(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAISenseConfig_Sight*                        _relaxedIdleSightSenseConfig;                              // 0x0368(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAISenseConfig_Hearing*                      _relaxedIdleHearingSenseConfig;                            // 0x0370(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAISenseConfig_Sight*                        _relaxedWanderSightSenseConfig;                            // 0x0378(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAISenseConfig_Hearing*                      _relaxedWanderHearingSenseConfig;                          // 0x0380(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _stateMachineTickIntervalWhenInAlertedState;               // 0x0388(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minObservingForLineOfSightStartDelay;                     // 0x038C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxObservingForLineOfSightStartDelay;                     // 0x0390(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minInvestigateStimulusDelay;                              // 0x0394(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxInvestigateStimulusDelay;                              // 0x0398(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minEnterCombatModeDelay;                                  // 0x039C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxEnterCombatModeDelay;                                  // 0x03A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _distanceAtWhichToIgnoreEnterCombatModeDelay;              // 0x03A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveVector*                                _observingCurve;                                           // 0x03A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _observingCurvePeriod;                                     // 0x03B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _observingCurveMaxYaw;                                     // 0x03B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _observingCurveMaxPitch;                                   // 0x03B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8RK7[0x4];                                     // 0x03BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAISenseConfig_Sight*                        _alertedSightSenseConfig;                                  // 0x03C0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAISenseConfig_Hearing*                      _alertedHearingSenseConfig;                                // 0x03C8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _stateMachineTickIntervalWhenInCombatState;                // 0x03D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldAttack;                                             // 0x03D4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldBackOffIfTooCloseToFoe;                             // 0x03D5(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _shouldPredictFoeLocation;                                 // 0x03D6(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JV2B[0x1];                                     // 0x03D7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 _foeLocationPredictionStrengthVsDistanceToFoe;             // 0x03D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _attackDistance;                                           // 0x03E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _minNumConsecutiveInflictedMeleeHitsToIntimidate;          // 0x03E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _maxNumConsecutiveInflictedMeleeHitsToIntimidate;          // 0x03E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minTimeBeforeFoeIsConsideredUnreachable;                  // 0x03EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxTimeBeforeFoeIsConsideredUnreachable;                  // 0x03F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minTimeSinceLastAttackWhileFoeIsInLineOfSightToIntimidate; // 0x03F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxTimeSinceLastAttackWhileFoeIsInLineOfSightToIntimidate; // 0x03F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _costOfJumpingInPathLength;                                // 0x03FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minPathPointDistance;                                     // 0x0400(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDetectionDelayTimerData                    _detectionDelayTimerData;                                  // 0x0404(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9Z3J[0x4];                                     // 0x0414(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AZombie2*                                    _zombie;                                                   // 0x0418(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4C59[0x230];                                   // 0x0420(0x0230) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ZombieAIController2"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ZombieAnimInstance2
// 0x00B8 (FullSize[0x0370] - InheritedSize[0x02B8])
class UZombieAnimInstance2 : public UAnimInstance
{
public:
	unsigned char                                      UnknownData_CM9D[0x7];                                     // 0x02B8(0x0007) Fix Super Size
	bool                                               IsStanceAlerted;                                           // 0x02BF(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsStanceCombat;                                            // 0x02C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2121[0x3];                                     // 0x02C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                NumRelaxedIdleVariations;                                  // 0x02C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RelaxedIdleVariationIndex;                                 // 0x02C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     Acceleration;                                              // 0x02CC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               WantsToMove;                                               // 0x02D8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2N8X[0x3];                                     // 0x02D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     Velocity;                                                  // 0x02DC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Speed;                                                     // 0x02E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpeedXY;                                                   // 0x02EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WalkStoppingDistance;                                      // 0x02F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WalkStoppingTime;                                          // 0x02F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsFalling;                                                 // 0x02F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsJumping;                                                 // 0x02F9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_246G[0x2];                                     // 0x02FA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              JumpApex;                                                  // 0x02FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              JumpDuration;                                              // 0x0300(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    AimOffset;                                                 // 0x0304(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               CanStartGoToLoop;                                          // 0x0310(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AH1Y[0x7];                                     // 0x0311(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequenceBase*                           RelaxedWalkLoopAnimation;                                  // 0x0318(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RelaxedWalkLoopAnimationPlayRate;                          // 0x0320(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IH69[0x4];                                     // 0x0324(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequenceBase*                           CombatRunStartAnimation;                                   // 0x0328(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CombatRunStartAnimationPlayRate;                           // 0x0330(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_740Z[0x4];                                     // 0x0334(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequenceBase*                           CombatRunLoopAnimation;                                    // 0x0338(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CombatRunLoopAnimationPlayRate;                            // 0x0340(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IB3A[0x4];                                     // 0x0344(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimSequenceBase*                           CombatRunStopAnimation;                                    // 0x0348(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CombatRunStopAnimationStartTime;                           // 0x0350(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CombatRunStopAnimationPlayRate;                            // 0x0354(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinUpperBodyBlendWeight;                                   // 0x0358(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UpperBodyBlendMaxSpeedXY;                                  // 0x035C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UpperBodyBlendWeight;                                      // 0x0360(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3GDQ[0xC];                                     // 0x0364(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ZombieAnimInstance2"));
		return ptr;
	}



	void AnimNotify_RFootDown();
	void AnimNotify_LFootDown();
	void AnimNotify_GoToRagdoll();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ZombieArmorDamageReductionAssetData
// 0x0090 (FullSize[0x00B8] - InheritedSize[0x0028])
class UZombieArmorDamageReductionAssetData : public UAssetUserData
{
public:
	float                                              ThrowingDamageMultiplierPerBodyPart[0xC];                  // 0x0028(0x0030) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProjectileDamageMultiplierPerBodyPart[0xC];                // 0x0058(0x0030) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeleeDamageMultiplierPerBodyPart[0xC];                     // 0x0088(0x0030) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ZombieArmorDamageReductionAssetData"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ZombieCorpse
// 0x0010 (FullSize[0x0400] - InheritedSize[0x03F0])
class AZombieCorpse : public ACorpse
{
public:
	class USkeletalMesh*                               StrippedMesh;                                              // 0x03F0(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               _isSearched;                                               // 0x03F8(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RFMR[0x7];                                     // 0x03F9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ZombieCorpse"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ZombieKamikazeComponent
// 0x00E8 (FullSize[0x0198] - InheritedSize[0x00B0])
class UZombieKamikazeComponent : public UActorComponent
{
public:
	class AConZCharacter*                              _owningCharacter;                                          // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _beepingDistance;                                          // 0x00B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _explosionDistance;                                        // 0x00BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _autoExplosionTime;                                        // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BKYS[0x4];                                     // 0x00C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _baseDamage;                                               // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minimumDamage;                                            // 0x00CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _damageInnerRadius;                                        // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _damageOuterRadius;                                        // 0x00D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _damageFalloff;                                            // 0x00D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YFRQ[0x4];                                     // 0x00DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               _explosionAudioEvent;                                      // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _beepingStartAudioEvent;                                   // 0x00E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _beepingEndAudioEvent;                                     // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X2AW[0x8];                                     // 0x00F8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UParticleSystem*                             _explosionPS;                                              // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _explosionCameraShakeClass;                                // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterial*                                   _bloodDecal;                                               // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minBloodDecalSize;                                        // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxBloodDecalSize;                                        // 0x011C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minBloodScalarParamValue;                                 // 0x0120(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxBloodScalarParamValue;                                 // 0x0124(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _bloodScalarParameterValueName;                            // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterial*                                   _sootDecal;                                                // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minSootDecalSize;                                         // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxSootDecalSize;                                         // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minSootScalarParamValue;                                  // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxSootScalarParamValue;                                  // 0x0144(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _sootScalarParameterValueName;                             // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _decalsLifeSpan;                                           // 0x0150(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _decalFadeFactor;                                          // 0x0154(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _maximumNumberOfChunksSpawned;                             // 0x0158(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minVelocityMagnitude;                                     // 0x015C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxVelocityMagnitude;                                     // 0x0160(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _velocityHalfAngle;                                        // 0x0164(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _timeAfterChunksAreDeleted;                                // 0x0168(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KPJM[0x4];                                     // 0x016C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UStaticMesh*>                         _bodyPartChunks;                                           // 0x0170(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WSA0[0x10];                                    // 0x0180(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _shouldExplodeOnDeath;                                     // 0x0190(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X9Z1[0x7];                                     // 0x0191(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ZombieKamikazeComponent"));
		return ptr;
	}



	void NetMulticast_HandleExplosion();
	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ZombieMovementComponent2
// 0x0008 (FullSize[0x0B10] - InheritedSize[0x0B08])
class UZombieMovementComponent2 : public UConZCharacterMovementComponent
{
public:
	unsigned char                                      UnknownData_Q9ML[0x8];                                     // 0x0B08(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ZombieMovementComponent2"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

// Class ConZ.ZombieSoundComponent2
// 0x0040 (FullSize[0x0118] - InheritedSize[0x00D8])
class UZombieSoundComponent2 : public UCharacterSoundComponent
{
public:
	class UAkAudioEvent*                               RelaxedStanceEnteredAudioEvent;                            // 0x00D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               AlertedStanceEnteredAudioEvent;                            // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               CombatStanceEnteredAudioEvent;                             // 0x00E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               FootstepAudioEvent;                                        // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopAllAudioEvent;                                         // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               DeathAudioEvent;                                           // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StartSearchCorpseAudioEvent;                               // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               StopSearchCorpseAudioEvent;                                // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass(_xor_("Class ConZ.ZombieSoundComponent2"));
		return ptr;
	}



	void AfterRead();
	void BeforeDelete();

};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
